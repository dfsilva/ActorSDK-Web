{"version":3,"sources":["../../src/utils/ImageUtils.js"],"names":["loadImage","renderImageToCanvas","getDimentions","lightbox","dataURItoBlob","dataURI","byteString","atob","split","mimeString","buffer","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","Blob","type","source","Promise","resolve","reject","image","document","createElement","onerror","onload","setAttribute","src","canvas","then","width","height","ctx","getContext","drawImage","_blurRect","maxWidth","maxHeight"],"mappings":";;;;QA0BgBA,S,GAAAA,S;QAeAC,mB,GAAAA,mB;QAWAC,a,GAAAA,a;;AAjDhB;;AACA;;;;;;AAJA;;;AAMA,IAAMC,WAAW,8BAAjB;;AAEA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACjC,MAAMC,aAAaC,KAAKF,QAAQG,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAL,CAAnB;AACA,MAAMC,aAAaJ,QAAQG,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAnB;AACA,MAAME,SAAS,IAAIC,WAAJ,CAAgBL,WAAWM,MAA3B,CAAf;;AAEA,MAAIC,OAAO,IAAIC,UAAJ,CAAeJ,MAAf,CAAX;AACA,OAAK,IAAIK,CAAT,IAAcT,UAAd,EAA0B;AACxBO,SAAKE,CAAL,IAAUT,WAAWU,UAAX,CAAsBD,CAAtB,CAAV;AACD;;AAED,SAAO,IAAIE,IAAJ,CAAS,CAACJ,IAAD,CAAT,EAAiB,EAAEK,MAAMT,UAAR,EAAjB,CAAP;AACD,CAXD;;QAcEN,Q,GAAAA,Q;QACAC,a,GAAAA,a;AAGK,SAASJ,SAAT,CAAmBmB,MAAnB,EAA2B;AAChC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,QAAQC,SAASC,aAAT,CAAuB,KAAvB,CAAd;AACAF,UAAMG,OAAN,GAAgBJ,MAAhB;AACAC,UAAMI,MAAN,GAAe,YAAM;AACnBJ,YAAMG,OAAN,GAAgB,IAAhB;AACAH,YAAMI,MAAN,GAAe,IAAf;AACAN,cAAQE,KAAR;AACD,KAJD;;AAMAA,UAAMK,YAAN,CAAmB,aAAnB,EAAkC,WAAlC;AACAL,UAAMM,GAAN,GAAYV,MAAZ;AACD,GAXM,CAAP;AAYD;;AAEM,SAASlB,mBAAT,CAA6BkB,MAA7B,EAAqCW,MAArC,EAA6C;AAClD,SAAO9B,UAAUmB,MAAV,EAAkBY,IAAlB,CAAuB,UAACR,KAAD,EAAW;AACvC,QAAMS,QAAQF,OAAOE,KAAP,GAAeT,MAAMS,KAAnC;AACA,QAAMC,SAASH,OAAOG,MAAP,GAAgBV,MAAMU,MAArC;;AAEA,QAAMC,MAAMJ,OAAOK,UAAP,CAAkB,IAAlB,CAAZ;AACAD,QAAIE,SAAJ,CAAcb,KAAd,EAAqB,CAArB,EAAwB,CAAxB,EAA2BS,KAA3B,EAAkCC,MAAlC;AACAC,QAAIG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBL,KAApB,EAA2BC,MAA3B,EAAmC,CAAnC,EAAsC,CAAtC;AACD,GAPM,CAAP;AAQD;;AAEM,SAAS/B,aAAT,CAAuB8B,KAAvB,EAA8BC,MAA9B,EAAuE;AAAA,MAAjCK,QAAiC,uEAAtB,GAAsB;AAAA,MAAjBC,SAAiB,uEAAL,GAAK;;AAC5E,MAAIP,QAAQC,MAAZ,EAAoB;AAClB,QAAID,QAAQM,QAAZ,EAAsB;AACpB,aAAO;AACLN,eAAOM,QADF;AAELL,gBAAQA,UAAUK,WAAWN,KAArB;AAFH,OAAP;AAID;AACF,GAPD,MAOO,IAAIC,SAASM,SAAb,EAAwB;AAC7B,WAAO;AACLP,aAAOA,SAASO,YAAYN,MAArB,CADF;AAELA,cAAQM;AAFH,KAAP;AAID;;AAED,SAAO,EAAEP,YAAF,EAASC,cAAT,EAAP;AACD","file":"ImageUtils.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\nimport '../vendor/canvasBlurRect';\r\nimport Lightbox from 'jsonlylightbox';\r\n\r\nconst lightbox = new Lightbox();\r\n\r\nconst dataURItoBlob = (dataURI) => {\r\n  const byteString = atob(dataURI.split(',')[1]);\r\n  const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n  const buffer = new ArrayBuffer(byteString.length);\r\n\r\n  let view = new Uint8Array(buffer);\r\n  for (let i in byteString) {\r\n    view[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  return new Blob([view], { type: mimeString });\r\n};\r\n\r\nexport {\r\n  lightbox,\r\n  dataURItoBlob\r\n};\r\n\r\nexport function loadImage(source) {\r\n  return new Promise((resolve, reject) => {\r\n    const image = document.createElement('img')\r\n    image.onerror = reject;\r\n    image.onload = () => {\r\n      image.onerror = null;\r\n      image.onload = null;\r\n      resolve(image);\r\n    };\r\n\r\n    image.setAttribute('crossOrigin', 'anonymous');\r\n    image.src = source;\r\n  });\r\n}\r\n\r\nexport function renderImageToCanvas(source, canvas) {\r\n  return loadImage(source).then((image) => {\r\n    const width = canvas.width = image.width;\r\n    const height = canvas.height = image.height;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(image, 0, 0, width, height);\r\n    ctx._blurRect(0, 0, width, height, 4, 1);\r\n  });\r\n}\r\n\r\nexport function getDimentions(width, height, maxWidth = 300, maxHeight = 400) {\r\n  if (width > height) {\r\n    if (width > maxWidth) {\r\n      return {\r\n        width: maxWidth,\r\n        height: height * (maxWidth / width)\r\n      };\r\n    }\r\n  } else if (height > maxHeight) {\r\n    return {\r\n      width: width * (maxHeight / height),\r\n      height: maxHeight\r\n    };\r\n  }\r\n\r\n  return { width, height };\r\n}\r\n"]}
{"version":3,"sources":["../../src/utils/confirm.js"],"names":["confirm","Confirm","props","onKeyDown","event","keyCode","ESC","preventDefault","reject","promise","Promise","resolve","SharedActor","get","intlData","forceLocale","componentDidMount","toggleAutoFocus","refs","focus","document","addEventListener","componentWillUnmount","removeEventListener","renderDescription","description","render","message","abortLabel","confirmLabel","propTypes","node","isRequired","string","options","element","createElement","className","wrapper","body","appendChild","component","cleanup","setImmediate","remove","then"],"mappings":"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","file":"confirm.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes, createElement } from 'react';\r\nimport { render, findDOMNode, unmountComponentAtNode } from 'react-dom';\r\nimport { KeyCodes } from '../constants/ActorAppConstants';\r\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\r\nimport { IntlProvider, FormattedMessage } from 'react-intl';\r\nimport { getIntlData } from '../l18n';\r\nimport SharedContainer from '../utils/SharedContainer';\r\n\r\nclass Confirm extends Component {\r\n  static propTypes = {\r\n    message: PropTypes.node.isRequired,\r\n    description: PropTypes.string,\r\n    abortLabel: PropTypes.string,\r\n    confirmLabel: PropTypes.string\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.reject = reject;\r\n      this.resolve = resolve;\r\n    });\r\n\r\n    const SharedActor = SharedContainer.get();\r\n    this.intlData = getIntlData(SharedActor.forceLocale);\r\n  }\r\n\r\n  componentDidMount() {\r\n    ComposeActionCreators.toggleAutoFocus(false);\r\n    findDOMNode(this.refs.confirm).focus();\r\n    document.addEventListener('keydown', this.onKeyDown, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    ComposeActionCreators.toggleAutoFocus(true);\r\n    document.removeEventListener('keydown', this.onKeyDown, false);\r\n  }\r\n\r\n  renderDescription() {\r\n    const { description } = this.props;\r\n    if (!description) return null;\r\n\r\n    return (\r\n      <div className=\"modal__body\">{description}</div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { message, abortLabel, confirmLabel } = this.props;\r\n\r\n    return (\r\n      <IntlProvider {...this.intlData}>\r\n        <div className=\"modal\">\r\n\r\n          <div className=\"confirm\">\r\n            <div className=\"modal__content\">\r\n\r\n              <header className=\"modal__header\">\r\n                <h1>{message}</h1>\r\n              </header>\r\n\r\n              {this.renderDescription()}\r\n\r\n              <footer className=\"modal__footer text-right\">\r\n                <button className=\"button\" onClick={this.reject}>\r\n                  {abortLabel || <FormattedMessage id=\"button.cancel\"/>}\r\n                </button>\r\n                <button className=\"button button--lightblue\" onClick={this.resolve} ref=\"confirm\">\r\n                  {confirmLabel ||<FormattedMessage id=\"button.ok\"/>}\r\n                </button>\r\n              </footer>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </IntlProvider>\r\n    );\r\n  }\r\n\r\n  onKeyDown = (event) => {\r\n    if (event.keyCode === KeyCodes.ESC) {\r\n      event.preventDefault();\r\n      this.reject();\r\n    }\r\n  };\r\n}\r\n\r\nexport default function confirm(message, options = {})  {\r\n  const element = document.createElement('div');\r\n  element.className = 'modal-overlay';\r\n\r\n\r\n  const wrapper = document.body.appendChild(element);\r\n\r\n  const component = render(createElement(Confirm, { message, ...options }), wrapper);\r\n\r\n  function cleanup() {\r\n    unmountComponentAtNode(wrapper);\r\n    setImmediate(() => wrapper.remove());\r\n  }\r\n\r\n  // Unmount component and remove it from DOM\r\n  component.promise.then(\r\n    () => cleanup(),\r\n    () => cleanup()\r\n  );\r\n\r\n  return component.promise;\r\n}\r\n"]}
{"version":3,"sources":["../../src/utils/Inputs.js"],"names":["inputs","getInputSelection","el","start","end","normalizedValue","range","textInputRange","len","endRange","selectionStart","selectionEnd","document","selection","createRange","parentElement","value","length","replace","createTextRange","moveToBookmark","getBookmark","collapse","compareEndPoints","moveStart","slice","split","moveEnd"],"mappings":";;;AAAA,IAAMA,SAAS;AACbC,qBAAmB,2BAACC,EAAD,EAAQ;AACzB,QAAIC,QAAQ,CAAZ;AAAA,QAAeC,MAAM,CAArB;AAAA,QAAwBC,eAAxB;AAAA,QAAyCC,KAAzC;AAAA,QACEC,cADF;AAAA,QACkBC,GADlB;AAAA,QACuBC,QADvB;;AAGA,QAAI,OAAOP,GAAGQ,cAAV,KAA6B,QAA7B,IAAyC,OAAOR,GAAGS,YAAV,KAA2B,QAAxE,EAAkF;AAChFR,cAAQD,GAAGQ,cAAX;AACAN,YAAMF,GAAGS,YAAT;AACD,KAHD,MAGO;AACLL,cAAQM,SAASC,SAAT,CAAmBC,WAAnB,EAAR;;AAEA,UAAIR,SAASA,MAAMS,aAAN,OAA0Bb,EAAvC,EAA2C;AACzCM,cAAMN,GAAGc,KAAH,CAASC,MAAf;AACAZ,0BAAkBH,GAAGc,KAAH,CAASE,OAAT,CAAiB,OAAjB,EAA0B,IAA1B,CAAlB;;AAEA;AACAX,yBAAiBL,GAAGiB,eAAH,EAAjB;AACAZ,uBAAea,cAAf,CAA8Bd,MAAMe,WAAN,EAA9B;;AAEA;AACA;AACA;AACAZ,mBAAWP,GAAGiB,eAAH,EAAX;AACAV,iBAASa,QAAT,CAAkB,KAAlB;;AAEA,YAAIf,eAAegB,gBAAf,CAAgC,YAAhC,EAA8Cd,QAA9C,IAA0D,CAAC,CAA/D,EAAkE;AAChEN,kBAAQC,MAAMI,GAAd;AACD,SAFD,MAEO;AACLL,kBAAQ,CAACI,eAAeiB,SAAf,CAAyB,WAAzB,EAAsC,CAAChB,GAAvC,CAAT;AACAL,mBAASE,gBAAgBoB,KAAhB,CAAsB,CAAtB,EAAyBtB,KAAzB,EAAgCuB,KAAhC,CAAsC,IAAtC,EAA4CT,MAA5C,GAAqD,CAA9D;;AAEA,cAAIV,eAAegB,gBAAf,CAAgC,UAAhC,EAA4Cd,QAA5C,IAAwD,CAAC,CAA7D,EAAgE;AAC9DL,kBAAMI,GAAN;AACD,WAFD,MAEO;AACLJ,kBAAM,CAACG,eAAeoB,OAAf,CAAuB,WAAvB,EAAoC,CAACnB,GAArC,CAAP;AACAJ,mBAAOC,gBAAgBoB,KAAhB,CAAsB,CAAtB,EAAyBrB,GAAzB,EAA8BsB,KAA9B,CAAoC,IAApC,EAA0CT,MAA1C,GAAmD,CAA1D;AACD;AACF;AACF;AACF;;AAED,WAAO;AACLd,aAAOA,KADF;AAELC,WAAKA;AAFA,KAAP;AAID;AA7CY,CAAf;;kBAgDeJ,M","file":"Inputs.js","sourcesContent":["const inputs = {\r\n  getInputSelection: (el) => {\r\n    var start = 0, end = 0, normalizedValue, range,\r\n      textInputRange, len, endRange;\r\n\r\n    if (typeof el.selectionStart === 'number' && typeof el.selectionEnd === 'number') {\r\n      start = el.selectionStart;\r\n      end = el.selectionEnd;\r\n    } else {\r\n      range = document.selection.createRange();\r\n\r\n      if (range && range.parentElement() === el) {\r\n        len = el.value.length;\r\n        normalizedValue = el.value.replace(/\\r\\n/g, '\\n');\r\n\r\n        // Create a working TextRange that lives only in the input\r\n        textInputRange = el.createTextRange();\r\n        textInputRange.moveToBookmark(range.getBookmark());\r\n\r\n        // Check if the start and end of the selection are at the very end\r\n        // of the input, since moveStart/moveEnd doesn't return what we want\r\n        // in those cases\r\n        endRange = el.createTextRange();\r\n        endRange.collapse(false);\r\n\r\n        if (textInputRange.compareEndPoints('StartToEnd', endRange) > -1) {\r\n          start = end = len;\r\n        } else {\r\n          start = -textInputRange.moveStart('character', -len);\r\n          start += normalizedValue.slice(0, start).split('\\n').length - 1;\r\n\r\n          if (textInputRange.compareEndPoints('EndToEnd', endRange) > -1) {\r\n            end = len;\r\n          } else {\r\n            end = -textInputRange.moveEnd('character', -len);\r\n            end += normalizedValue.slice(0, end).split('\\n').length - 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      start: start,\r\n      end: end\r\n    };\r\n  }\r\n};\r\n\r\nexport default inputs;\r\n"]}
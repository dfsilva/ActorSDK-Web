{"version":3,"sources":["../../src/utils/EmojiUtils.js"],"names":["processEmojiText","include_title","include_text","use_sheet","colons_mode","img_set","img_sets","toEmoji","emoji","getEmojiCategories","emojiCategories","EmojiDataArray","category","title","CVDataTitle","replace","data","CVCategoryData","Data","split","icon","push","emojiRegexp","preloadEmojiSheet","Image","src","sheet","escapeWithEmoji","text","replace_unified","change_replace_mode","emojifiedText","replace_colons"],"mappings":";;;;QA8FgBA,gB,GAAAA,gB;;AA1FhB;;AACA;;;;AACA;;;;AACA;;;;AAPA;;;;AASA,qBAAMC,aAAN,GAAsB,IAAtB;AACA,qBAAMC,YAAN,GAAqB,IAArB;AACA,qBAAMC,SAAN,GAAkB,IAAlB;AACA,qBAAMC,WAAN,GAAoB,KAApB;AACA,qBAAMC,OAAN,GAAgB,OAAhB;AACA,qBAAMC,QAAN,GAAiB;AACf,WAAS;AACP;AACA,aAAS,wBAAKC,OAAL,GAAe,qBAFjB;AAGP,YAAQ;AAHD,GADM;AAMf,YAAU;AACR;AACA,aAAS,wBAAKA,OAAL,GAAe,sBAFhB;AAGR,YAAQ;AAHA,GANK;AAWf,aAAW;AACT;AACA,aAAS,wBAAKA,OAAL,GAAe,uBAFf;AAGT,YAAQ;AAHC,GAXI;AAgBf,cAAY;AACV;AACA,aAAS,wBAAKA,OAAL,GAAe,wBAFd;AAGV,YAAQ;AAHE;AAhBG,CAAjB;;QAuBkBC,K;AAEX,IAAMC,kDAAqB,SAArBA,kBAAqB,GAAM;AACtC,MAAIC,kBAAkB,EAAtB;;AAEA,uBAAqB,2BAAoBC,cAAzC,kHAAyD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,QAAhDC,QAAgD;;AACvD,QAAIC,QAAQD,SAASE,WAAT,CAAqBC,OAArB,CAA6B,QAA7B,EAAuC,EAAvC,CAAZ;AACA,QAAIC,OAAOJ,SAASK,cAAT,CAAwBC,IAAxB,CAA6BC,KAA7B,CAAmC,GAAnC,CAAX;AACA,QAAIC,OAAO,EAAX;;AAEA,YAAQP,KAAR;AACE,WAAK,QAAL;AACEO,eAAO,YAAP;AACA;AACF,WAAK,QAAL;AACEA,eAAO,kBAAP;AACA;AACF,WAAK,OAAL;AACEA,eAAO,aAAP;AACA;AACF,WAAK,aAAL;AACEA,eAAO,QAAP;AACA;AACF,WAAK,UAAL;AACEA,eAAO,YAAP;AACA;AACF,WAAK,QAAL;AACEA,eAAO,YAAP;AACA;AACF,WAAK,SAAL;AACEA,eAAO,QAAP;AACA;AACF,WAAK,OAAL;AACEA,eAAO,WAAP;AACA;AACF,WAAK,SAAL;AACEA,eAAO,gBAAP;AACA;AACF;AA5BF;;AA+BAV,oBAAgBW,IAAhB,CAAqB,EAAER,YAAF,EAASO,UAAT,EAAeJ,UAAf,EAArB;AACD;;AAED,SAAON,eAAP;AACD,CA3CM;;AA6CA,IAAMY,oCAAc,gEAApB;;AAEA,IAAMC,gDAAoB,SAApBA,iBAAoB;AAAA,SAAO,IAAIC,KAAJ,EAAD,CAAcC,GAAd,GAAoB,qBAAMnB,QAAN,CAAe,qBAAMD,OAArB,EAA8BqB,KAAxD;AAAA,CAA1B;;AAEA,IAAMC,4CAAkB,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AACvC,uBAAM3B,aAAN,GAAsB,KAAtB;AACA,uBAAMC,YAAN,GAAqB,KAArB;AACA,SAAO,qBAAM2B,eAAN,CAAsB,oBAAOD,IAAP,CAAtB,CAAP;AACD,CAJM;;AAMA,SAAS5B,gBAAT,CAA0B4B,IAA1B,EAAgC;AACrC,uBAAM3B,aAAN,GAAsB,IAAtB;AACA,uBAAMC,YAAN,GAAqB,IAArB;AACA,uBAAM4B,mBAAN,CAA0B,KAA1B;;AAEA,MAAIC,gBAAgBH,IAApB;AACAG,kBAAgB,qBAAMC,cAAN,CAAqBJ,IAArB,CAAhB;AACAG,kBAAgB,qBAAMF,eAAN,CAAsBE,aAAtB,CAAhB;;AAEA,SAAOA,aAAP;AACD;;kBAEc;AACbvB,6BADa;AAEbc,0BAFa;AAGbb,wCAHa;AAIbc,sCAJa;AAKbI;AALa,C","file":"EmojiUtils.js","sourcesContent":["/*\r\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { escape } from 'lodash';\r\nimport emoji from 'actor-emoji';\r\nimport emojiDataCategories from 'actor-emoji/emoji_categories';\r\nimport { Path } from '../constants/ActorAppConstants';\r\n\r\nemoji.include_title = true;\r\nemoji.include_text = true;\r\nemoji.use_sheet = true;\r\nemoji.colons_mode = false;\r\nemoji.img_set = 'apple';\r\nemoji.img_sets = {\r\n  'apple': {\r\n    // 'path': Path.toEmoji + '/img-apple-64/',\r\n    'sheet': Path.toEmoji + '/sheet_apple_64.png',\r\n    'mask': 1\r\n  },\r\n  'google': {\r\n    // 'path': Path.toEmoji + '/img-google-64/',\r\n    'sheet': Path.toEmoji + '/sheet_google_64.png',\r\n    'mask': 2\r\n  },\r\n  'twitter': {\r\n    // 'path': Path.toEmoji + '/img-twitter-64/',\r\n    'sheet': Path.toEmoji + '/sheet_twitter_64.png',\r\n    'mask': 4\r\n  },\r\n  'emojione': {\r\n    // 'path': Path.toEmoji + '/img-emojione-64/',\r\n    'sheet': Path.toEmoji + '/sheet_emojione_64.png',\r\n    'mask': 8\r\n  }\r\n};\r\n\r\nexport { emoji as emoji };\r\n\r\nexport const getEmojiCategories = () => {\r\n  let emojiCategories = [];\r\n\r\n  for (let category of emojiDataCategories.EmojiDataArray) {\r\n    let title = category.CVDataTitle.replace(/^(.*)-/, '');\r\n    let data = category.CVCategoryData.Data.split(',');\r\n    let icon = '';\r\n\r\n    switch (title) {\r\n      case 'People':\r\n        icon = ':grinning:';\r\n        break;\r\n      case 'Nature':\r\n        icon = ':evergreen_tree:';\r\n        break;\r\n      case 'Foods':\r\n        icon = ':hamburger:';\r\n        break;\r\n      case 'Celebration':\r\n        icon = ':gift:';\r\n        break;\r\n      case 'Activity':\r\n        icon = ':football:';\r\n        break;\r\n      case 'Places':\r\n        icon = ':airplane:';\r\n        break;\r\n      case 'Objects':\r\n        icon = ':bulb:';\r\n        break;\r\n      case 'Flags':\r\n        icon = ':flag-ru:';\r\n        break;\r\n      case 'Symbols':\r\n        icon = ':peace_symbol:';\r\n        break;\r\n      default:\r\n    }\r\n\r\n    emojiCategories.push({ title, icon, data });\r\n  }\r\n\r\n  return emojiCategories;\r\n};\r\n\r\nexport const emojiRegexp = /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g;\r\n\r\nexport const preloadEmojiSheet = () => (new Image()).src = emoji.img_sets[emoji.img_set].sheet;\r\n\r\nexport const escapeWithEmoji = (text) => {\r\n  emoji.include_title = false;\r\n  emoji.include_text = false;\r\n  return emoji.replace_unified(escape(text));\r\n};\r\n\r\nexport function processEmojiText(text) {\r\n  emoji.include_title = true;\r\n  emoji.include_text = true;\r\n  emoji.change_replace_mode('css');\r\n\r\n  let emojifiedText = text;\r\n  emojifiedText = emoji.replace_colons(text);\r\n  emojifiedText = emoji.replace_unified(emojifiedText);\r\n\r\n  return emojifiedText;\r\n}\r\n\r\nexport default {\r\n  emoji,\r\n  emojiRegexp,\r\n  getEmojiCategories,\r\n  preloadEmojiSheet,\r\n  escapeWithEmoji\r\n};\r\n"]}
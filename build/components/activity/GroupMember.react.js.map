{"version":3,"sources":["../../../src/components/activity/GroupMember.react.js"],"names":["GroupMember","props","onClick","id","selectDialogPeerUser","onKick","gid","uid","peerInfo","name","title","then","kickMember","getStores","calculateState","prevState","nextProps","kickUserState","getKickUserState","peer","renderControls","canKick","state","myId","getUid","render","avatar","placeholder","__html","propTypes","object","isRequired","bool","number","create","pure","withProps"],"mappings":"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","file":"GroupMember.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { Container } from 'flux/utils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport confirm from '../../utils/confirm'\r\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\r\nimport ActorClient from '../../utils/ActorClient'\r\n\r\nimport DialogActionCreators from '../../actions/DialogActionCreators';\r\nimport KickUserActionCreators from '../../actions/KickUserActionCreators';\r\n\r\nimport KickUserStore from '../../stores/KickUserStore'\r\n\r\nimport AvatarItem from '../common/AvatarItem.react';\r\nimport Stateful from '../common/Stateful.react';\r\n\r\nclass GroupMember extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static propTypes = {\r\n    peerInfo: PropTypes.object.isRequired,\r\n    canKick: PropTypes.bool.isRequired,\r\n    gid: PropTypes.number.isRequired\r\n  };\r\n\r\n  static getStores() {\r\n    return [KickUserStore];\r\n  }\r\n\r\n  static calculateState(prevState, nextProps) {\r\n    return {\r\n      kickUserState: KickUserStore.getKickUserState(nextProps.peerInfo.peer.id)\r\n    };\r\n  }\r\n\r\n  onClick = (id) => DialogActionCreators.selectDialogPeerUser(id);\r\n\r\n  onKick = (gid, uid) => {\r\n    const { peerInfo } = this.props;\r\n\r\n    confirm(<FormattedMessage id=\"modal.confirm.kick\" values={{ name: peerInfo.title }}/>).then(\r\n      () => KickUserActionCreators.kickMember(gid, uid),\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  renderControls() {\r\n    const { peerInfo, canKick, gid } = this.props;\r\n    const { kickUserState } = this.state;\r\n    const myId = ActorClient.getUid();\r\n\r\n    if (!canKick || peerInfo.peer.id === myId) return <div/>;\r\n\r\n    return (\r\n      <Stateful\r\n        currentState={kickUserState}\r\n        pending={<a onClick={() => this.onKick(gid, peerInfo.peer.id)}><FormattedMessage id=\"kick\"/></a>}\r\n        processing={<i className=\"material-icons spin\">autorenew</i>}\r\n        success={<i className=\"material-icons\">check</i>}\r\n        failure={<i className=\"material-icons\">warning</i>}\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n  render() {\r\n    const { peerInfo } = this.props;\r\n\r\n    return (\r\n      <li className=\"group_profile__members__list__item\">\r\n        <AvatarItem\r\n          className=\"group_profile__avatar\"\r\n          image={peerInfo.avatar}\r\n          placeholder={peerInfo.placeholder}\r\n          title={peerInfo.title}\r\n          onClick={() => this.onClick(peerInfo.peer.id)}\r\n        />\r\n\r\n        <a onClick={() => this.onClick(peerInfo.peer.id)}\r\n           dangerouslySetInnerHTML={{ __html: escapeWithEmoji(peerInfo.title) }}/>\r\n\r\n        <div className=\"controls pull-right\">\r\n          {this.renderControls()}\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Container.create(GroupMember, { pure: false, withProps: true });\r\n"]}
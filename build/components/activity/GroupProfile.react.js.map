{"version":3,"sources":["../../../src/components/activity/GroupProfile.react.js"],"names":["GroupProfile","getStores","calculateState","prevState","nextProps","gid","group","id","peer","getGroupPeer","notificationEnabled","isNotificationsEnabled","integrationToken","getToken","message","getMessage","groupPermissions","getGroupPermissions","props","handleNotificationChange","bind","handleTokenSelect","handleAvatarClick","handleGroupPermissionsFoldChange","handleShowAdminsToMembersChange","handleCanMembersInviteChange","handleCanMembersEditGroupInfoChange","handleCanAdminsEditGroupInfoChange","handleShowJoinLeaveMessagesChange","handlerSavePermissions","event","state","changeNotificationsEnabled","target","checked","select","open","bigAvatar","foldState","loadGroupPermissions","setState","showAdminsToMembers","canMembersInvite","canMembersEditGroupInfo","canAdminsEditGroupInfo","showJoinLeaveMessages","savePermissions","renderMainInfo","admin","getUser","ownerId","placeholder","name","__html","renderAbout","about","replace","renderToken","myId","getMyId","renderGroupPermissions","isCanEditAdministration","renderGroupPre","render","isMember","iconElement","members","propTypes","object","isRequired","create","withProps","pure"],"mappings":"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","file":"GroupProfile.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { lightbox } from '../../utils/ImageUtils';\r\nimport { Container } from 'flux/utils';\r\nimport Scrollbar from '../common/Scrollbar.react';\r\nimport TextField from '../common/TextField.react';\r\n\r\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\r\n\r\nimport NotificationsActionCreators from '../../actions/NotificationsActionCreators';\r\n\r\nimport DialogStore from '../../stores/DialogStore';\r\nimport NotificationsStore from '../../stores/NotificationsStore';\r\nimport GroupStore from '../../stores/GroupStore';\r\nimport PeerStore from '../../stores/PeerStore';\r\nimport UserStore from '../../stores/UserStore';\r\nimport OnlineStore from '../../stores/OnlineStore';\r\n\r\nimport SvgIcon from '../common/SvgIcon.react';\r\nimport AvatarItem from '../common/AvatarItem.react';\r\nimport GroupProfileMembers from '../activity/GroupProfileMembers.react';\r\nimport GroupPreProperties from '../activity/GroupPreProperties.react';\r\nimport Fold from '../common/Fold.react';\r\nimport ToggleNotifications from '../common/ToggleNotifications.react';\r\nimport GroupPermissionsActionCreators from '../../actions/GroupPermissionsActionCreators'\r\n\r\nclass GroupProfile extends Component {\r\n  static propTypes = {\r\n    group: PropTypes.object.isRequired\r\n  };\r\n\r\n  static getStores() {\r\n    return [NotificationsStore, GroupStore, OnlineStore];\r\n  }\r\n\r\n  static calculateState(prevState, nextProps) {\r\n    const gid = nextProps.group.id;\r\n    const peer = gid ? PeerStore.getGroupPeer(gid) : null;\r\n    const notificationEnabled = NotificationsStore.isNotificationsEnabled(peer);\r\n    return {\r\n      peer,\r\n      isNotificationsEnabled: peer ? notificationEnabled : true,\r\n      integrationToken: GroupStore.getToken(),\r\n      message: OnlineStore.getMessage(),\r\n      groupPermissions: GroupStore.getGroupPermissions()\r\n    };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleNotificationChange = this.handleNotificationChange.bind(this);\r\n    this.handleTokenSelect = this.handleTokenSelect.bind(this);\r\n    this.handleAvatarClick = this.handleAvatarClick.bind(this);\r\n    this.handleGroupPermissionsFoldChange = this.handleGroupPermissionsFoldChange.bind(this);\r\n    this.handleShowAdminsToMembersChange = this.handleShowAdminsToMembersChange.bind(this);\r\n    this.handleCanMembersInviteChange = this.handleCanMembersInviteChange.bind(this);\r\n    this.handleCanMembersEditGroupInfoChange = this.handleCanMembersEditGroupInfoChange.bind(this);\r\n    this.handleCanAdminsEditGroupInfoChange = this.handleCanAdminsEditGroupInfoChange.bind(this);\r\n    this.handleShowJoinLeaveMessagesChange = this.handleShowJoinLeaveMessagesChange.bind(this);\r\n    this.handlerSavePermissions = this.handlerSavePermissions.bind(this);\r\n\r\n  }\r\n\r\n  handleNotificationChange(event) {\r\n    const { peer } = this.state;\r\n    NotificationsActionCreators.changeNotificationsEnabled(peer, event.target.checked);\r\n  }\r\n\r\n  handleTokenSelect(event) {\r\n    event.target.select();\r\n  }\r\n\r\n  handleAvatarClick() {\r\n    lightbox.open(this.props.group.bigAvatar);\r\n  }\r\n\r\n  handleGroupPermissionsFoldChange(foldState){\r\n      if(foldState){\r\n          GroupPermissionsActionCreators.loadGroupPermissions(this.props.group.id)\r\n      }\r\n  }\r\n\r\n  handleShowAdminsToMembersChange(event) {\r\n      this.setState({ ...this.state,\r\n          groupPermissions: { ...this.state.groupPermissions,\r\n            showAdminsToMembers: event.target.checked\r\n          }\r\n      });\r\n  }\r\n\r\n  handleCanMembersInviteChange(event) {\r\n      this.setState({ ...this.state,\r\n          groupPermissions: { ...this.state.groupPermissions,\r\n              canMembersInvite: event.target.checked\r\n          }\r\n      });\r\n  }\r\n\r\n  handleCanMembersEditGroupInfoChange(event) {\r\n      this.setState({ ...this.state,\r\n          groupPermissions: { ...this.state.groupPermissions,\r\n              canMembersEditGroupInfo: event.target.checked\r\n          }\r\n      });\r\n  }\r\n\r\n  handleCanAdminsEditGroupInfoChange(event) {\r\n      this.setState({ ...this.state,\r\n          groupPermissions: { ...this.state.groupPermissions,\r\n              canAdminsEditGroupInfo: event.target.checked\r\n          }\r\n      });\r\n  }\r\n\r\n  handleShowJoinLeaveMessagesChange(event) {\r\n      this.setState({ ...this.state,\r\n          groupPermissions: { ...this.state.groupPermissions,\r\n              showJoinLeaveMessages: event.target.checked\r\n          }\r\n      });\r\n  }\r\n\r\n  handlerSavePermissions(event){\r\n      GroupPermissionsActionCreators.savePermissions(this.props.group.id, this.state.groupPermissions);\r\n  }\r\n\r\n  renderMainInfo() {\r\n    const { group } = this.props;\r\n    const admin = UserStore.getUser(group.ownerId);\r\n\r\n    return (\r\n      <header>\r\n        <AvatarItem\r\n          className=\"profile__avatar\"\r\n          size=\"large\"\r\n          image={group.bigAvatar}\r\n          placeholder={group.placeholder}\r\n          title={group.name}\r\n          onClick={this.handleAvatarClick}\r\n        />\r\n\r\n        <h3\r\n          className=\"group_profile__meta__title\"\r\n          dangerouslySetInnerHTML={{ __html: escapeWithEmoji(group.name) }}\r\n        />\r\n\r\n        <div className=\"group_profile__meta__created\">\r\n          <FormattedMessage id=\"createdBy\"/>\r\n          &nbsp;\r\n          <span dangerouslySetInnerHTML={{ __html: escapeWithEmoji(admin.name) }}/>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  renderAbout() {\r\n    const { group: { about } } = this.props;\r\n\r\n    if (!about) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"group_profile__meta__description\"\r\n        dangerouslySetInnerHTML={{ __html: escapeWithEmoji(about).replace(/\\n/g, '<br/>') }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderToken() {\r\n    const { group: { ownerId } } = this.props;\r\n    const { integrationToken } = this.state;\r\n    const myId = UserStore.getMyId();\r\n\r\n    if (ownerId !== myId) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <li className=\"profile__list__item group_profile__integration no-p\">\r\n        <Fold icon=\"power\" iconClassName=\"icon--pink\" title={<FormattedMessage id=\"integrationToken\"/>}>\r\n\r\n          <div className=\"info info--light\">\r\n            <p><FormattedMessage id=\"integrationTokenHint\"/></p>\r\n            <a href=\"https://actor.readme.io/docs/simple-integration\" target=\"_blank\"><FormattedMessage id=\"integrationTokenHelp\"/></a>\r\n          </div>\r\n\r\n          <textarea\r\n            className=\"textarea\"\r\n            onClick={this.handleTokenSelect}\r\n            readOnly\r\n            rows=\"3\"\r\n            value={integrationToken}/>\r\n        </Fold>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  renderGroupPermissions(){\r\n      const { group: {isCanEditAdministration} } = this.props;\r\n      const { groupPermissions } = this.state;\r\n\r\n      if (!isCanEditAdministration) {\r\n          return null;\r\n      }\r\n\r\n      return (\r\n          <li className=\"profile__list__item group_profile__integration2 no-p\">\r\n              <Fold icon=\"lock_open\" iconClassName=\"icon--squash\" title=\"Security Configurations\"\r\n                    onStateChange={this.handleGroupPermissionsFoldChange}>\r\n                  <ul className=\"profile__list\">\r\n                      <li className=\"profile__list__item no-p\">\r\n                          <label htmlFor=\"showAdminsToMembers\">\r\n                              {\"Show Admins to Members\"}\r\n                              <div className=\"switch pull-right\">\r\n                                  <input\r\n                                      checked={groupPermissions.showAdminsToMembers}\r\n                                      id=\"showAdminsToMembers\"\r\n                                      type=\"checkbox\"\r\n                                      onChange={this.handleShowAdminsToMembersChange}\r\n                                  />\r\n                                  <label htmlFor=\"showAdminsToMembers\"/>\r\n                              </div>\r\n                          </label>\r\n                      </li>\r\n                      <li className=\"profile__list__item no-p\">\r\n                          <label htmlFor=\"canMembersInvite\">\r\n                              {\"Can Members Invite\"}\r\n                              <div className=\"switch pull-right\">\r\n                                  <input\r\n                                      checked={groupPermissions.canMembersInvite}\r\n                                      id=\"canMembersInvite\"\r\n                                      type=\"checkbox\"\r\n                                      onChange={this.handleCanMembersInviteChange}\r\n                                  />\r\n                                  <label htmlFor=\"canMembersInvite\"/>\r\n                              </div>\r\n                          </label>\r\n                      </li>\r\n                      <li className=\"profile__list__item no-p\">\r\n                          <label htmlFor=\"canMembersEditGroupInfo\">\r\n                              {\"Can Members Edit Group Info\"}\r\n                              <div className=\"switch pull-right\">\r\n                                  <input\r\n                                      checked={groupPermissions.canMembersEditGroupInfo}\r\n                                      id=\"canMembersEditGroupInfo\"\r\n                                      type=\"checkbox\"\r\n                                      onChange={this.handleCanMembersEditGroupInfoChange}\r\n                                  />\r\n                                  <label htmlFor=\"canMembersEditGroupInfo\"/>\r\n                              </div>\r\n                          </label>\r\n                      </li>\r\n                      <li className=\"profile__list__item no-p\">\r\n                          <label htmlFor=\"canMembersEditGroupInfo\">\r\n                              {\"Can Admins Edit Group Info\"}\r\n                              <div className=\"switch pull-right\">\r\n                                  <input\r\n                                      checked={groupPermissions.canAdminsEditGroupInfo}\r\n                                      id=\"canAdminsEditGroupInfo\"\r\n                                      type=\"checkbox\"\r\n                                      onChange={this.handleCanAdminsEditGroupInfoChange}\r\n                                  />\r\n                                  <label htmlFor=\"canAdminsEditGroupInfo\"/>\r\n                              </div>\r\n                          </label>\r\n                      </li>\r\n                      <li className=\"profile__list__item no-p\">\r\n                          <label htmlFor=\"showJoinLeaveMessages\">\r\n                              {\"Show Join Leave Messages\"}\r\n                              <div className=\"switch pull-right\">\r\n                                  <input\r\n                                      checked={groupPermissions.showJoinLeaveMessages}\r\n                                      id=\"showJoinLeaveMessages\"\r\n                                      type=\"checkbox\"\r\n                                      onChange={this.handleShowJoinLeaveMessagesChange}\r\n                                  />\r\n                                  <label htmlFor=\"showJoinLeaveMessages\"/>\r\n                              </div>\r\n                          </label>\r\n                      </li>\r\n                  </ul>\r\n\r\n                  <button className=\"button button--lightblue pull-left\" ref=\"saveAdmins\"\r\n                          onClick={this.handlerSavePermissions}>\r\n                      {\"Save\"}\r\n                  </button>\r\n\r\n              </Fold>\r\n          </li>\r\n      );\r\n  }\r\n\r\n  renderGroupPre() {\r\n        const { group } = this.props;\r\n        return (\r\n            <li className=\"profile__list__item group_profile__integration no-p\">\r\n              <Fold icon=\"power\" iconClassName=\"icon--pink\" title=\"Criar Grupo Pre\">\r\n\r\n                <div className=\"info info--light\">\r\n                  <p><FormattedMessage id=\"integrationTokenHint\"/></p>\r\n                  <a href=\"https://actor.readme.io/docs/simple-integration\" target=\"_blank\"><FormattedMessage id=\"integrationTokenHelp\"/></a>\r\n                </div>\r\n\r\n                <textarea\r\n                    className=\"textarea\"\r\n                    onClick={this.handleTokenSelect}\r\n                    readOnly\r\n                    rows=\"3\"\r\n                    value={integrationToken}/>\r\n              </Fold>\r\n            </li>\r\n        );\r\n    }\r\n\r\n  render() {\r\n    const { group } = this.props;\r\n    const { isNotificationsEnabled, message } = this.state;\r\n    const isMember = DialogStore.isMember();\r\n\r\n    const iconElement = (\r\n      <SvgIcon className=\"icon icon--green\" glyph=\"members\" />\r\n    );\r\n\r\n    if (!isMember) {\r\n      return (\r\n        <div className=\"activity__body group_profile\">\r\n          <ul className=\"profile__list\">\r\n            <li className=\"profile__list__item group_profile__meta\">\r\n              {this.renderMainInfo()}\r\n              {this.renderAbout()}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"activity__body group_profile\">\r\n        <Scrollbar>\r\n          <ul className=\"profile__list\">\r\n            <li className=\"profile__list__item group_profile__meta\">\r\n              {this.renderMainInfo()}\r\n              {this.renderAbout()}\r\n            </li>\r\n\r\n            <li className=\"profile__list__item group_profile__notifications no-p\">\r\n              <ToggleNotifications\r\n                  isNotificationsEnabled={isNotificationsEnabled}\r\n                                   onNotificationChange={this.handleNotificationChange}/>\r\n            </li>\r\n\r\n            <li className=\"profile__list__item group_profile__members no-p\">\r\n              <Fold iconElement={iconElement} title={message}>\r\n                <GroupProfileMembers groupId={group.id} members={group.members}/>\r\n              </Fold>\r\n            </li>\r\n\r\n           {/* <li className=\"profile__list__item group_profile__group_pre no-p\">\r\n                <GroupPreProperties groupId={group.id} groups={[]}/>\r\n            </li>*/}\r\n            {this.renderToken()}\r\n            {this.renderGroupPermissions()}\r\n          </ul>\r\n        </Scrollbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container.create(GroupProfile, { withProps: true, pure: false });\r\n"]}
{"version":3,"sources":["../../src/components/Dialog.react.js"],"names":["Dialog","getStores","calculateState","peer","getCurrentPeer","dialogInfo","getState","uid","getMyId","isMember","isActivityOpen","isOpen","message","getMessage","isFavorite","id","call","calculateCallState","search","equals","isCalling","props","context","updatePeer","params","handleStartClick","bind","handleUnblock","handleDialogSearchCancel","handleDialogSearchChange","components","getComponents","componentWillReceiveProps","nextProps","componentWillUnmount","selectDialogPeer","stringToPeer","hasPeer","replace","state","sendTextMessage","unblockUser","query","setQuery","close","getActivityComponents","get","features","dialog","activity","calls","push","DialogHeader","header","MessagesSection","messages","DialogFooter","footer","renderActivities","map","Activity","index","renderDialogSearch","renderContent","results","isSearching","render","propTypes","shape","string","isRequired","create","withProps"],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eA/BA;;;;IAiCMA,M;;;SAOGC,S,wBAAY;AACjB,WAAO,sJAAP;AACD,G;;SAEMC,c,6BAAiB;AACtB,QAAMC,OAAO,sBAAYC,cAAZ,EAAb;AACA,QAAMC,aAAa,0BAAgBC,QAAhB,EAAnB;;AAEA,WAAO;AACLH,gBADK;AAELE,4BAFK;AAGLE,WAAK,oBAAUC,OAAV,EAHA;AAILC,gBAAU,sBAAYA,QAAZ,EAJL;AAKLC,sBAAgB,wBAAcC,MAAd,EALX;AAMLC,eAAS,sBAAYC,UAAZ,EANJ;AAOLC,kBAAY,sBAAYA,UAAZ,CAAuBX,KAAKY,EAA5B,CAPP;AAQLC,YAAMhB,OAAOiB,kBAAP,CAA0Bd,IAA1B,CARD;AASLe,cAAQ,8BAAoBZ,QAApB;AATH,KAAP;AAWD,G;;SAEMW,kB,+BAAmBd,I,EAAM;AAC9B,QAAMa,OAAO,oBAAUV,QAAV,EAAb;;AAEA,QAAI,CAACU,KAAKL,MAAN,IAAgB,CAAC,oBAAUQ,MAAV,CAAiBhB,IAAjB,EAAuBa,KAAKb,IAA5B,CAArB,EAAwD;AACtD,aAAO;AACLiB,mBAAW;AADN,OAAP;AAGD;;AAED,wBACKJ,IADL;AAEEI,iBAAW;AAFb;AAID,G;;AAED,kBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,iDAC1B,sBAAMD,KAAN,EAAaC,OAAb,CAD0B;;AAE1B,UAAKC,UAAL,CAAgB,MAAKF,KAAL,CAAWG,MAAX,CAAkBT,EAAlC;;AAEA,UAAKU,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,OAAxB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,OAArB;AACA,UAAKE,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BF,IAA9B,OAAhC;AACA,UAAKG,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BH,IAA9B,OAAhC;;AAEA,UAAKI,UAAL,GAAkB,MAAKC,aAAL,EAAlB;AAT0B;AAU3B;;mBAEDC,yB,sCAA0BC,S,EAAW;AACnC,QAAIA,UAAUT,MAAV,CAAiBT,EAAjB,KAAwB,KAAKM,KAAL,CAAWG,MAAX,CAAkBT,EAA9C,EAAkD;AAChD,WAAKQ,UAAL,CAAgBU,UAAUT,MAAV,CAAiBT,EAAjC;AACD;AACF,G;;mBAEDmB,oB,mCAAuB;AACrB,mCAAqBC,gBAArB,CAAsC,IAAtC;AACD,G;;mBAEDZ,U,uBAAWR,E,EAAI;AACb,QAAMZ,OAAO,oBAAUiC,YAAV,CAAuBrB,EAAvB,CAAb;AACA,QAAI,oBAAUsB,OAAV,CAAkBlC,IAAlB,CAAJ,EAA6B;AAC3B,qCAAqBgC,gBAArB,CAAsChC,IAAtC;AACD,KAFD,MAEO;AACL,wBAAQmC,OAAR,CAAgB,KAAhB;AACD;AACF,G;;mBAEDb,gB,+BAAmB;AAAA,QACTtB,IADS,GACA,KAAKoC,KADL,CACTpC,IADS;;AAEjB,oCAAsBqC,eAAtB,CAAsCrC,IAAtC,EAA4C,QAA5C;AACD,G;;mBAEDwB,a,4BAAgB;AAAA,QACNtB,UADM,GACS,KAAKkC,KADd,CACNlC,UADM;;AAEd,yCAA2BoC,WAA3B,CAAuCpC,WAAWU,EAAlD;AACD,G;;mBAEDc,wB,qCAAyBa,K,EAAO;AAC9B,2CAA6BC,QAA7B,CAAsCD,KAAtC;AACD,G;;mBAEDd,wB,uCAA2B;AACzB,2CAA6BgB,KAA7B;AACD,G;;mBAEDC,qB,oCAAwB;AAAA,gCACW,4BAAkBC,GAAlB,EADX;AAAA,QACdC,QADc,yBACdA,QADc;AAAA,QACJjB,UADI,yBACJA,UADI;;AAAA,QAEdkB,MAFc,GAEHlB,UAFG,CAEdkB,MAFc;;;AAItB,QAAIA,UAAUA,OAAOC,QAArB,EAA+B;AAC7B,aAAOD,OAAOC,QAAd;AACD;;AAED,QAAMA,WAAW,oBAAjB;AACA,QAAIF,SAASG,KAAb,EAAoB;AAClBD,eAASE,IAAT;AACD;;AAED,WAAOF,QAAP;AACD,G;;mBAEDlB,a,4BAAgB;AAAA,iCACqB,4BAAkBe,GAAlB,EADrB;AAAA,QACQE,MADR,0BACNlB,UADM,CACQkB,MADR;;AAEd,QAAMC,WAAW,KAAKJ,qBAAL,EAAjB;;AAEA,QAAIG,UAAU,CAAC,wBAAWA,MAAX,CAAf,EAAmC;AACjC,aAAO;AACLC,0BADK;AAELG,sBAAc,wBAAWJ,OAAOK,MAAlB,IAA4BL,OAAOK,MAAnC,yBAFT;AAGLC,yBAAiB,wBAAWN,OAAOO,QAAlB,IAA8BP,OAAOO,QAArC,4BAHZ;AAILC,sBAAc,wBAAWR,OAAOS,MAAlB,IAA4BT,OAAOS,MAAnC;AAJT,OAAP;AAMD;;AAED,WAAO;AACLR,wBADK;AAELG,0CAFK;AAGLE,gDAHK;AAILE;AAJK,KAAP;AAMD,G;;mBAEDE,gB,+BAAmB;AAAA,QACTT,QADS,GACI,KAAKnB,UADT,CACTmB,QADS;;AAEjB,WAAOA,SAASU,GAAT,CAAa,UAACC,QAAD,EAAWC,KAAX;AAAA,aAAqB,8BAAC,QAAD,IAAU,KAAKA,KAAf,GAArB;AAAA,KAAb,CAAP;AACD,G;;mBAEDC,kB,iCAAqB;AAAA,QACX5C,MADW,GACA,KAAKqB,KADL,CACXrB,MADW;;;AAGnB,WACE;AACE,cAAQA,OAAOP,MADjB;AAEE,aAAOO,OAAOwB,KAFhB;AAGE,gBAAU,KAAKd,wBAHjB;AAIE,gBAAU,KAAKC;AAJjB,MADF;AAQD,G;;mBAEDkC,a,4BAAgB;AAAA,iBACsC,KAAKxB,KAD3C;AAAA,QACNhC,GADM,UACNA,GADM;AAAA,QACDJ,IADC,UACDA,IADC;AAAA,QACKM,QADL,UACKA,QADL;AAAA,QACeJ,UADf,UACeA,UADf;AAAA,QAC2Ba,MAD3B,UAC2BA,MAD3B;AAAA,sBAE4B,KAAKY,UAFjC;AAAA,QAENwB,eAFM,eAENA,eAFM;AAAA,QAEWE,YAFX,eAEWA,YAFX;;;AAId,QAAItC,OAAOP,MAAX,EAAmB;AACjB,aACE;AACE,eAAOO,OAAOwB,KADhB;AAEE,iBAASxB,OAAO8C,OAFlB;AAGE,qBAAa9C,OAAO+C;AAHtB,QADF;AAOD;;AAED,WACE;AAAA;AAAA,QAAK,WAAU,MAAf;AACE,oCAAC,eAAD;AACE,aAAK1D,GADP;AAEE,cAAMJ,IAFR;AAGE,kBAAUM;AAHZ,QADF;AAME,oCAAC,YAAD;AACE,cAAMJ,UADR;AAEE,kBAAUI,QAFZ;AAGE,mBAAW,KAAKkB,aAHlB;AAIE,iBAAS,KAAKF;AAJhB;AANF,KADF;AAeD,G;;mBAEDyC,M,qBAAS;AAAA,kBACyE,KAAK3B,KAD9E;AAAA,QACCpC,IADD,WACCA,IADD;AAAA,QACOE,UADP,WACOA,UADP;AAAA,QACmBO,OADnB,WACmBA,OADnB;AAAA,QAC4BE,UAD5B,WAC4BA,UAD5B;AAAA,QACwCE,IADxC,WACwCA,IADxC;AAAA,QAC8CN,cAD9C,WAC8CA,cAD9C;AAAA,QAC8DQ,MAD9D,WAC8DA,MAD9D;AAAA,QAECkC,YAFD,GAEkB,KAAKtB,UAFvB,CAECsB,YAFD;;;AAIP,QAAI,CAACjD,IAAL,EAAW;AACT,aAAO,2CAAS,WAAU,MAAnB,GAAP;AACD;;AAED,WACE;AAAA;AAAA,QAAS,WAAU,MAAnB;AACE,oCAAC,YAAD;AACE,cAAME,UADR;AAEE,iBAASO,OAFX;AAGE,cAAMI,IAHR;AAIE,cAAMb,IAJR;AAKE,oBAAYW,UALd;AAME,4BAAoBI,OAAOP,MAN7B;AAOE,wBAAgBD;AAPlB,QADF;AAUG,WAAKoD,kBAAL,EAVH;AAWE;AAAA;AAAA,UAAK,WAAU,SAAf;AACE;AAAA;AAAA,YAAS,WAAU,QAAnB;AACG,eAAKC,aAAL;AADH,SADF;AAIG,aAAKL,gBAAL;AAJH;AAXF,KADF;AAoBD,G;;;;;AA9MG1D,M,CACGmE,S,GAAY;AACjB3C,UAAQ,iBAAU4C,KAAV,CAAgB;AACtBrD,QAAI,iBAAUsD,MAAV,CAAiBC;AADC,GAAhB,EAELA;AAHc,C;kBAgNN,iBAAUC,MAAV,CAAiBvE,MAAjB,EAAyB,EAAEwE,WAAW,IAAb,EAAzB,C","file":"Dialog.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { isFunction } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport DelegateContainer from '../utils/DelegateContainer';\n\nimport PeerUtils from '../utils/PeerUtils';\nimport history from '../utils/history';\n\nimport DefaultMessages from './dialog/MessagesSection.react';\nimport DefaultDialogHeader from './dialog/DialogHeader.react';\nimport DefaultDialogFooter from './dialog/DialogFooter.react';\nimport DefaultActivity from './Activity.react';\nimport DefaultCall from './Call.react';\nimport DialogSearch from './search/DialogSearch.react';\nimport SearchResults from './search/SearchResults.react';\n\nimport UserStore from '../stores/UserStore';\nimport DialogStore from '../stores/DialogStore';\nimport DialogInfoStore from '../stores/DialogInfoStore';\nimport ActivityStore from '../stores/ActivityStore';\nimport OnlineStore from '../stores/OnlineStore';\nimport CallStore from '../stores/CallStore';\nimport SearchMessagesStore from '../stores/SearchMessagesStore'\n\nimport DialogActionCreators from '../actions/DialogActionCreators';\nimport MessageActionCreators from '../actions/MessageActionCreators';\nimport BlockedUsersActionCreators from '../actions/BlockedUsersActionCreators';\nimport SearchMessagesActionCreators from '../actions/SearchMessagesActionCreators';\n\nclass Dialog extends Component {\n  static propTypes = {\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  };\n\n  static getStores() {\n    return [ActivityStore, DialogStore, DialogInfoStore, OnlineStore, CallStore, SearchMessagesStore];\n  }\n\n  static calculateState() {\n    const peer = DialogStore.getCurrentPeer();\n    const dialogInfo = DialogInfoStore.getState();\n\n    return {\n      peer,\n      dialogInfo,\n      uid: UserStore.getMyId(),\n      isMember: DialogStore.isMember(),\n      isActivityOpen: ActivityStore.isOpen(),\n      message: OnlineStore.getMessage(),\n      isFavorite: DialogStore.isFavorite(peer.id),\n      call: Dialog.calculateCallState(peer),\n      search: SearchMessagesStore.getState()\n    };\n  }\n\n  static calculateCallState(peer) {\n    const call = CallStore.getState();\n\n    if (!call.isOpen || !PeerUtils.equals(peer, call.peer)) {\n      return {\n        isCalling: false\n      };\n    }\n\n    return {\n      ...call,\n      isCalling: true\n    };\n  }\n\n  constructor(props, context) {\n    super(props, context);\n    this.updatePeer(this.props.params.id);\n\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleUnblock = this.handleUnblock.bind(this);\n    this.handleDialogSearchCancel = this.handleDialogSearchCancel.bind(this);\n    this.handleDialogSearchChange = this.handleDialogSearchChange.bind(this);\n\n    this.components = this.getComponents();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.params.id !== this.props.params.id) {\n      this.updatePeer(nextProps.params.id);\n    }\n  }\n\n  componentWillUnmount() {\n    DialogActionCreators.selectDialogPeer(null);\n  }\n\n  updatePeer(id) {\n    const peer = PeerUtils.stringToPeer(id);\n    if (PeerUtils.hasPeer(peer)) {\n      DialogActionCreators.selectDialogPeer(peer);\n    } else {\n      history.replace('/im');\n    }\n  }\n\n  handleStartClick() {\n    const { peer } = this.state;\n    MessageActionCreators.sendTextMessage(peer, '/start');\n  }\n\n  handleUnblock() {\n    const { dialogInfo } = this.state;\n    BlockedUsersActionCreators.unblockUser(dialogInfo.id);\n  }\n\n  handleDialogSearchChange(query) {\n    SearchMessagesActionCreators.setQuery(query);\n  }\n\n  handleDialogSearchCancel() {\n    SearchMessagesActionCreators.close();\n  }\n\n  getActivityComponents() {\n    const { features, components } = DelegateContainer.get();\n    const { dialog } = components;\n\n    if (dialog && dialog.activity) {\n      return dialog.activity;\n    }\n\n    const activity = [DefaultActivity];\n    if (features.calls) {\n      activity.push(DefaultCall);\n    }\n\n    return activity;\n  }\n\n  getComponents() {\n    const { components: { dialog } } = DelegateContainer.get();\n    const activity = this.getActivityComponents();\n\n    if (dialog && !isFunction(dialog)) {\n      return {\n        activity,\n        DialogHeader: isFunction(dialog.header) ? dialog.header : DefaultDialogHeader,\n        MessagesSection: isFunction(dialog.messages) ? dialog.messages : DefaultMessages,\n        DialogFooter: isFunction(dialog.footer) ? dialog.footer : DefaultDialogFooter\n      };\n    }\n\n    return {\n      activity,\n      DialogHeader: DefaultDialogHeader,\n      MessagesSection: DefaultMessages,\n      DialogFooter: DefaultDialogFooter\n    };\n  }\n\n  renderActivities() {\n    const { activity } = this.components;\n    return activity.map((Activity, index) => <Activity key={index} />)\n  }\n\n  renderDialogSearch() {\n    const { search } = this.state;\n\n    return (\n      <DialogSearch\n        isOpen={search.isOpen}\n        query={search.query}\n        onCancel={this.handleDialogSearchCancel}\n        onChange={this.handleDialogSearchChange}\n      />\n    )\n  }\n\n  renderContent() {\n    const { uid, peer, isMember, dialogInfo, search } = this.state;\n    const { MessagesSection, DialogFooter } = this.components;\n\n    if (search.isOpen) {\n      return (\n        <SearchResults\n          query={search.query}\n          results={search.results}\n          isSearching={search.isSearching}\n        />\n      );\n    }\n\n    return (\n      <div className=\"chat\">\n        <MessagesSection\n          uid={uid}\n          peer={peer}\n          isMember={isMember}\n        />\n        <DialogFooter\n          info={dialogInfo}\n          isMember={isMember}\n          onUnblock={this.handleUnblock}\n          onStart={this.handleStartClick}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { peer, dialogInfo, message, isFavorite, call, isActivityOpen, search } = this.state;\n    const { DialogHeader } = this.components;\n\n    if (!peer) {\n      return <section className=\"main\" />;\n    }\n\n    return (\n      <section className=\"main\">\n        <DialogHeader\n          info={dialogInfo}\n          message={message}\n          call={call}\n          peer={peer}\n          isFavorite={isFavorite}\n          isDialogSearchOpen={search.isOpen}\n          isActivityOpen={isActivityOpen}\n        />\n        {this.renderDialogSearch()}\n        <div className=\"flexrow\">\n          <section className=\"dialog\">\n            {this.renderContent()}\n          </section>\n          {this.renderActivities()}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Container.create(Dialog, { withProps: true });\n"]}
{"version":3,"sources":["../../src/components/Join.react.js"],"names":["Join","getStores","calculateState","getState","props","joinGroupViaLink","params","token","renderStatus","state","status","error","PROCESSING","PENDING","SUCCESS","FAILURE","render","propTypes","shape","string","isRequired","create"],"mappings":";;;;AAIA;;;;AACA;;AAEA;;AAEA;;AACA;;;;AACA;;;;;;;;;;+eAXA;;;;IAaMA,I;;;OAOGC,S,wBAAY;AACjB,WAAO,0BAAP;AACD,G;;OAEMC,c,6BAAiB;AACtB,WAAO,yBAAeC,QAAf,EAAP;AACD,G;;AAED,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,+BAAiBC,gBAAjB,CAAkCD,MAAME,MAAN,CAAaC,KAA/C;AAHiB;AAIlB;;iBAEDC,Y,2BAAe;AAAA,iBACoB,KAAKC,KADzB;AAAA,QACLC,MADK,UACLA,MADK;AAAA,QACGH,KADH,UACGA,KADH;AAAA,QACUI,KADV,UACUA,KADV;;AAEb,YAAQD,MAAR;AACE,WAAK,qCAAkBE,UAAvB;AACA,WAAK,qCAAkBC,OAAvB;AACE,eACI;AAAA;AAAA;AACE;AAAA;AAAA,cAAK,WAAU,WAAf;AAA2B,sDAA3B;AAAiC,sDAAjC;AAAuC,sDAAvC;AAA6C,sDAA7C;AAAmD;AAAnD,WADF;AAEE;AAAA;AAAA,cAAK,WAAU,eAAf;AACI,yEAAkB,IAAG,cAArB,EAAoC,QAAQ,EAAEN,OAAOA,KAAT,EAA5C;AADJ;AAFF,SADJ;AAQF,WAAK,qCAAkBO,OAAvB;AACE,eACE;AAAA;AAAA,YAAK,WAAU,sCAAf;AACI,uEAAkB,IAAG,cAArB,EAAoC,QAAQ,EAA5C;AADJ,SADF;;AAMF,WAAK,qCAAkBC,OAAvB;AACE,eACE;AAAA;AAAA,YAAK,WAAU,oCAAf;AACGJ;AADH,SADF;AAnBJ;AAyBD,G;;iBAEDK,M,qBAAS;AACP,WACE;AAAA;AAAA,QAAK,WAAU,iBAAf;AACG,WAAKR,YAAL;AADH,KADF;AAKD,G;;;;;AAxDGR,I,CACGiB,S,GAAY;AACjBX,UAAQ,iBAAUY,KAAV,CAAgB;AACtBX,WAAO,iBAAUY,MAAV,CAAiBC;AADF,GAAhB,EAELA;AAHc,C;kBA0DN,iBAAUC,MAAV,CAAiBrB,IAAjB,C","file":"Join.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\n\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\n\nimport { AsyncActionStates } from '../constants/ActorAppConstants';\nimport JoinGroupStore from '../stores/JoinGroupStore';\nimport JoinGroupActions from '../actions/JoinGroupActions';\n\nclass Join extends Component {\n  static propTypes = {\n    params: PropTypes.shape({\n      token: PropTypes.string.isRequired\n    }).isRequired\n  };\n\n  static getStores() {\n    return [JoinGroupStore];\n  }\n\n  static calculateState() {\n    return JoinGroupStore.getState();\n  }\n\n  constructor(props) {\n    super(props);\n\n    JoinGroupActions.joinGroupViaLink(props.params.token);\n  }\n\n  renderStatus() {\n    const { status, token, error } = this.state;\n    switch (status) {\n      case AsyncActionStates.PROCESSING:\n      case AsyncActionStates.PENDING:\n        return (\n            <div>\n              <div className=\"preloader\"><div/><div/><div/><div/><div/></div>\n              <div className=\"join__message\">\n                  <FormattedMessage id=\"join.joining\" values={{ token: token }}/>\n              </div>\n            </div>\n        );\n      case AsyncActionStates.SUCCESS:\n        return (\n          <div className=\"join__message join__message--success\">\n              <FormattedMessage id=\"join.success\" values={{}}/>\n          </div>\n        );\n\n      case AsyncActionStates.FAILURE:\n        return (\n          <div className=\"join__message join__message--error\">\n            {error}\n          </div>\n        );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"join__container\">\n        {this.renderStatus()}\n      </div>\n    );\n  }\n}\n\nexport default Container.create(Join);\n"]}
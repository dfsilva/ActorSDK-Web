{"version":3,"sources":["../../../src/components/sidebar/Recent.react.js"],"names":["Recent","props","state","haveUnreadAbove","haveUnreadBelow","lastUnreadBelow","firstUnreadAbove","checkInvisibleCounters","bind","scrollToFirstHiddenAbove","scrollToLastHiddenBelow","handleGroupListTitleClick","handlePrivateListTitleClick","open","handleAddContact","handleCreateGroup","scroller","refs","recentRect","getBoundingClientRect","unreadNodes","container","getElementsByClassName","node","rect","top","height","setState","dimensions","getDimensions","scrollerRect","scrollTo","scrollTop","getGroupProps","group","key","onTitleClick","onPlusClick","renderEmptyHint","renderGroupHint","renderPrivateHint","renderRecentGroups","currentPeer","archive","dialogs","map","shorts","renderUnreadAbove","renderUnreadBelow","renderHistoryButton","renderGroupsPreButton","renderChannelsPreButton","renderScrollableContent","render","propTypes","object","array","isRequired"],"mappings":"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","file":"Recent.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { forEach, throttle } from 'lodash';\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport GroupListActionCreators from '../../actions/GroupListActionCreators';\r\nimport ContactActionCreators from '../../actions/ContactActionCreators';\r\nimport CreateGroupActionCreators from '../../actions/CreateGroupActionCreators';\r\nimport AddContactActionCreators from '../../actions/AddContactActionCreators';\r\n\r\nimport CustomScroller from '../common/CustomScroller.react';\r\nimport RecentGroup from './RecentGroup.react';\r\nimport SidebarLink from './SidebarLink.react';\r\n\r\nclass Recent extends Component {\r\n  static propTypes = {\r\n    currentPeer: PropTypes.object,\r\n    dialogs: PropTypes.array.isRequired,\r\n    archive: PropTypes.object.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      haveUnreadAbove: false,\r\n      haveUnreadBelow: false,\r\n      lastUnreadBelow: null,\r\n      firstUnreadAbove: null\r\n    };\r\n\r\n    this.checkInvisibleCounters = throttle(this.checkInvisibleCounters.bind(this), 300);\r\n    this.scrollToFirstHiddenAbove = this.scrollToFirstHiddenAbove.bind(this);\r\n    this.scrollToLastHiddenBelow = this.scrollToLastHiddenBelow.bind(this);\r\n    this.handleGroupListTitleClick = this.handleGroupListTitleClick.bind(this);\r\n    this.handlePrivateListTitleClick = this.handlePrivateListTitleClick.bind(this);\r\n  }\r\n\r\n  handleGroupListTitleClick () {\r\n    GroupListActionCreators.open();\r\n  }\r\n\r\n  handlePrivateListTitleClick() {\r\n    ContactActionCreators.open();\r\n  }\r\n\r\n  handleAddContact() {\r\n    AddContactActionCreators.open();\r\n  }\r\n\r\n  handleCreateGroup() {\r\n    CreateGroupActionCreators.open();\r\n  }\r\n\r\n  checkInvisibleCounters() {\r\n    const { scroller } = this.refs;\r\n    const recentRect = scroller.getBoundingClientRect();\r\n    // TODO: refactor this\r\n    const unreadNodes = scroller.container.getElementsByClassName('recent__item--unread');\r\n\r\n    let haveUnreadAbove = false,\r\n        haveUnreadBelow = false,\r\n        lastUnreadBelow = null,\r\n        firstUnreadAbove = null;\r\n\r\n    forEach(unreadNodes, (node) => {\r\n      const rect = node.getBoundingClientRect();\r\n      if ((recentRect.top + recentRect.height) < rect.top) {\r\n        haveUnreadBelow = true;\r\n        lastUnreadBelow = node;\r\n      }\r\n      if (recentRect.top > (rect.top + rect.height)) {\r\n        haveUnreadAbove = true;\r\n        if (!firstUnreadAbove) {\r\n          firstUnreadAbove = node;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.setState({ haveUnreadAbove, haveUnreadBelow, firstUnreadAbove, lastUnreadBelow });\r\n  }\r\n\r\n  scrollToFirstHiddenAbove() {\r\n    const { scroller } = this.refs;\r\n    const { firstUnreadAbove } = this.state;\r\n    const rect = firstUnreadAbove.getBoundingClientRect();\r\n    const dimensions = scroller.getDimensions();\r\n    const scrollerRect = scroller.getBoundingClientRect();\r\n\r\n    scroller.scrollTo(dimensions.scrollTop + rect.top - scrollerRect.top);\r\n  }\r\n\r\n  scrollToLastHiddenBelow() {\r\n    const { scroller } = this.refs;\r\n    const { lastUnreadBelow } = this.state;\r\n    const rect = lastUnreadBelow.getBoundingClientRect();\r\n    const dimensions = scroller.getDimensions();\r\n    const scrollerRect = scroller.getBoundingClientRect();\r\n\r\n    scroller.scrollTo(dimensions.scrollTop + rect.top - (scrollerRect.top + scrollerRect.height - rect.height));\r\n  }\r\n\r\n  getGroupProps(group) {\r\n    switch (group.key) {\r\n      case 'groups':\r\n        return {\r\n          onTitleClick: this.handleGroupListTitleClick,\r\n          onPlusClick: this.handleCreateGroup,\r\n          renderEmptyHint: this.renderGroupHint\r\n        };\r\n\r\n      case 'privates':\r\n        return {\r\n          onTitleClick: this.handlePrivateListTitleClick,\r\n          onPlusClick: this.handleAddContact,\r\n          renderEmptyHint: this.renderPrivateHint\r\n        };\r\n\r\n      default:\r\n        return {};\r\n    }\r\n  }\r\n\r\n  renderGroupHint() {\r\n    return (\r\n      <div className=\"recent__group__hint\">\r\n        <FormattedMessage id=\"sidebar.group.empty\"/>\r\n        <div className=\"stem\"/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPrivateHint() {\r\n    return (\r\n      <div className=\"recent__group__hint\">\r\n        <FormattedMessage id=\"sidebar.private.empty\"/>\r\n        <button className=\"button button--outline button--wide hide\">\r\n          <FormattedMessage id=\"button.invite\"/>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRecentGroups() {\r\n    const { currentPeer, archive } = this.props;\r\n    return this.props.dialogs.map((group) => (\r\n      <RecentGroup\r\n        items={group.shorts}\r\n        key={group.key}\r\n        group={group.key}\r\n        currentPeer={currentPeer}\r\n        archive={archive}\r\n        {...this.getGroupProps(group)}\r\n        onItemUpdate={this.checkInvisibleCounters}\r\n      />\r\n    ));\r\n  }\r\n\r\n  renderUnreadAbove() {\r\n    if (!this.state.haveUnreadAbove) return null;\r\n\r\n    return (\r\n      <div className=\"recent__unread recent__unread--above\" onClick={this.scrollToFirstHiddenAbove}>\r\n        <i className=\"material-icons\">keyboard_arrow_up</i>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderUnreadBelow() {\r\n    if (!this.state.haveUnreadBelow) return null;\r\n\r\n    return (\r\n      <div className=\"recent__unread recent__unread--below\" onClick={this.scrollToLastHiddenBelow}>\r\n        <i className=\"material-icons\">keyboard_arrow_down</i>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderHistoryButton() {\r\n    // actually this is hack, but it's ok while we haven't real flag\r\n    // const isArchiveEmpty = this.props.dialogs.some((group) => !group.shorts.length);\r\n    // if (isArchiveEmpty) {\r\n    //   return null;\r\n    // }\r\n\r\n    return (\r\n      <SidebarLink\r\n        className=\"sidebar__history\"\r\n        to=\"/im/history\"\r\n        title={<FormattedMessage id=\"sidebar.recents.history\" />}\r\n        glyph=\"history\"\r\n        key=\"history\"\r\n      />\r\n    );\r\n  }\r\n\r\n  renderGroupsPreButton() {\r\n        return (\r\n            <SidebarLink\r\n                className=\"sidebar__history\"\r\n                to=\"/im/groups-pre\"\r\n                title={<FormattedMessage id=\"sidebar.recents.groupspre\" />}\r\n                glyph=\"group\"\r\n                key=\"groupspre\"\r\n            />\r\n        );\r\n    }\r\n\r\n    renderChannelsPreButton() {\r\n        return (\r\n            <SidebarLink\r\n                className=\"sidebar__history\"\r\n                to=\"#\"\r\n                title={<FormattedMessage id=\"sidebar.recents.channelspre\" />}\r\n                glyph=\"\"\r\n                key=\"channelspre\"\r\n            />\r\n        );\r\n    }\r\n\r\n  renderScrollableContent() {\r\n    return [\r\n      this.renderRecentGroups(),\r\n      this.renderHistoryButton(),\r\n      this.renderGroupsPreButton(),\r\n     // this.renderChannelsPreButton()\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"recent\">\r\n        {this.renderUnreadAbove()}\r\n        <CustomScroller\r\n          className=\"recent__container\"\r\n          ref=\"scroller\"\r\n          onScroll={this.checkInvisibleCounters}\r\n          onResize={this.checkInvisibleCounters}\r\n        >\r\n          {this.renderScrollableContent()}\r\n        </CustomScroller>\r\n        {this.renderUnreadBelow()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recent;\r\n"]}
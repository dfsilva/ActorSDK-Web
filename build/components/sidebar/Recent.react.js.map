{"version":3,"sources":["../../../src/components/sidebar/Recent.react.js"],"names":["Recent","props","state","haveUnreadAbove","haveUnreadBelow","lastUnreadBelow","firstUnreadAbove","checkInvisibleCounters","bind","scrollToFirstHiddenAbove","scrollToLastHiddenBelow","handleGroupListTitleClick","handlePrivateListTitleClick","open","handleAddContact","handleCreateGroup","scroller","refs","recentRect","getBoundingClientRect","unreadNodes","container","getElementsByClassName","node","rect","top","height","setState","dimensions","getDimensions","scrollerRect","scrollTo","scrollTop","getGroupProps","group","key","onTitleClick","onPlusClick","renderEmptyHint","renderGroupHint","renderPrivateHint","renderRecentGroups","currentPeer","archive","dialogs","map","shorts","renderUnreadAbove","renderUnreadBelow","renderHistoryButton","renderGroupsPreButton","renderChannelsPreButton","renderScrollableContent","render","propTypes","object","array","isRequired"],"mappings":"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","file":"Recent.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { forEach, throttle } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport GroupListActionCreators from '../../actions/GroupListActionCreators';\nimport ContactActionCreators from '../../actions/ContactActionCreators';\nimport CreateGroupActionCreators from '../../actions/CreateGroupActionCreators';\nimport AddContactActionCreators from '../../actions/AddContactActionCreators';\n\nimport CustomScroller from '../common/CustomScroller.react';\nimport RecentGroup from './RecentGroup.react';\nimport SidebarLink from './SidebarLink.react';\n\nclass Recent extends Component {\n  static propTypes = {\n    currentPeer: PropTypes.object,\n    dialogs: PropTypes.array.isRequired,\n    archive: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      haveUnreadAbove: false,\n      haveUnreadBelow: false,\n      lastUnreadBelow: null,\n      firstUnreadAbove: null\n    };\n\n    this.checkInvisibleCounters = throttle(this.checkInvisibleCounters.bind(this), 300);\n    this.scrollToFirstHiddenAbove = this.scrollToFirstHiddenAbove.bind(this);\n    this.scrollToLastHiddenBelow = this.scrollToLastHiddenBelow.bind(this);\n    this.handleGroupListTitleClick = this.handleGroupListTitleClick.bind(this);\n    this.handlePrivateListTitleClick = this.handlePrivateListTitleClick.bind(this);\n  }\n\n  handleGroupListTitleClick () {\n    GroupListActionCreators.open();\n  }\n\n  handlePrivateListTitleClick() {\n    ContactActionCreators.open();\n  }\n\n  handleAddContact() {\n    AddContactActionCreators.open();\n  }\n\n  handleCreateGroup() {\n    CreateGroupActionCreators.open();\n  }\n\n  checkInvisibleCounters() {\n    const { scroller } = this.refs;\n    const recentRect = scroller.getBoundingClientRect();\n    // TODO: refactor this\n    const unreadNodes = scroller.container.getElementsByClassName('recent__item--unread');\n\n    let haveUnreadAbove = false,\n        haveUnreadBelow = false,\n        lastUnreadBelow = null,\n        firstUnreadAbove = null;\n\n    forEach(unreadNodes, (node) => {\n      const rect = node.getBoundingClientRect();\n      if ((recentRect.top + recentRect.height) < rect.top) {\n        haveUnreadBelow = true;\n        lastUnreadBelow = node;\n      }\n      if (recentRect.top > (rect.top + rect.height)) {\n        haveUnreadAbove = true;\n        if (!firstUnreadAbove) {\n          firstUnreadAbove = node;\n        }\n      }\n    });\n\n    this.setState({ haveUnreadAbove, haveUnreadBelow, firstUnreadAbove, lastUnreadBelow });\n  }\n\n  scrollToFirstHiddenAbove() {\n    const { scroller } = this.refs;\n    const { firstUnreadAbove } = this.state;\n    const rect = firstUnreadAbove.getBoundingClientRect();\n    const dimensions = scroller.getDimensions();\n    const scrollerRect = scroller.getBoundingClientRect();\n\n    scroller.scrollTo(dimensions.scrollTop + rect.top - scrollerRect.top);\n  }\n\n  scrollToLastHiddenBelow() {\n    const { scroller } = this.refs;\n    const { lastUnreadBelow } = this.state;\n    const rect = lastUnreadBelow.getBoundingClientRect();\n    const dimensions = scroller.getDimensions();\n    const scrollerRect = scroller.getBoundingClientRect();\n\n    scroller.scrollTo(dimensions.scrollTop + rect.top - (scrollerRect.top + scrollerRect.height - rect.height));\n  }\n\n  getGroupProps(group) {\n    switch (group.key) {\n      case 'groups':\n        return {\n          onTitleClick: this.handleGroupListTitleClick,\n          onPlusClick: this.handleCreateGroup,\n          renderEmptyHint: this.renderGroupHint\n        };\n\n      case 'privates':\n        return {\n          onTitleClick: this.handlePrivateListTitleClick,\n          onPlusClick: this.handleAddContact,\n          renderEmptyHint: this.renderPrivateHint\n        };\n\n      default:\n        return {};\n    }\n  }\n\n  renderGroupHint() {\n    return (\n      <div className=\"recent__group__hint\">\n        <FormattedMessage id=\"sidebar.group.empty\"/>\n        <div className=\"stem\"/>\n      </div>\n    );\n  }\n\n  renderPrivateHint() {\n    return (\n      <div className=\"recent__group__hint\">\n        <FormattedMessage id=\"sidebar.private.empty\"/>\n        <button className=\"button button--outline button--wide hide\">\n          <FormattedMessage id=\"button.invite\"/>\n        </button>\n      </div>\n    );\n  }\n\n  renderRecentGroups() {\n    const { currentPeer, archive } = this.props;\n    return this.props.dialogs.map((group) => (\n      <RecentGroup\n        items={group.shorts}\n        key={group.key}\n        group={group.key}\n        currentPeer={currentPeer}\n        archive={archive}\n        {...this.getGroupProps(group)}\n        onItemUpdate={this.checkInvisibleCounters}\n      />\n    ));\n  }\n\n  renderUnreadAbove() {\n    if (!this.state.haveUnreadAbove) return null;\n\n    return (\n      <div className=\"recent__unread recent__unread--above\" onClick={this.scrollToFirstHiddenAbove}>\n        <i className=\"material-icons\">keyboard_arrow_up</i>\n      </div>\n    )\n  }\n\n  renderUnreadBelow() {\n    if (!this.state.haveUnreadBelow) return null;\n\n    return (\n      <div className=\"recent__unread recent__unread--below\" onClick={this.scrollToLastHiddenBelow}>\n        <i className=\"material-icons\">keyboard_arrow_down</i>\n      </div>\n    )\n  }\n\n  renderHistoryButton() {\n    // actually this is hack, but it's ok while we haven't real flag\n    // const isArchiveEmpty = this.props.dialogs.some((group) => !group.shorts.length);\n    // if (isArchiveEmpty) {\n    //   return null;\n    // }\n\n    return (\n      <SidebarLink\n        className=\"sidebar__history\"\n        to=\"/im/history\"\n        title={<FormattedMessage id=\"sidebar.recents.history\" />}\n        glyph=\"history\"\n        key=\"history\"\n      />\n    );\n  }\n\n  renderGroupsPreButton() {\n        return (\n            <SidebarLink\n                className=\"sidebar__history\"\n                to=\"/im/groups-pre\"\n                title={<FormattedMessage id=\"sidebar.recents.groupspre\" />}\n                glyph=\"group\"\n                key=\"groupspre\"\n            />\n        );\n    }\n\n    renderChannelsPreButton() {\n        return (\n            <SidebarLink\n                className=\"sidebar__history\"\n                to=\"#\"\n                title={<FormattedMessage id=\"sidebar.recents.channelspre\" />}\n                glyph=\"\"\n                key=\"channelspre\"\n            />\n        );\n    }\n\n  renderScrollableContent() {\n    return [\n      this.renderRecentGroups(),\n      this.renderHistoryButton(),\n      this.renderGroupsPreButton(),\n     // this.renderChannelsPreButton()\n    ];\n  }\n\n  render() {\n    return (\n      <section className=\"recent\">\n        {this.renderUnreadAbove()}\n        <CustomScroller\n          className=\"recent__container\"\n          ref=\"scroller\"\n          onScroll={this.checkInvisibleCounters}\n          onResize={this.checkInvisibleCounters}\n        >\n          {this.renderScrollableContent()}\n        </CustomScroller>\n        {this.renderUnreadBelow()}\n      </section>\n    );\n  }\n}\n\nexport default Recent;\n"]}
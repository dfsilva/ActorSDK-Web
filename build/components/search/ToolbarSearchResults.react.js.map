{"version":3,"sources":["../../../src/components/search/ToolbarSearchResults.react.js"],"names":["ToolbarSearchResults","renderResults","props","query","results","length","map","item","index","peerInfo","peer","key","id","title","avatar","placeholder","render","propTypes","string","isRequired","array"],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;+eAPA;;;;IASMA,oB;;;;;;;;;iCAMJC,a,4BAAgB;AAAA,iBACa,KAAKC,KADlB;AAAA,QACNC,KADM,UACNA,KADM;AAAA,QACCC,OADD,UACCA,OADD;;;AAGd,QAAI,CAACA,QAAQC,MAAb,EAAqB;AACnB,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE,yEAAsB,IAAG,iBAAzB,EAA2C,QAAQ,EAAEF,YAAF,EAAnD;AADF,OADF;AAKD;;AAED,WAAOC,QAAQE,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClC,aACE;AAAA;AAAA,UAAgB,OAAOA,KAAvB,EAA8B,KAAKD,KAAKE,QAAL,CAAcC,IAAd,CAAmBC,GAAtD;AACE;AACE,eAAKJ,KAAKE,QAAL,CAAcC,IAAd,CAAmBE,EAD1B;AAEE,gBAAML,KAAKE,QAAL,CAAcI,KAFtB;AAGE,kBAAQN,KAAKE,QAAL,CAAcK,MAHxB;AAIE,uBAAaP,KAAKE,QAAL,CAAcM;AAJ7B;AADF,OADF;AAUD,KAXM,CAAP;AAYD,G;;iCAEDC,M,qBAAS;AACP,WACE;AAAA;AAAA,QAAK,WAAU,0BAAf;AACG,WAAKf,aAAL;AADH,KADF;AAKD,G;;;;;AArCGD,oB,CACGiB,S,GAAY;AACjBd,SAAO,iBAAUe,MAAV,CAAiBC,UADP;AAEjBf,WAAS,iBAAUgB,KAAV,CAAgBD;AAFR,C;kBAuCNnB,oB","file":"ToolbarSearchResults.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { FormattedHTMLMessage } from 'react-intl';\r\nimport ContactItem from '../common/ContactItem.react';\r\nimport SelectListItem from '../common/SelectListItem.react';\r\n\r\nclass ToolbarSearchResults extends Component {\r\n  static propTypes = {\r\n    query: PropTypes.string.isRequired,\r\n    results: PropTypes.array.isRequired\r\n  };\r\n\r\n  renderResults() {\r\n    const { query, results } = this.props;\r\n\r\n    if (!results.length) {\r\n      return (\r\n        <div className=\"not-found\">\r\n          <FormattedHTMLMessage id=\"search.notFound\" values={{ query }} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return results.map((item, index) => {\r\n      return (\r\n        <SelectListItem index={index} key={item.peerInfo.peer.key}>\r\n          <ContactItem\r\n            uid={item.peerInfo.peer.id}\r\n            name={item.peerInfo.title}\r\n            avatar={item.peerInfo.avatar}\r\n            placeholder={item.peerInfo.placeholder}\r\n          />\r\n        </SelectListItem>\r\n      )\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"toolbar__search__results\">\r\n        {this.renderResults()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolbarSearchResults;\r\n"]}
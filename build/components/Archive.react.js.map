{"version":3,"sources":["../../src/components/Archive.react.js"],"names":["Archive","props","loadArchiveByScroll","state","isAllLoaded","isLoading","threshold","scrollNode","refs","archiveScroll","scrollArea","getElementsByClassName","scrollHeight","scrollTop","loadMoreArchivedDialogs","maxWait","getStores","calculateState","console","log","isArchiveLoading","isInitialLoadingComplete","dialogs","getDialogs","componentWillMount","loadArchivedDialogs","componentDidUpdate","scrollContent","setImmediate","render","archiveClassname","dialogsList","dialog","index","counter","peer","key","avatar","placeholder","title","length","contextTypes","intl","object","create","pure"],"mappings":"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","file":"Archive.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { map, debounce } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { Link } from 'react-router';\n\nimport ArchiveActionCreators from '../actions/ArchiveActionCreators';\n\nimport ArchiveStore from '../stores/ArchiveStore';\n\nimport AvatarItem from './common/AvatarItem.react';\nimport Scrollbar from './common/Scrollbar.react';\n\nclass Archive extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  static getStores() {\n    return [ArchiveStore];\n  }\n\n  static calculateState() {\n      console.log(\"calculateState\");\n    return {\n      isLoading: ArchiveStore.isArchiveLoading(),\n      isInitialLoadingComplete: ArchiveStore.isInitialLoadingComplete(),\n      isAllLoaded: ArchiveStore.isAllLoaded(),\n      dialogs: ArchiveStore.getDialogs()\n    }\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    ArchiveActionCreators.loadArchivedDialogs();\n  }\n\n  componentDidUpdate() {\n    const { isInitialLoadingComplete, isAllLoaded, isLoading } = this.state;\n    if (isInitialLoadingComplete && !isAllLoaded && !isLoading) {\n      const scrollNode = findDOMNode(this.refs.archiveScroll);\n      const scrollContent = scrollNode.getElementsByClassName('ss-content')[0];\n      if (scrollContent.scrollHeight < scrollNode.scrollHeight) {\n        setImmediate(() => {\n          ArchiveActionCreators.loadMoreArchivedDialogs();\n        });\n      }\n    }\n  }\n\n  loadArchiveByScroll = debounce(() => {\n    const { isAllLoaded, isLoading } = this.state;\n    const threshold = 100;\n    if (!isLoading && !isAllLoaded) {\n      const scrollNode = findDOMNode(this.refs.archiveScroll);\n      const scrollArea = scrollNode.getElementsByClassName('ss-scrollarea')[0];\n\n      if (scrollNode.scrollHeight + scrollArea.scrollTop > scrollArea.scrollHeight - threshold) {\n        ArchiveActionCreators.loadMoreArchivedDialogs();\n      }\n    }\n  }, 5, { maxWait: 30 });\n\n  render() {\n    const { isLoading, dialogs } = this.state;\n    const archiveClassname = classnames('archive-section', {\n      'archive-section--loading': isLoading\n    });\n\n    const dialogsList = map(dialogs, (dialog, index) => {\n      const { counter, peer } = dialog;\n\n      return (\n        <div className=\"archive-section__list__item col-xs-12 col-sm-6 col-md-4 col-lg-3\" key={index}>\n          <Link to={`/im/${peer.peer.key}`} className=\"archive-item row\">\n            <div className=\"archive-item__user\">\n              <AvatarItem\n                className=\"archive-item__avatar\"\n                size=\"medium\"\n                image={peer.avatar}\n                placeholder={peer.placeholder}\n                title={peer.title}\n              />\n              {\n                counter !== 0\n                  ? <div className=\"archive-item__counter\">{counter}</div>\n                  : null\n              }\n            </div>\n            <div className=\"col-xs\">\n              <h4 className=\"archive-item__title\">{peer.title}</h4>\n            </div>\n          </Link>\n        </div>\n      )\n    });\n\n    return (\n      <section className=\"main\">\n        <header className=\"toolbar row color--white\">\n          <h3>Archive</h3>\n        </header>\n        <div className=\"flexrow\">\n          <section className={archiveClassname}>\n            <Scrollbar ref=\"archiveScroll\" onScroll={this.loadArchiveByScroll}>\n              <div className=\"archive-section__list row\">\n                {\n                  dialogs.length !== 0\n                    ? dialogsList\n                    : !isLoading\n                        ? <div className=\"archive-section__list__item archive-section__list__item--empty col-xs-12\">\n                            <h3>No dialogs in archive</h3>\n                          </div>\n                        : null\n                }\n                {\n                  isLoading\n                    ? <div className=\"archive-section__list__item archive-section__list__item--loading col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n                        <div className=\"preloader\"><div/><div/><div/><div/><div/></div>\n                      </div>\n                    : null\n                }\n              </div>\n            </Scrollbar>\n          </section>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Container.create(Archive, { pure: false });\n"]}
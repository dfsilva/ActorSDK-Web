{"version":3,"sources":["../../../../src/components/modals/createGroup/Form.react.js"],"names":["CreateGroupForm","getStores","calculateState","step","getCurrentStep","name","getGroupName","selectedUserIds","getSelectedUserIds","contacts","getState","props","context","onContactToggle","bind","handleNameChange","handleNameSubmit","handleCreateGroup","onSearchChange","componentDidMount","state","NAME_INPUT","refs","focus","getContacts","search","filter","key","renderContacts","length","map","contact","i","isSelected","has","uid","icon","setSelectedUserIds","add","remove","event","preventDefault","setState","target","value","trimmedName","trim","setGroupName","createGroup","toJS","renderGroupNameInput","renderAddUsersButton","renderUserSearchInput","intl","messages","renderSelectedUsersCount","numMembers","size","renderCreateGroupButton","CREATION_STARTED","render","CONTACTS_SELECTION","contextTypes","object","create","pure"],"mappings":"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","file":"Form.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { Container } from 'flux/utils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport fuzzaldrin from 'fuzzaldrin';\r\nimport { CreateGroupSteps } from '../../../constants/ActorAppConstants';\r\n\r\nimport CreateGroupActionCreators from '../../../actions/CreateGroupActionCreators';\r\n\r\nimport PeopleStore from '../../../stores/PeopleStore';\r\nimport CreateGroupStore from '../../../stores/CreateGroupStore';\r\n\r\nimport ContactItem from '../../common/ContactItem.react';\r\nimport TextField from '../../common/TextField.react';\r\n\r\nclass CreateGroupForm extends Component {\r\n  static contextTypes = {\r\n    intl: PropTypes.object\r\n  };\r\n\r\n  static getStores() {\r\n    return [CreateGroupStore, PeopleStore];\r\n  }\r\n\r\n  static calculateState() {\r\n    return {\r\n      step: CreateGroupStore.getCurrentStep(),\r\n      name: CreateGroupStore.getGroupName(),\r\n      selectedUserIds: CreateGroupStore.getSelectedUserIds(),\r\n      contacts: PeopleStore.getState()\r\n    };\r\n  }\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.onContactToggle = this.onContactToggle.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleNameSubmit = this.handleNameSubmit.bind(this);\r\n    this.handleCreateGroup = this.handleCreateGroup.bind(this);\r\n    this.onSearchChange = this.onSearchChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.step === CreateGroupSteps.NAME_INPUT) {\r\n      this.refs.name.focus();\r\n    }\r\n  }\r\n\r\n  getContacts() {\r\n    const { contacts, search } = this.state;\r\n\r\n    return fuzzaldrin.filter(contacts, search, {\r\n      key: 'name'\r\n    });\r\n  }\r\n\r\n  renderContacts() {\r\n    const { selectedUserIds } = this.state;\r\n    const contacts = this.getContacts();\r\n\r\n    if (!contacts.length) {\r\n      return (\r\n        <li className=\"contacts__list__item contacts__list__item--empty text-center\">\r\n          <FormattedMessage id=\"invite.notFound\"/>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return contacts.map((contact, i) => {\r\n      const isSelected = selectedUserIds.has(contact.uid);\r\n      const icon = isSelected ? 'check_box' : 'check_box_outline_blank';\r\n\r\n      return (\r\n        <ContactItem {...contact} key={i}>\r\n          <a className=\"material-icons\" onClick={() => this.onContactToggle(contact, !isSelected)}>\r\n            {icon}\r\n          </a>\r\n        </ContactItem>\r\n      );\r\n    });\r\n  }\r\n\r\n  onContactToggle(contact, isSelected) {\r\n    const { selectedUserIds } = this.state;\r\n\r\n    if (isSelected) {\r\n      CreateGroupActionCreators.setSelectedUserIds(selectedUserIds.add(contact.uid));\r\n    } else {\r\n      CreateGroupActionCreators.setSelectedUserIds(selectedUserIds.remove(contact.uid));\r\n    }\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    event.preventDefault();\r\n\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleNameSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { name } = this.state;\r\n    const trimmedName = name.trim();\r\n\r\n    if (trimmedName.length > 0) {\r\n      CreateGroupActionCreators.setGroupName(trimmedName);\r\n    }\r\n  }\r\n\r\n  handleCreateGroup(event) {\r\n    event.preventDefault();\r\n    const { name, selectedUserIds } = this.state;\r\n\r\n    CreateGroupActionCreators.createGroup(name, null, selectedUserIds.toJS());\r\n  }\r\n\r\n  onSearchChange(event) {\r\n    this.setState({ search: event.target.value });\r\n  }\r\n\r\n  renderGroupNameInput() {\r\n    const { name } = this.state;\r\n    return (\r\n      <TextField\r\n        className=\"input__material--wide\"\r\n        floatingLabel={<FormattedMessage id=\"modal.createGroup.groupName\"/>}\r\n        ref=\"name\"\r\n        onChange={this.handleNameChange}\r\n        value={name}/>\r\n    );\r\n  }\r\n\r\n  renderAddUsersButton() {\r\n    return (\r\n      <button className=\"button button--lightblue\" onClick={this.handleNameSubmit}>\r\n        <FormattedMessage id=\"button.addMembers\"/>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderUserSearchInput() {\r\n    const { search } = this.state;\r\n    const { intl } = this.context;\r\n\r\n    return (\r\n      <div className=\"small-search\">\r\n        <i className=\"material-icons\">search</i>\r\n        <input\r\n          className=\"input\"\r\n          onChange={this.onSearchChange}\r\n          placeholder={intl.messages['invite.search']}\r\n          type=\"search\"\r\n          value={search}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSelectedUsersCount() {\r\n    const { selectedUserIds } = this.state;\r\n    return (\r\n      <div className=\"count\">\r\n        <FormattedMessage id=\"members\" values={{ numMembers: selectedUserIds.size }}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderCreateGroupButton() {\r\n    const { step } = this.state;\r\n\r\n    if (step !== CreateGroupSteps.CREATION_STARTED) {\r\n      return (\r\n        <button className=\"button button--lightblue\" onClick={this.handleCreateGroup}>\r\n          <FormattedMessage id=\"button.createGroup\"/>\r\n        </button>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <button className=\"button button--lightblue\" disabled>\r\n        <FormattedMessage id=\"button.createGroup\"/>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { step } = this.state;\r\n\r\n    switch (step) {\r\n      case CreateGroupSteps.NAME_INPUT:\r\n        return (\r\n          <form className=\"group-name\">\r\n            <div className=\"modal__body\">\r\n              {this.renderGroupNameInput()}\r\n            </div>\r\n\r\n            <footer className=\"modal__footer text-right\">\r\n              {this.renderAddUsersButton()}\r\n            </footer>\r\n          </form>\r\n        );\r\n\r\n      case CreateGroupSteps.CONTACTS_SELECTION:\r\n      case CreateGroupSteps.CREATION_STARTED:\r\n        return (\r\n          <form className=\"group-members\">\r\n            <div className=\"modal__body\">\r\n              {this.renderUserSearchInput()}\r\n\r\n              <ul className=\"contacts__list\">\r\n                {this.renderContacts()}\r\n              </ul>\r\n            </div>\r\n\r\n            <footer className=\"modal__footer\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xs text-left\">\r\n                  {this.renderSelectedUsersCount()}\r\n                </div>\r\n                <div className=\"col-xs text-right\">\r\n                  {this.renderCreateGroupButton()}\r\n                </div>\r\n              </div>\r\n            </footer>\r\n          </form>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Container.create(CreateGroupForm, { pure: false });\r\n"]}
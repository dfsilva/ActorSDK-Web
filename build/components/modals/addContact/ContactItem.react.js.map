{"version":3,"sources":["../../../../src/components/modals/addContact/ContactItem.react.js"],"names":["ContactItem","props","shouldComponentUpdate","bind","handleClick","event","preventDefault","onSelect","id","isContact","renderAbout","about","renderEmails","emails","length","map","email","index","renderPhones","phones","phone","number","renderControls","render","name","nick","avatar","placeholder","isBot","__html","propTypes","isRequired","string","array","bool","isOnline","PropTypes","func"],"mappings":";;;;AAIA;;;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;+eATA;;;;IAWMA,W;;;AAkBJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAGjB,UAAKC,qBAAL,GAA6B,kDAAsBC,IAAtB,OAA7B;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,OAAnB;AAJiB;AAKlB;;wBAEDC,W,wBAAYC,K,EAAO;AACjBA,UAAMC,cAAN;AADiB,iBAEmB,KAAKL,KAFxB;AAAA,QAETM,QAFS,UAETA,QAFS;AAAA,QAECC,EAFD,UAECA,EAFD;AAAA,QAEKC,SAFL,UAEKA,SAFL;;AAGjBF,gBAAYA,SAASC,EAAT,EAAaC,SAAb,CAAZ;AACD,G;;wBAEDC,W,0BAAc;AAAA,QACJC,KADI,GACM,KAAKV,KADX,CACJU,KADI;;AAEZ,QAAI,CAACA,KAAL,EAAY,OAAO,IAAP;;AAEZ,WACE;AAAA;AAAA,QAAK,WAAU,WAAf;AACE;AAAA;AAAA,UAAK,WAAU,OAAf;AAAuB,qEAAkB,IAAG,eAArB,GAAvB;AAAA;AAAA,OADF;AAEE;AAAA;AAAA,UAAK,WAAU,QAAf;AAAyBA;AAAzB;AAFF,KADF;AAMD,G;;wBAEDC,Y,2BAAe;AAAA,QACLC,MADK,GACM,KAAKZ,KADX,CACLY,MADK;;AAEb,QAAIA,OAAOC,MAAP,KAAkB,CAAtB,EAAyB,OAAO,IAAP;;AAEzB,WAAOD,OAAOE,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAClC,aACE;AAAA;AAAA,UAAK,WAAU,WAAf,EAA2B,WAASA,KAApC;AACE;AAAA;AAAA,YAAK,WAAU,OAAf;AAAuB,uEAAkB,IAAG,eAArB,GAAvB;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAK,WAAU,QAAf;AACE;AAAA;AAAA,cAAG,MAAM,YAAYD,MAAMA,KAA3B;AAAmCA,kBAAMA;AAAzC;AADF;AAFF,OADF;AAQD,KATM,CAAP;AAUD,G;;wBAEDE,Y,2BAAe;AAAA,QACLC,MADK,GACM,KAAKlB,KADX,CACLkB,MADK;;AAEb,QAAIA,OAAOL,MAAP,KAAkB,CAAtB,EAAyB,OAAO,IAAP;;AAEzB,WAAOK,OAAOJ,GAAP,CAAW,UAACK,KAAD,EAAQH,KAAR,EAAkB;AAClC,aACE;AAAA;AAAA,UAAK,WAAU,WAAf,EAA2B,WAASA,KAApC;AACE;AAAA;AAAA,YAAK,WAAU,OAAf;AAAuB,uEAAkB,IAAG,eAArB,GAAvB;AAAA;AAAA,SADF;AAEE;AAAA;AAAA,YAAK,WAAU,QAAf;AACE;AAAA;AAAA,cAAG,MAAM,SAASG,MAAMC,MAAxB;AAAiCD,kBAAMC;AAAvC;AADF;AAFF,OADF;AAQD,KATM,CAAP;AAUD,G;;wBAEDC,c,6BAAiB;AAAA,QACPb,SADO,GACO,KAAKR,KADZ,CACPQ,SADO;;AAEf,WACE;AAAA;AAAA,QAAQ,WAAU,sBAAlB,EAAyC,SAAS,KAAKL,WAAvD;AACE,mEAAkB,IAAIK,YAAY,8BAAZ,GAA6C,eAAnE;AADF,KADF;AAKD,G;;wBAGDc,M,qBAAS;AAAA,kBAC4C,KAAKtB,KADjD;AAAA,QACCuB,IADD,WACCA,IADD;AAAA,QACOC,IADP,WACOA,IADP;AAAA,QACaC,MADb,WACaA,MADb;AAAA,QACqBC,WADrB,WACqBA,WADrB;AAAA,QACkCC,KADlC,WACkCA,KADlC;;;AAGP,WACE;AAAA;AAAA,QAAI,WAAU,oCAAd;AACE;AAAA;AAAA,UAAK,WAAU,KAAf;AACE,8DAAY,OAAOF,MAAnB;AACY,uBAAaC,WADzB;AAEY,gBAAK,OAFjB;AAGY,iBAAOH,IAHnB,GADF;AAME;AAAA;AAAA,YAAK,WAAU,QAAf;AACE;AAAA;AAAA,cAAK,WAAU,MAAf;AACE,oDAAM,yBAAyB,EAAEK,QAAQ,iCAAgBL,IAAhB,CAAV,EAA/B,GADF;AAEGI,oBAAQ;AAAA;AAAA;AAAA;AAAA,aAAR,GAA6B;AAFhC,WADF;AAKE;AAAA;AAAA,cAAK,WAAU,MAAf;AAAuBH;AAAvB;AALF;AANF,OADF;AAgBE;AAAA;AAAA,UAAK,WAAU,MAAf;AACG,aAAKf,WAAL,EADH;AAEG,aAAKE,YAAL,EAFH;AAGG,aAAKM,YAAL;AAHH,OAhBF;AAsBE;AAAA;AAAA,UAAK,WAAU,UAAf;AACG,aAAKI,cAAL;AADH;AAtBF,KADF;AA4BD,G;;;;;AApHGtB,W,CACG8B,S,GAAY;AACjBtB,MAAI,iBAAUa,MAAV,CAAiBU,UADJ;AAEjBP,QAAM,iBAAUQ,MAAV,CAAiBD,UAFN;AAGjBN,QAAM,iBAAUO,MAHC;AAIjBN,UAAQ,iBAAUM,MAJD;AAKjBrB,SAAO,iBAAUqB,MALA;AAMjBL,eAAa,iBAAUK,MAAV,CAAiBD,UANb;AAOjBlB,UAAQ,iBAAUoB,KAPD;AAQjBd,UAAQ,iBAAUc,KARD;;AAUjBL,SAAO,iBAAUM,IAAV,CAAeH,UAVL;AAWjBtB,aAAW,iBAAUyB,IAAV,CAAeH,UAXT;AAYjBI,YAAU,iBAAUD,IAAV,CAAeH,UAZR;;AAcjBxB,YAAU,gBAAM6B,SAAN,CAAgBC;AAdT,C;kBAsHNrC,W","file":"ContactItem.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { escapeWithEmoji } from '../../../utils/EmojiUtils';\r\n\r\nimport AvatarItem from '../../common/AvatarItem.react';\r\n\r\nclass ContactItem extends Component {\r\n  static propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    nick: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    about: PropTypes.string,\r\n    placeholder: PropTypes.string.isRequired,\r\n    emails: PropTypes.array,\r\n    phones: PropTypes.array,\r\n\r\n    isBot: PropTypes.bool.isRequired,\r\n    isContact: PropTypes.bool.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n\r\n    onSelect: React.PropTypes.func\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(event) {\r\n    event.preventDefault();\r\n    const { onSelect, id, isContact } = this.props;\r\n    onSelect && onSelect(id, isContact)\r\n  }\r\n\r\n  renderAbout() {\r\n    const { about } = this.props;\r\n    if (!about) return null;\r\n\r\n    return (\r\n      <div className=\"about row\">\r\n        <div className=\"title\"><FormattedMessage id=\"profile.about\"/>:</div>\r\n        <div className=\"col-xs\">{about}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderEmails() {\r\n    const { emails } = this.props;\r\n    if (emails.length === 0) return null;\r\n\r\n    return emails.map((email, index) => {\r\n      return (\r\n        <div className=\"email row\" key={`e${index}`}>\r\n          <div className=\"title\"><FormattedMessage id=\"profile.email\"/>:</div>\r\n          <div className=\"col-xs\">\r\n            <a href={'mailto:' + email.email}>{email.email}</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPhones() {\r\n    const { phones } = this.props;\r\n    if (phones.length === 0) return null;\r\n\r\n    return phones.map((phone, index) => {\r\n      return (\r\n        <div className=\"phone row\" key={`p${index}`}>\r\n          <div className=\"title\"><FormattedMessage id=\"profile.phone\"/>:</div>\r\n          <div className=\"col-xs\">\r\n            <a href={'tel:' + phone.number}>{phone.number}</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderControls() {\r\n    const { isContact } = this.props;\r\n    return (\r\n      <button className=\"button button--rised\" onClick={this.handleClick}>\r\n        <FormattedMessage id={isContact ? 'modal.quickSearch.openDialog' : 'addToContacts'}/>\r\n      </button>\r\n    );\r\n  }\r\n\r\n\r\n  render() {\r\n    const { name, nick, avatar, placeholder, isBot } = this.props;\r\n\r\n    return (\r\n      <li className=\"add-contact__results__item contact\">\r\n        <div className=\"row\">\r\n          <AvatarItem image={avatar}\r\n                      placeholder={placeholder}\r\n                      size=\"large\"\r\n                      title={name}/>\r\n\r\n          <div className=\"col-xs\">\r\n            <div className=\"name\">\r\n              <span dangerouslySetInnerHTML={{ __html: escapeWithEmoji(name) }}/>\r\n              {isBot ? <small>BOT</small> : null}\r\n            </div>\r\n            <div className=\"nick\">{nick}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"meta\">\r\n          {this.renderAbout()}\r\n          {this.renderEmails()}\r\n          {this.renderPhones()}\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          {this.renderControls()}\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactItem;\r\n"]}
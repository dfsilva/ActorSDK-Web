{"version":3,"sources":["../../../src/components/modals/AddContact.react.js"],"names":["AddContact","getStores","calculateState","results","getResults","isSearching","props","context","handleClose","bind","handleQueryChange","findUsers","trailing","addContact","handleKeyDown","handleSelect","componentWillMount","document","addEventListener","componentDidMount","refs","query","focus","componentWillUnmount","removeEventListener","close","event","target","value","setState","state","keyCode","ENTER","preventDefault","uid","isContact","addToContacts","renderUserSearchInput","renderUserSearchResults","length","map","result","index","render","contextTypes","intl","object","create"],"mappings":"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","file":"AddContact.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { debounce } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport Modal from 'react-modal';\nimport { FormattedMessage } from 'react-intl';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport AddContactActionCreators from '../../actions/AddContactActionCreators';\n\nimport AddContactStore from '../../stores/AddContactStore';\n\nimport TextField from '../common/TextField.react';\nimport ContactItem from './addContact/ContactItem.react';\n\nclass AddContact extends Component {\n  static getStores() {\n    return [AddContactStore];\n  }\n\n  static calculateState() {\n    return {\n      results: AddContactStore.getResults(),\n      isSearching: AddContactStore.isSearching()\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleQueryChange = this.handleQueryChange.bind(this);\n    this.findUsers = debounce(this.findUsers, 300, { trailing: true });\n    this.addContact = this.addContact.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentDidMount() {\n    this.refs.query.focus();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleClose() {\n    AddContactActionCreators.close();\n  }\n\n  handleQueryChange(event) {\n    const query = event.target.value;\n    this.setState({ query });\n    this.findUsers(query);\n  }\n\n  findUsers(query) {\n    AddContactActionCreators.findUsers(query);\n  }\n\n  addContact() {\n    AddContactActionCreators.findUsers(this.state.query)\n  }\n\n  handleKeyDown(event) {\n    if (event.keyCode === KeyCodes.ENTER) {\n      event.preventDefault();\n      this.addContact()\n    }\n  }\n\n  handleSelect(uid, isContact) {\n    AddContactActionCreators.addToContacts(uid, isContact);\n    this.handleClose();\n  }\n\n  renderUserSearchInput() {\n    const { query } = this.state;\n    return (\n      <TextField\n        className=\"input__material--wide\"\n        floatingLabel={<FormattedMessage id=\"modal.addContact.query\"/>}\n        onChange={this.handleQueryChange}\n        ref=\"query\"\n        value={query}/>\n    );\n  }\n\n  renderUserSearchResults() {\n    const { query, results } = this.state;\n\n    if (!query || query.length === '') {\n      return (\n        <li className=\"add-contact__results__item add-contact__results__item--searching\">\n          <FormattedMessage id=\"modal.addContact.empty\"/>\n        </li>\n      );\n    }\n\n    // Disabled becouse searching is very fast and this message is blinking\n    // if (isSearching) {\n    //   return (\n    //     <li className=\"add-contact__results__item add-contact__results__item--searching\">\n    //       <FormattedMessage id=\"modal.addContact.searching\" values={{query}}/>\n    //     </li>\n    //   );\n    // }\n\n    if (results.length === 0) {\n      return (\n        <li className=\"add-contact__results__item add-contact__results__item--not-found\">\n          <FormattedMessage id=\"modal.addContact.notFound\"/>\n        </li>\n      );\n    }\n\n    return results.map((result, index) => {\n      return <ContactItem key={index} {...result} onSelect={this.handleSelect}/>\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        overlayClassName=\"modal-overlay\"\n        className=\"modal\"\n        onRequestClose={this.handleClose}\n        contentLabel=\"\"\n        isOpen>\n\n        <div className=\"add-contact\">\n          <div className=\"modal__content\">\n\n            <header className=\"modal__header\">\n              <FormattedMessage id=\"modal.addContact.title\" tagName=\"h1\"/>\n              <a className=\"modal__header__close material-icons\"\n                 onClick={this.handleClose}>clear</a>\n            </header>\n\n            <div className=\"modal__body\">\n              {this.renderUserSearchInput()}\n            </div>\n\n            <footer className=\"modal__footer\">\n              <ul className=\"add-contact__results\">\n                {this.renderUserSearchResults()}\n              </ul>\n            </footer>\n\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(AddContact);\n"]}
{"version":3,"sources":["../../../src/components/modals/Crop.react.js"],"names":["MIN_CROP_SIZE","CropAvatarModal","handleClose","hide","onStartMoving","event","cropPosition","state","preventDefault","wrapper","refs","wrapperRect","getBoundingClientRect","dragOffset","x","pageX","left","y","pageY","top","setState","addEventListener","onMoving","cropSize","width","height","onStartResizeTop","resizeLastCoord","onResizeTop","onStartResizeRight","onResizeRight","onStartResizeBottom","onResizeBottom","onStartResizeLeft","onResizeLeft","onCropResize","direction","scaledWidth","scaledHeight","axisCoord","resizeValue","resizeCropPosition","resizedCropSize","updateCropSize","removeListeners","removeEventListener","onCrop","scaleRatio","callback","cropImage","canvas","document","createElement","context","getContext","drawImage","croppedImage","toDataURL","storeScaledSizes","originalImage","naturalWidth","naturalHeight","getStores","calculateState","pictureSource","getState","source","maxImageHeight","body","clientHeight","componentDidMount","window","componentWillUnmount","renderControls","render","maxHeight","create"],"mappings":"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","file":"Crop.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { Container } from 'flux/utils';\r\nimport { dataURItoBlob } from '../../utils/ImageUtils';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Modal from 'react-modal';\r\n\r\nimport CropActionCreators from '../../actions/CropActionCreators';\r\n\r\nimport CropStore from '../../stores/CropAvatarStore';\r\n\r\nimport ModalCloseButton from './ModalCloseButton.react';\r\n\r\nconst MIN_CROP_SIZE = 100;\r\n\r\nclass CropAvatarModal extends Component {\r\n  static getStores() {\r\n    return [CropStore];\r\n  }\r\n\r\n  static calculateState() {\r\n    return {\r\n      pictureSource: CropStore.getState().source,\r\n      callback: CropStore.getState().callback,\r\n      cropPosition: {\r\n        x: 0,\r\n        y: 0\r\n      },\r\n      cropSize: 200,\r\n      scaledWidth: 0,\r\n      scaledHeight: 0,\r\n      naturalWidth: 0,\r\n      naturalHeight: 0,\r\n      maxImageHeight: (document.body.clientHeight * .9) - 64 // 64 is modal header height.\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const originalImage = findDOMNode(this.refs.originalImage);\r\n    window.addEventListener('resize', this.storeScaledSizes, false);\r\n    originalImage.addEventListener('load', this.storeScaledSizes, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.storeScaledSizes, false);\r\n  }\r\n\r\n  handleClose = () => CropActionCreators.hide();\r\n\r\n  onStartMoving = (event) => {\r\n    const { cropPosition } = this.state;\r\n\r\n    event.preventDefault();\r\n\r\n    const wrapper = findDOMNode(this.refs.wrapper);\r\n    const wrapperRect = wrapper.getBoundingClientRect();\r\n\r\n    const dragOffset = {\r\n      x: (event.pageX - wrapperRect.left) - cropPosition.x,\r\n      y: (event.pageY - wrapperRect.top) - cropPosition.y\r\n    };\r\n    this.setState({ dragOffset });\r\n\r\n    wrapper.addEventListener('mousemove', this.onMoving);\r\n    wrapper.addEventListener('touchmove', this.onMoving);\r\n  };\r\n  onMoving = (event) => {\r\n    const { dragOffset, cropSize } = this.state;\r\n    const wrapper = findDOMNode(this.refs.wrapper);\r\n    const wrapperRect = wrapper.getBoundingClientRect();\r\n\r\n    let cropPosition = {\r\n      x: (event.pageX - wrapperRect.left) - dragOffset.x,\r\n      y: (event.pageY - wrapperRect.top) - dragOffset.y\r\n    };\r\n\r\n    if (cropPosition.x < 0) {\r\n      cropPosition.x = 0;\r\n    } else if (cropPosition.x > wrapperRect.width - cropSize) {\r\n      cropPosition.x = wrapperRect.width - cropSize;\r\n    }\r\n\r\n    if (cropPosition.y < 0) {\r\n      cropPosition.y = 0;\r\n    } else if (cropPosition.y > wrapperRect.height - cropSize) {\r\n      cropPosition.y = wrapperRect.height - cropSize;\r\n    }\r\n\r\n    this.setState({ cropPosition })\r\n  };\r\n\r\n  onStartResizeTop = (event) => {\r\n    const wrapper = findDOMNode(this.refs.wrapper);\r\n    const resizeLastCoord = event.pageY;\r\n    event.preventDefault();\r\n    this.setState({ resizeLastCoord });\r\n    wrapper.addEventListener('mousemove', this.onResizeTop);\r\n    wrapper.addEventListener('touchmove', this.onResizeTop);\r\n  };\r\n\r\n  onStartResizeRight = (event) => {\r\n    const wrapper = findDOMNode(this.refs.wrapper);\r\n    const resizeLastCoord = event.pageX;\r\n    event.preventDefault();\r\n    this.setState({ resizeLastCoord });\r\n    wrapper.addEventListener('mousemove', this.onResizeRight);\r\n    wrapper.addEventListener('touchmove', this.onResizeRight);\r\n  };\r\n\r\n  onStartResizeBottom = (event) => {\r\n    const wrapper = findDOMNode(this.refs.wrapper);\r\n    const resizeLastCoord = event.pageY;\r\n    event.preventDefault();\r\n    this.setState({ resizeLastCoord });\r\n    wrapper.addEventListener('mousemove', this.onResizeBottom);\r\n    wrapper.addEventListener('touchmove', this.onResizeBottom);\r\n  };\r\n\r\n  onStartResizeLeft = (event) => {\r\n    const wrapper = findDOMNode(this.refs.wrapper);\r\n    const resizeLastCoord = event.pageX;\r\n    event.preventDefault();\r\n    this.setState({ resizeLastCoord });\r\n    wrapper.addEventListener('mousemove', this.onResizeLeft);\r\n    wrapper.addEventListener('touchmove', this.onResizeLeft);\r\n  };\r\n\r\n  onResizeTop = (event) => this.onCropResize(event, 'TOP');\r\n  onResizeRight = (event) => this.onCropResize(event, 'RIGHT');\r\n  onResizeBottom = (event) => this.onCropResize(event, 'BOTTOM');\r\n  onResizeLeft = (event) => this.onCropResize(event, 'LEFT');\r\n\r\n  onCropResize = (event, direction) => {\r\n    const { cropPosition, resizeLastCoord, cropSize, scaledWidth, scaledHeight } = this.state;\r\n    const axisCoord = (direction === 'RIGHT' || direction === 'LEFT') ? event.pageX : event.pageY;\r\n    const resizeValue = resizeLastCoord - axisCoord;\r\n\r\n    let resizeCropPosition, resizedCropSize;\r\n    switch (direction) {\r\n      case 'TOP':\r\n        resizedCropSize = cropSize + resizeValue;\r\n        resizeCropPosition = {\r\n          x: cropPosition.x - (resizeValue / 2),\r\n          y: cropPosition.y - resizeValue\r\n        };\r\n        break;\r\n      case 'RIGHT':\r\n        resizedCropSize = cropSize - resizeValue;\r\n        resizeCropPosition = {\r\n          x: cropPosition.x,\r\n          y: cropPosition.y + (resizeValue / 2)\r\n        };\r\n        break;\r\n      case 'BOTTOM':\r\n        resizedCropSize = cropSize - resizeValue;\r\n        resizeCropPosition = {\r\n          x: cropPosition.x + (resizeValue / 2),\r\n          y: cropPosition.y\r\n        };\r\n        break;\r\n      case 'LEFT':\r\n        resizedCropSize = cropSize + resizeValue;\r\n        resizeCropPosition = {\r\n          x: cropPosition.x - resizeValue,\r\n          y: cropPosition.y - (resizeValue / 2)\r\n        };\r\n        break;\r\n      default:\r\n    }\r\n\r\n    if (resizedCropSize < MIN_CROP_SIZE || resizedCropSize > scaledWidth || resizedCropSize > scaledHeight) {\r\n      resizedCropSize = cropSize;\r\n      resizeCropPosition = cropPosition;\r\n    }\r\n\r\n    this.setState({ resizeLastCoord: axisCoord });\r\n    this.updateCropSize(resizedCropSize, resizeCropPosition);\r\n  };\r\n\r\n  removeListeners = () => {\r\n    const wrapper = findDOMNode(this.refs.wrapper);\r\n\r\n    wrapper.removeEventListener('mousemove', this.onMoving);\r\n    wrapper.removeEventListener('touchmove', this.onMoving);\r\n    wrapper.removeEventListener('mousemove', this.onResizeTop);\r\n    wrapper.removeEventListener('touchmove', this.onResizeTop);\r\n    wrapper.removeEventListener('mousemove', this.onResizeRight);\r\n    wrapper.removeEventListener('touchmove', this.onResizeRight);\r\n    wrapper.removeEventListener('mousemove', this.onResizeBottom);\r\n    wrapper.removeEventListener('touchmove', this.onResizeBottom);\r\n    wrapper.removeEventListener('mousemove', this.onResizeLeft);\r\n    wrapper.removeEventListener('touchmove', this.onResizeLeft);\r\n  };\r\n\r\n  updateCropSize = (cropSize, cropPosition) => this.setState({ cropSize, cropPosition });\r\n\r\n  onCrop = () => {\r\n    const { cropPosition, cropSize, scaleRatio, callback } = this.state;\r\n    const cropImage = findDOMNode(this.refs.cropImage);\r\n    let canvas = document.createElement('canvas');\r\n    let context = canvas.getContext('2d');\r\n\r\n    canvas.width = canvas.height = cropSize;\r\n\r\n    context.drawImage(cropImage, cropPosition.x / scaleRatio, cropPosition.y / scaleRatio, cropSize / scaleRatio, cropSize / scaleRatio, 0, 0, cropSize, cropSize);\r\n\r\n    const croppedImage = dataURItoBlob(canvas.toDataURL());\r\n\r\n    callback && callback(croppedImage);\r\n    this.handleClose();\r\n  };\r\n\r\n  storeScaledSizes = () => {\r\n    const { cropSize } = this.state;\r\n    const originalImage = findDOMNode(this.refs.originalImage);\r\n    const scaledWidth = originalImage.width;\r\n    const scaledHeight = originalImage.height;\r\n    const naturalWidth = originalImage.naturalWidth;\r\n    const naturalHeight = originalImage.naturalHeight;\r\n    const scaleRatio = scaledWidth/naturalWidth;\r\n    const cropPosition = {\r\n      x: ((naturalWidth / 2) - (cropSize / 2)) * scaleRatio,\r\n      y: ((naturalHeight / 2) - (cropSize / 2)) * scaleRatio\r\n    };\r\n\r\n    this.setState({ cropPosition, scaledWidth, scaledHeight, naturalWidth, naturalHeight, scaleRatio });\r\n  };\r\n\r\n  renderControls() {\r\n    return (\r\n      <div className=\"controls\">\r\n        <button className=\"button\" onClick={this.handleClose}>\r\n          <FormattedMessage id=\"button.cancel\"/>\r\n        </button>\r\n        <button className=\"button button--rised\" onClick={this.onCrop}>\r\n          <FormattedMessage id=\"button.done\"/>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { pictureSource, cropPosition, cropSize, scaledWidth, scaledHeight, maxImageHeight } = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        overlayClassName=\"modal-overlay modal-overlay--white\"\r\n        className=\"modal modal--fullscreen\"\r\n        onRequestClose={this.handleClose}\r\n        shouldCloseOnOverlayClick={false}\r\n        isOpen>\r\n\r\n        <ModalCloseButton onClick={this.handleClose}/>\r\n\r\n        <div className=\"crop\">\r\n          <div className=\"modal__content\">\r\n\r\n            <header className=\"modal__header\">\r\n                <FormattedMessage id=\"modal.crop.title\" tagName=\"h1\"/>\r\n            </header>\r\n\r\n            <div className=\"modal__body\">\r\n              <div className=\"crop-wrapper\"\r\n                   ref=\"wrapper\"\r\n                   onTouchEnd={this.removeListeners}\r\n                   onMouseUp={this.removeListeners}>\r\n                <div className=\"crop-wrapper__scale\"\r\n                     style={{ width: cropSize, height: cropSize, left: cropPosition.x, top: cropPosition.y }}>\r\n                  <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--top\"\r\n                       onMouseDown={this.onStartResizeTop}\r\n                       onTouchStart={this.onStartResizeTop}/>\r\n                  <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--right\"\r\n                       onMouseDown={this.onStartResizeRight}\r\n                       onTouchStart={this.onStartResizeRight}/>\r\n                  <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--bottom\"\r\n                       onMouseDown={this.onStartResizeBottom}\r\n                       onTouchStart={this.onStartResizeBottom}/>\r\n                  <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--left\"\r\n                       onMouseDown={this.onStartResizeLeft}\r\n                       onTouchStart={this.onStartResizeLeft}/>\r\n                </div>\r\n                <div className=\"crop-wrapper__overlay\"\r\n                     onMouseDown={this.onStartMoving}\r\n                     onTouchStart={this.onStartMoving}\r\n                     style={{ width: cropSize, height: cropSize, left: cropPosition.x, top: cropPosition.y }}>\r\n                  <img className=\"crop-wrapper__image-crop\"\r\n                       draggable=\"false\"\r\n                       ref=\"cropImage\"\r\n                       src={pictureSource}\r\n                       style={{ left: -cropPosition.x, top: -cropPosition.y, width: scaledWidth, height: scaledHeight }}/>\r\n                </div>\r\n\r\n                <img\r\n                  className=\"crop-wrapper__image-original\"\r\n                  draggable=\"false\"\r\n                  ref=\"originalImage\"\r\n                  src={pictureSource}\r\n                  style={{ maxHeight: maxImageHeight }}/>\r\n              </div>\r\n            </div>\r\n\r\n            <footer className=\"modal__footer\">\r\n              {this.renderControls()}\r\n            </footer>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container.create(CropAvatarModal);\r\n"]}
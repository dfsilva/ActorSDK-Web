{"version":3,"sources":["../../../src/components/modals/Preferences.react.js"],"names":["PreferencesModal","getStores","calculateState","prevState","isSendByEnterEnabled","isSoundEffectsEnabled","isGroupsNotificationsEnabled","isOnlyMentionNotifications","isShowNotificationsTextEnabled","isAnimationAutoPlayEnabled","sessions","getSessions","activeTab","getCurrentTab","terminateState","getTerminateState","props","SharedActor","get","appName","handleClose","bind","handleSave","handleChangeTab","toggleSendByEnter","changeSoundEffectsEnabled","changeGroupsNotificationsEnabled","changeMentionNotifications","changeIsShowNotificationTextEnabled","changeIsAnimationAutoPlayEnabled","handleTerminateAllSessionsClick","components","getComponents","About","about","hide","state","save","event","setState","target","value","checked","terminateAllSessions","tab","changeTab","renderAppAbout","aboutTabClassNames","ABOUT","renderPreferencesSidebar","generalTabClassNames","GENERAL","notificationTabClassNames","NOTIFICATIONS","blockTabClassNames","BLOCKED","securityTabClassNames","SECURITY","renderGeneralTab","renderNotificationsTab","renderSecurityTab","renderSessionList","map","session","index","id","PENDING","renderAboutTab","renderCurrentTab","render","create","pure"],"mappings":"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","file":"Preferences.react.js","sourcesContent":["/*\r\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { isFunction } from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { Container } from 'flux/utils';\r\nimport classnames from 'classnames';\r\nimport Modal from 'react-modal';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport SharedContainer from '../../utils/SharedContainer'\r\nimport DelegateContainer from '../../utils/DelegateContainer';\r\nimport { appName, PreferencesTabTypes, AsyncActionStates } from '../../constants/ActorAppConstants';\r\n\r\nimport PreferencesActionCreators from '../../actions/PreferencesActionCreators';\r\n\r\nimport PreferencesStore from '../../stores/PreferencesStore';\r\n\r\nimport Checkbox from '../common/Checkbox.react';\r\nimport Session from './preferences/Session.react';\r\nimport BlockedUsers from './preferences/BlockedUsers.react';\r\n\r\nclass PreferencesModal extends Component {\r\n  static getStores() {\r\n    return [PreferencesStore];\r\n  }\r\n\r\n  static calculateState(prevState) {\r\n    return {\r\n      isSendByEnterEnabled: prevState ? prevState.isSendByEnterEnabled : PreferencesStore.isSendByEnterEnabled(),\r\n      isSoundEffectsEnabled: prevState ? prevState.isSoundEffectsEnabled : PreferencesStore.isSoundEffectsEnabled(),\r\n      isGroupsNotificationsEnabled: prevState ? prevState.isGroupsNotificationsEnabled : PreferencesStore.isGroupsNotificationsEnabled(),\r\n      isOnlyMentionNotifications: prevState ? prevState.isOnlyMentionNotifications : PreferencesStore.isOnlyMentionNotifications(),\r\n      isShowNotificationsTextEnabled: prevState ? prevState.isShowNotificationsTextEnabled : PreferencesStore.isShowNotificationsTextEnabled(),\r\n      isAnimationAutoPlayEnabled: prevState ? prevState.isAnimationAutoPlayEnabled : PreferencesStore.isAnimationAutoPlayEnabled(),\r\n      sessions: PreferencesStore.getSessions(),\r\n      activeTab: PreferencesStore.getCurrentTab(),\r\n      terminateState: PreferencesStore.getTerminateState()\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const SharedActor = SharedContainer.get();\r\n    this.appName = SharedActor.appName ? SharedActor.appName : appName;\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.handleChangeTab = this.handleChangeTab.bind(this);\r\n    this.toggleSendByEnter = this.toggleSendByEnter.bind(this);\r\n    this.changeSoundEffectsEnabled = this.changeSoundEffectsEnabled.bind(this);\r\n    this.changeGroupsNotificationsEnabled = this.changeGroupsNotificationsEnabled.bind(this);\r\n    this.changeMentionNotifications = this.changeMentionNotifications.bind(this);\r\n    this.changeIsShowNotificationTextEnabled = this.changeIsShowNotificationTextEnabled.bind(this);\r\n    this.changeIsAnimationAutoPlayEnabled = this.changeIsAnimationAutoPlayEnabled.bind(this);\r\n    this.handleTerminateAllSessionsClick = this.handleTerminateAllSessionsClick.bind(this);\r\n\r\n    this.components = this.getComponents();\r\n  }\r\n\r\n  getComponents() {\r\n    const { components } = DelegateContainer.get();\r\n\r\n    if (components) {\r\n      return {\r\n        About: isFunction(components.about) ? components.about : null\r\n      };\r\n    }\r\n\r\n    return {\r\n      About: null\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    PreferencesActionCreators.hide();\r\n  }\r\n\r\n  handleSave() {\r\n    const {\r\n      isSendByEnterEnabled,\r\n      isSoundEffectsEnabled,\r\n      isGroupsNotificationsEnabled,\r\n      isOnlyMentionNotifications,\r\n      isShowNotificationsTextEnabled,\r\n      isAnimationAutoPlayEnabled\r\n    } = this.state;\r\n\r\n    PreferencesActionCreators.save({\r\n      isSendByEnterEnabled,\r\n      isSoundEffectsEnabled,\r\n      isGroupsNotificationsEnabled,\r\n      isOnlyMentionNotifications,\r\n      isShowNotificationsTextEnabled,\r\n      isAnimationAutoPlayEnabled\r\n    });\r\n    this.handleClose();\r\n  }\r\n\r\n  toggleSendByEnter(event) {\r\n    this.setState({ isSendByEnterEnabled: event.target.value === 'true' });\r\n  }\r\n\r\n  changeSoundEffectsEnabled(event) {\r\n    this.setState({ isSoundEffectsEnabled: event.target.checked });\r\n  }\r\n\r\n  changeGroupsNotificationsEnabled(event) {\r\n    this.setState({ isGroupsNotificationsEnabled: event.target.checked });\r\n  }\r\n\r\n  changeMentionNotifications(event) {\r\n    this.setState({ isOnlyMentionNotifications: event.target.checked });\r\n  }\r\n\r\n  changeIsShowNotificationTextEnabled(event) {\r\n    this.setState({ isShowNotificationsTextEnabled: event.target.checked });\r\n  }\r\n\r\n  changeIsAnimationAutoPlayEnabled(event) {\r\n    this.setState({ isAnimationAutoPlayEnabled: event.target.checked });\r\n  }\r\n\r\n  handleTerminateAllSessionsClick() {\r\n    PreferencesActionCreators.terminateAllSessions();\r\n  }\r\n\r\n  handleChangeTab(tab) {\r\n    PreferencesActionCreators.changeTab(tab);\r\n  }\r\n\r\n  renderAppAbout() {\r\n    const { About } = this.components;\r\n    if (!About) {\r\n      return null;\r\n    }\r\n\r\n    const { activeTab } = this.state;\r\n    const aboutTabClassNames = classnames('preferences__tabs__tab', {\r\n      'preferences__tabs__tab--active': activeTab ===  PreferencesTabTypes.ABOUT\r\n    });\r\n\r\n    return (\r\n      <a className={aboutTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.ABOUT)}>\r\n        <FormattedMessage id=\"preferences.about.title\"/>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  renderPreferencesSidebar() {\r\n    const { activeTab } = this.state;\r\n\r\n    const generalTabClassNames = classnames('preferences__tabs__tab', {\r\n      'preferences__tabs__tab--active': activeTab === PreferencesTabTypes.GENERAL\r\n    });\r\n    const notificationTabClassNames = classnames('preferences__tabs__tab', {\r\n      'preferences__tabs__tab--active': activeTab ===  PreferencesTabTypes.NOTIFICATIONS\r\n    });\r\n    const blockTabClassNames = classnames('preferences__tabs__tab', {\r\n      'preferences__tabs__tab--active': activeTab ===  PreferencesTabTypes.BLOCKED\r\n    });\r\n    const securityTabClassNames = classnames('preferences__tabs__tab', {\r\n      'preferences__tabs__tab--active': activeTab ===  PreferencesTabTypes.SECURITY\r\n    });\r\n\r\n    return (\r\n      <aside className=\"preferences__tabs\">\r\n        <a className={generalTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.GENERAL)}>\r\n          <FormattedMessage id=\"preferences.general.title\"/>\r\n        </a>\r\n        <a className={notificationTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.NOTIFICATIONS)}>\r\n          <FormattedMessage id=\"preferences.notifications.title\"/>\r\n        </a>\r\n        <a className={blockTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.BLOCKED)}>\r\n          <FormattedMessage id=\"preferences.blocked.title\"/>\r\n        </a>\r\n        <a className={securityTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.SECURITY)}>\r\n          <FormattedMessage id=\"preferences.security.title\"/>\r\n        </a>\r\n        {this.renderAppAbout()}\r\n      </aside>\r\n    );\r\n  }\r\n\r\n  renderGeneralTab() {\r\n    // FIXME: Sometimes radio buttons doesnt checked after changing tab;\r\n    const { isSendByEnterEnabled, isAnimationAutoPlayEnabled } = this.state;\r\n\r\n    return (\r\n      <div className=\"preferences__tabs__content\">\r\n        <ul>\r\n          <li>\r\n            <i className=\"icon material-icons\">keyboard</i>\r\n            <FormattedMessage id=\"preferences.general.send.title\" tagName=\"h4\"/>\r\n            <div className=\"radio\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"sendByEnter\"\r\n                id=\"sendByEnterEnabled\"\r\n                value=\"true\"\r\n                checked={isSendByEnterEnabled}\r\n                onChange={this.toggleSendByEnter}/>\r\n              <label htmlFor=\"sendByEnterEnabled\">\r\n                <b>Enter</b> – <FormattedMessage id=\"preferences.general.send.sendMessage\"/>,&nbsp;\r\n                <b>Shift + Enter</b> – <FormattedMessage id=\"preferences.general.send.newLine\"/>\r\n              </label>\r\n            </div>\r\n            <div className=\"radio\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"sendByEnter\"\r\n                id=\"sendByEnterDisabled\"\r\n                value=\"false\"\r\n                checked={!isSendByEnterEnabled}\r\n                onChange={this.toggleSendByEnter}/>\r\n              <label htmlFor=\"sendByEnterDisabled\">\r\n                <b>Cmd + Enter</b> – <FormattedMessage id=\"preferences.general.send.sendMessage\"/>,&nbsp;\r\n                <b>Enter</b> – <FormattedMessage id=\"preferences.general.send.newLine\"/>\r\n              </label>\r\n            </div>\r\n          </li>\r\n\r\n          <li>\r\n            <i className=\"icon material-icons\">wallpaper</i>\r\n            <FormattedMessage id=\"preferences.interface.title\" tagName=\"h4\"/>\r\n            <Checkbox\r\n              id=\"animationAutoPlayEnabled\"\r\n              name=\"animationAutoPlayEnabled\"\r\n              value={isAnimationAutoPlayEnabled}\r\n              label={<FormattedMessage id=\"preferences.interface.animation.title\" />}\r\n              onChange={this.changeIsAnimationAutoPlayEnabled}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderNotificationsTab() {\r\n    // FIXME: Checkboxes blinking on changing tabs\r\n    const {\r\n      isSoundEffectsEnabled,\r\n      isGroupsNotificationsEnabled,\r\n      isOnlyMentionNotifications,\r\n      isShowNotificationsTextEnabled\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"preferences__tabs__content\">\r\n        <ul>\r\n          <li>\r\n            <i className=\"icon material-icons\">music_note</i>\r\n            <FormattedMessage id=\"preferences.notifications.effects.title\" tagName=\"h4\"/>\r\n            <div className=\"checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"soundEffects\"\r\n                checked={isSoundEffectsEnabled}\r\n                onChange={this.changeSoundEffectsEnabled}/>\r\n              <label htmlFor=\"soundEffects\">\r\n                <FormattedMessage id=\"preferences.notifications.effects.enable\"/>\r\n              </label>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <i className=\"icon material-icons\">notifications</i>\r\n            <FormattedMessage id=\"preferences.notifications.notification.title\" tagName=\"h4\"/>\r\n            <div className=\"checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"groupNotifications\"\r\n                checked={isGroupsNotificationsEnabled}\r\n                onChange={this.changeGroupsNotificationsEnabled}/>\r\n              <label htmlFor=\"groupNotifications\">\r\n                <FormattedMessage id=\"preferences.notifications.notification.enable\"/>\r\n              </label>\r\n            </div>\r\n            <div className=\"checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"mentionsNotifications\"\r\n                checked={isOnlyMentionNotifications}\r\n                onChange={this.changeMentionNotifications}/>\r\n              <label htmlFor=\"mentionsNotifications\">\r\n                <FormattedMessage id=\"preferences.notifications.notification.onlyMentionEnable\"/>\r\n              </label>\r\n            </div>\r\n            <p className=\"hint\"><FormattedMessage id=\"preferences.notifications.notification.onlyMentionHint\"/></p>\r\n          </li>\r\n          <li>\r\n            <i className=\"icon material-icons\">visibility</i>\r\n            <FormattedMessage id=\"preferences.notifications.privacy.title\" tagName=\"h4\"/>\r\n            <div className=\"checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"notificationTextPreview\"\r\n                checked={isShowNotificationsTextEnabled}\r\n                onChange={this.changeIsShowNotificationTextEnabled}/>\r\n              <label htmlFor=\"notificationTextPreview\">\r\n                <FormattedMessage id=\"preferences.notifications.privacy.messagePreview\"/>\r\n              </label>\r\n            </div>\r\n            <p className=\"hint\"><FormattedMessage id=\"preferences.notifications.privacy.messagePreviewHint\"/></p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSecurityTab() {\r\n    return (\r\n      <div className=\"preferences__tabs__content\">\r\n        <ul>\r\n          <li>\r\n            <i className=\"icon material-icons\">devices</i>\r\n            <FormattedMessage id=\"preferences.security.sessions.title\" tagName=\"h4\"/>\r\n            <ul className=\"session-list\">\r\n              {this.renderSessionList()}\r\n              <li className=\"session-list__session\">\r\n                <a className=\"link--red\" onClick={this.handleTerminateAllSessionsClick}>\r\n                  <FormattedMessage id=\"preferences.security.sessions.terminateAll\"/>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSessionList() {\r\n    const { sessions, terminateState } = this.state;\r\n    return sessions.map((session, index) => {\r\n      return (\r\n        <Session\r\n          {...session}\r\n          key={`s${index}`}\r\n          terminateState={terminateState[session.id] || AsyncActionStates.PENDING}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  renderAboutTab() {\r\n    const { About } = this.components;\r\n    if (!About) {\r\n      return null;\r\n    }\r\n\r\n    return <About/>\r\n  }\r\n\r\n  renderCurrentTab() {\r\n    const { activeTab } = this.state;\r\n    switch (activeTab) {\r\n      case PreferencesTabTypes.GENERAL:\r\n        return this.renderGeneralTab()\r\n      case PreferencesTabTypes.NOTIFICATIONS:\r\n        return this.renderNotificationsTab()\r\n      case PreferencesTabTypes.BLOCKED:\r\n        return <BlockedUsers/>\r\n      case PreferencesTabTypes.SECURITY:\r\n        return this.renderSecurityTab()\r\n      case PreferencesTabTypes.ABOUT:\r\n        return this.renderAboutTab();\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        overlayClassName=\"modal-overlay\"\r\n        className=\"modal\"\r\n        onRequestClose={this.handleClose}\r\n        isOpen>\r\n\r\n        <div className=\"preferences\">\r\n          <div className=\"modal__content\">\r\n\r\n            <header className=\"modal__header\">\r\n              <i className=\"modal__header__icon material-icons\">settings</i>\r\n              <FormattedMessage id=\"preferences.title\" tagName=\"h1\"/>\r\n              <button className=\"button button--lightblue\" onClick={this.handleSave}>\r\n                <FormattedMessage id=\"button.done\"/>\r\n              </button>\r\n            </header>\r\n\r\n            <div className=\"modal__body\">\r\n              {this.renderPreferencesSidebar()}\r\n              <div className=\"preferences__body\">\r\n                {this.renderCurrentTab()}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container.create(PreferencesModal, { pure: false });\r\n"]}
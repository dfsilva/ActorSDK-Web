{"version":3,"sources":["../../../../src/components/dialog/compose/BotCommandsHint.react.js"],"names":["DROPDOWN_ITEM_HEIGHT","scrollIndex","BotCommandsHint","props","state","selectedIndex","scrollTo","bind","onKeyDown","onDocumentClick","onDocumentKeyDown","shouldComponentUpdate","componentDidMount","listeners","listen","document","componentWillUnmount","forEach","listener","remove","onClose","event","top","menuListNode","refs","list","scrollTop","commands","visibleItems","index","keyCode","ENTER","stopPropagation","preventDefault","onSelect","command","ARROW_UP","length","setState","ARROW_DOWN","TAB","ESC","renderCommands","map","description","className","render","propTypes","array","isRequired","func"],"mappings":"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","file":"BotCommandsHint.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { PropTypes, Component } from 'react';\r\nimport EventListener from 'fbjs/lib/EventListener';\r\nimport { findDOMNode } from 'react-dom';\r\nimport classnames from 'classnames';\r\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\r\n\r\nimport { KeyCodes } from '../../../constants/ActorAppConstants';\r\n\r\nconst DROPDOWN_ITEM_HEIGHT = 33;\r\nlet scrollIndex = 0;\r\n\r\nclass BotCommandsHint extends Component {\r\n  static propTypes = {\r\n    commands: PropTypes.array.isRequired,\r\n    onSelect: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedIndex: 0\r\n    };\r\n\r\n    this.scrollTo = this.scrollTo.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onDocumentClick = this.onDocumentClick.bind(this);\r\n    this.onDocumentKeyDown = this.onDocumentKeyDown.bind(this);\r\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.listeners = [\r\n      EventListener.listen(document, 'click', this.onDocumentClick),\r\n      EventListener.listen(document, 'keydown', this.onDocumentKeyDown)\r\n    ];\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.listeners.forEach((listener) => listener.remove());\r\n    this.listeners = null;\r\n  }\r\n\r\n  onDocumentClick() {\r\n    this.props.onClose();\r\n  }\r\n\r\n  onDocumentKeyDown(event) {\r\n    this.onKeyDown(event);\r\n  }\r\n\r\n  scrollTo(top) {\r\n    const menuListNode = findDOMNode(this.refs.list);\r\n    menuListNode.scrollTop = top;\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    const { commands } = this.props;\r\n    const { selectedIndex } = this.state;\r\n    const visibleItems = 3;\r\n    let index = selectedIndex;\r\n\r\n    if (index !== null) {\r\n      switch (event.keyCode) {\r\n        case KeyCodes.ENTER:\r\n          event.stopPropagation();\r\n          event.preventDefault();\r\n          this.props.onSelect(commands[selectedIndex].command);\r\n          break;\r\n\r\n        case KeyCodes.ARROW_UP:\r\n          event.stopPropagation();\r\n          event.preventDefault();\r\n\r\n          if (index > 0) {\r\n            index -= 1;\r\n          } else if (index === 0) {\r\n            index = commands.length - 1;\r\n          }\r\n\r\n          if (scrollIndex > index) {\r\n            scrollIndex = index;\r\n          } else if (index === commands.length - 1) {\r\n            scrollIndex = commands.length - visibleItems;\r\n          }\r\n\r\n          this.scrollTo(scrollIndex * DROPDOWN_ITEM_HEIGHT);\r\n          this.setState({ selectedIndex: index });\r\n          break;\r\n        case KeyCodes.ARROW_DOWN:\r\n        case KeyCodes.TAB:\r\n          event.stopPropagation();\r\n          event.preventDefault();\r\n\r\n          if (index < commands.length - 1) {\r\n            index += 1;\r\n          } else if (index === commands.length - 1) {\r\n            index = 0;\r\n          }\r\n\r\n          if (index + 1 > scrollIndex + visibleItems) {\r\n            scrollIndex = index + 1 - visibleItems;\r\n          } else if (index === 0) {\r\n            scrollIndex = 0;\r\n          }\r\n\r\n          this.scrollTo(scrollIndex * DROPDOWN_ITEM_HEIGHT);\r\n          this.setState({ selectedIndex: index });\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n\r\n    if (event.keyCode === KeyCodes.ESC) {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  renderCommands() {\r\n    const { selectedIndex } = this.state;\r\n\r\n    return this.props.commands.map(({ command, description }, index) => {\r\n      const className = classnames('mention__list__item', {\r\n        'mention__list__item--active': selectedIndex === index\r\n      });\r\n\r\n      return (\r\n        <li\r\n          key={command}\r\n          className={className}\r\n          onClick={() => this.props.onSelect(command)}\r\n          onMouseOver={() => this.setState({ selectedIndex: index })}\r\n        >\r\n          <div className=\"title\">\r\n            <span className=\"nickname\">{`/${command}`}</span>\r\n            <span className=\"name\">{description}</span>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bot-commands bot-commands\">\r\n        <div className=\"bot-commands__wrapper\">\r\n          <header className=\"bot-commands__header\">\r\n            <div className=\"pull-left\"><strong>tab</strong>&nbsp; or &nbsp;<strong>↑</strong><strong>↓</strong>&nbsp; to navigate</div>\r\n            <div className=\"pull-left\"><strong>↵</strong>&nbsp; to select</div>\r\n            <div className=\"pull-right\"><strong>esc</strong>&nbsp; to close</div>\r\n          </header>\r\n          <ul className=\"bot-commands__list\" ref=\"list\">\r\n            {this.renderCommands()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BotCommandsHint;\r\n"]}
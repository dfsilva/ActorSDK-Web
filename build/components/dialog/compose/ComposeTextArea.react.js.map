{"version":3,"sources":["../../../../src/components/dialog/compose/ComposeTextArea.react.js"],"names":["ComposeTextArea","props","onChange","bind","onKeyDown","onWindowFocus","onDocumentKeyDown","blur","focus","autoFocus","componentDidMount","window","addEventListener","document","shouldComponentUpdate","nextProps","value","sendEnabled","sendByEnter","componentWillUnmount","removeEventListener","event","target","refs","area","metaKey","altKey","ctrlKey","shiftKey","onTyping","getCaretPosition","isSendEvent","preventDefault","onSubmit","keyCode","ENTER","getInputSelection","start","render","placeholder","onPaste","force","activeElement","selectionStart","selectionEnd","length","createTextRange","range","collapse","select","propTypes","string","isRequired","bool","func","placholder","defaultProps"],"mappings":"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","file":"ComposeTextArea.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport Inputs from '../../../utils/Inputs';\r\nimport { KeyCodes } from '../../../constants/ActorAppConstants';\r\n\r\nclass ComposeTextArea extends Component {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    autoFocus: PropTypes.bool.isRequired,\r\n    sendByEnter: PropTypes.bool.isRequired,\r\n    sendEnabled: PropTypes.bool.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    onTyping: PropTypes.func.isRequired,\r\n    onPaste: PropTypes.func.isRequired,\r\n    onKeyDown: PropTypes.func.isRequired,\r\n\r\n    placholder: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    sendEnabled: true,\r\n    onPaste: () => {}\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onKeyDown = this.onKeyDown.bind(this);\r\n    this.onWindowFocus = this.onWindowFocus.bind(this);\r\n    this.onDocumentKeyDown = this.onDocumentKeyDown.bind(this);\r\n\r\n    this.blur = this.blur.bind(this);\r\n    this.focus = this.focus.bind(this);\r\n    this.autoFocus = this.autoFocus.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.autoFocus) {\r\n      this.focus();\r\n    }\r\n\r\n    window.addEventListener('focus', this.onWindowFocus);\r\n    document.addEventListener('keydown', this.onDocumentKeyDown, false);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return nextProps.value !== this.props.value ||\r\n           nextProps.autoFocus !== this.props.autoFocus ||\r\n           nextProps.sendEnabled !== this.props.sendEnabled ||\r\n           nextProps.sendByEnter !== this.props.sendByEnter;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('focus', this.onWindowFocus);\r\n    document.removeEventListener('keydown', this.onDocumentKeyDown, false);\r\n  }\r\n\r\n  onWindowFocus() {\r\n    this.autoFocus();\r\n  }\r\n\r\n  onDocumentKeyDown(event) {\r\n    if (event.target === this.refs.area) {\r\n      // event will be handled by onKeyDown\r\n      return;\r\n    }\r\n\r\n    if (!event.metaKey && !event.altKey && !event.ctrlKey && !event.shiftKey) {\r\n      this.autoFocus();\r\n      this.onKeyDown(event);\r\n    }\r\n  }\r\n\r\n  onChange(event) {\r\n    this.props.onTyping(event.target.value, this.getCaretPosition());\r\n  }\r\n\r\n  onKeyDown(event) {\r\n    if (this.props.sendEnabled && this.isSendEvent(event)) {\r\n      event.preventDefault();\r\n      this.props.onSubmit();\r\n    } else if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(event);\r\n    }\r\n  }\r\n\r\n  isSendEvent(event) {\r\n    if (event.keyCode !== KeyCodes.ENTER) {\r\n      return false;\r\n    }\r\n\r\n    return this.props.sendByEnter ? !event.shiftKey : event.metaKey;\r\n  }\r\n\r\n  getCaretPosition() {\r\n    const { start } = Inputs.getInputSelection(this.refs.area);\r\n    return start;\r\n  }\r\n\r\n  render() {\r\n    const { value, placeholder } = this.props;\r\n\r\n    return (\r\n      <textarea\r\n        ref=\"area\"\r\n        className=\"compose__message\"\r\n        value={value}\r\n        placeholder={placeholder}\r\n        onChange={this.onChange}\r\n        onKeyDown={this.onKeyDown}\r\n        onPaste={this.props.onPaste}\r\n      />\r\n    );\r\n  }\r\n\r\n  focus(force = false) {\r\n    const { area } = this.refs;\r\n    if (force || area !== document.activeElement) {\r\n      area.focus();\r\n      if (typeof area.selectionStart == 'number') {\r\n        area.selectionStart = area.selectionEnd = area.value.length;\r\n      } else if (typeof area.createTextRange != 'undefined') {\r\n        const range = area.createTextRange();\r\n        range.collapse(false);\r\n        range.select();\r\n      }\r\n    }\r\n  }\r\n\r\n  autoFocus() {\r\n    if (this.props.autoFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  blur() {\r\n    this.refs.area.blur();\r\n  }\r\n}\r\n\r\nexport default ComposeTextArea;\r\n"]}
{"version":3,"sources":["../../../../src/components/dialog/messages/Welcome.react.js"],"names":["Welcome","props","context","onInviteClick","bind","shouldComponentUpdate","peer","group","getGroup","id","show","renderWelcomeAvatar","renderUserText","user","getUser","isBot","avatar","placeholder","name","marginTop","about","renderGroupText","intl","myID","getMyId","admin","adminId","creator","messages","renderText","type","USER","GROUP","render","propTypes","object","isRequired","contextTypes"],"mappings":"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","file":"Welcome.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { FormattedHTMLMessage } from 'react-intl'\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\n\nimport SvgIcon from '../../common/SvgIcon.react';\n\nimport { PeerTypes } from '../../../constants/ActorAppConstants';\n\nimport InviteUserActions from '../../../actions/InviteUserActions';\n\nimport UserStore from '../../../stores/UserStore';\nimport GroupStore from '../../../stores/GroupStore';\n\nimport AvatarItem from './../../common/AvatarItem.react';\n\nclass Welcome extends Component {\n  static propTypes = {\n    peer: PropTypes.object.isRequired\n  };\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.onInviteClick = this.onInviteClick.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  onInviteClick() {\n    const { peer } = this.props;\n    const group = GroupStore.getGroup(peer.id);\n    InviteUserActions.show(group);\n  }\n\n  renderWelcomeAvatar() {\n    return (\n      <div className=\"message__info\">\n        <div className=\"welcome-avatar\">\n          <SvgIcon className=\"icon icon--gray\" glyph=\"star\" />\n        </div>\n      </div>\n    );\n  }\n\n  renderUserText(id) {\n    const user = UserStore.getUser(id);\n\n    if (user.isBot) {\n      return (\n        <div className=\"row\">\n          <div className=\"message__info\">\n            <AvatarItem\n              image={user.avatar}\n              className=\"message__avatar\"\n              placeholder={user.placeholder}\n              size=\"normal\"\n              title={user.name}\n            />\n          </div>\n          <div className=\"message__body col-xs\">\n            <FormattedHTMLMessage id=\"message.welcome.private\" values={{ name: user.name }}/>\n            <p style={{ marginTop: 16 }}>{user.about}</p>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"row\">\n        {this.renderWelcomeAvatar()}\n        <div className=\"message__body col-xs\">\n          <FormattedHTMLMessage id=\"message.welcome.private\" values={{ name: user.name }}/>\n        </div>\n      </div>\n    );\n  }\n\n  renderGroupText(id) {\n    const { intl } = this.context;\n    const group = GroupStore.getGroup(id);\n    const myID = UserStore.getMyId();\n    const admin = UserStore.getUser(group.adminId);\n    const creator = group.adminId === myID ? intl.messages['message.welcome.group.you'] : (admin ? admin.name : \"\");\n\n    return (\n      <div className=\"row\">\n        {this.renderWelcomeAvatar()}\n        <div className=\"message__body col-xs\">\n          <FormattedHTMLMessage id=\"message.welcome.group.main\" values={{ name: group.name, creator }}/>\n          <p>\n            {intl.messages['message.welcome.group.actions.start']}\n            <a onClick={this.onInviteClick}>{intl.messages['message.welcome.group.actions.invite']}</a>\n            {intl.messages['message.welcome.group.actions.end']}\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  renderText() {\n    const { peer } = this.props;\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        return this.renderUserText(peer.id);\n      case PeerTypes.GROUP:\n        return this.renderGroupText(peer.id);\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"message message--welcome\">\n        {this.renderText()}\n      </div>\n    )\n  }\n}\n\nexport default Welcome;\n"]}
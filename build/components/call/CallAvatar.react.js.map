{"version":3,"sources":["../../../src/components/call/CallAvatar.react.js"],"names":["CallAvatar","renderAnimation","props","callState","small","CALLING","CONNECTING","className","render","peerInfo","name","avatar","placeholder","propTypes","bool","shape","string","isRequired","oneOf","IN_PROGRESS","ENDED"],"mappings":";;;;AAIA;;;;AACA;;;;AAEA;;AAEA;;;;;;;;;;+eATA;;;;IAWMA,U;;;;;;;;;uBAgBJC,e,8BAAkB;AAAA,iBACa,KAAKC,KADlB;AAAA,QACRC,SADQ,UACRA,SADQ;AAAA,QACGC,KADH,UACGA,KADH;;;AAGhB,QAAID,cAAc,8BAAWE,OAAzB,IAAoCF,cAAc,8BAAWG,UAAjE,EAA6E;AAC3E,aAAO,IAAP;AACD;;AAED,QAAMC,YAAY,0BAAW,qBAAX,EAAkC;AAClD,oCAA8BH;AADoB,KAAlC,CAAlB;;AAIA,WACE;AAAA;AAAA,QAAK,WAAWG,SAAhB;AACE,gDADF;AACQ,gDADR;AACc;AADd,KADF;AAKD,G;;uBAEDC,M,qBAAS;AAAA,kBACqB,KAAKN,KAD1B;AAAA,QACCO,QADD,WACCA,QADD;AAAA,QACWL,KADX,WACWA,KADX;;;AAGP,WACE;AAAA;AAAA,QAAK,WAAU,yBAAf;AACE;AACE,mBAAU,cADZ;AAEE,cAAMA,QAAQ,OAAR,GAAkB,KAF1B;AAGE,eAAOK,SAASC,IAHlB;AAIE,eAAOD,SAASE,MAJlB;AAKE,qBAAaF,SAASG;AALxB,QADF;AAQG,WAAKX,eAAL;AARH,KADF;AAYD,G;;;;;AAjDGD,U,CACGa,S,GAAY;AACjBT,SAAO,iBAAUU,IADA;AAEjBL,YAAU,iBAAUM,KAAV,CAAgB;AACxBL,UAAM,iBAAUM,MAAV,CAAiBC,UADC;AAExBN,YAAQ,iBAAUK,MAFM;AAGxBJ,iBAAa,iBAAUI,MAAV,CAAiBC;AAHN,GAAhB,EAIPA,UANc;AAOjBd,aAAW,iBAAUe,KAAV,CAAgB,CACzB,8BAAWb,OADc,EAEzB,8BAAWc,WAFc,EAGzB,8BAAWb,UAHc,EAIzB,8BAAWc,KAJc,CAAhB,EAKRH;AAZc,C;kBAmDNjB,U","file":"CallAvatar.react.js","sourcesContent":["/*\r\n* Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n*/\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport { CallStates } from '../../constants/ActorAppConstants';\r\n\r\nimport AvatarItem from '../common/AvatarItem.react';\r\n\r\nclass CallAvatar extends Component {\r\n  static propTypes = {\r\n    small: PropTypes.bool,\r\n    peerInfo: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string,\r\n      placeholder: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    callState: PropTypes.oneOf([\r\n      CallStates.CALLING,\r\n      CallStates.IN_PROGRESS,\r\n      CallStates.CONNECTING,\r\n      CallStates.ENDED\r\n    ]).isRequired\r\n  };\r\n\r\n  renderAnimation() {\r\n    const { callState, small } = this.props;\r\n\r\n    if (callState !== CallStates.CALLING && callState !== CallStates.CONNECTING) {\r\n      return null;\r\n    }\r\n\r\n    const className = classNames('call__avatar__rings', {\r\n      'call__avatar__rings--small': small\r\n    });\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div/><div/><div/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { peerInfo, small } = this.props;\r\n\r\n    return (\r\n      <div className=\"call__avatar__container\">\r\n        <AvatarItem\r\n          className=\"call__avatar\"\r\n          size={small ? 'large' : 'big'}\r\n          title={peerInfo.name}\r\n          image={peerInfo.avatar}\r\n          placeholder={peerInfo.placeholder}\r\n        />\r\n        {this.renderAnimation()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CallAvatar;\r\n"]}
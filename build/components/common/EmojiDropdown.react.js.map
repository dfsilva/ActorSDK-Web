{"version":3,"sources":["../../../src/components/common/EmojiDropdown.react.js"],"names":["emojiTabs","emojis","closeTimer","CLOSE_TIMEOUT","EmojiDropdown","getStores","calculateState","getState","props","onKeyDown","event","keyCode","ESC","preventDefault","handleClose","close","onSelect","emoji","onDocumentClick","stopPropagation","target","className","includes","emojiDropdown","refs","emojiRect","getBoundingClientRect","coords","x","pageX","clientX","y","pageY","clientY","changeDropdownTitle","title","setState","dropdownTitle","handleEmojiTabMouseEnter","click","handleEmojiOpenerMouseEnter","handleEmojiMouseEnter","localStorage","setItem","open","handleEmojiMouseLeave","setTimeout","clearTimeout","emojiCategories","category","index","currentCategoryEmojis","change_replace_mode","categoryIcon","replace_colons","icon","push","__html","data","emojiChar","convertedChar","replace_unified","colons_mode","emojiColon","handleEmojisTabMouseEnter","bind","handleStickerTabMouseEnter","componentWillUpdate","nextProps","nextState","isOpen","addEventListener","document","removeEventListener","isStickersOpen","renderStickers","stickers","state","onStickerSelect","length","map","sticker","render","isEmojiOpenedBefore","getItem","emojiDropdownClassName","emojiOpenerClassName","emojiTabClassName","stickerTabClassName","emojisClassName","stickersClassName","propTypes","func","isRequired","create"],"mappings":"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","file":"EmojiDropdown.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { forEach } from 'lodash';\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { findDOMNode } from 'react-dom';\r\nimport { Container } from 'flux/utils';\r\nimport classnames from 'classnames';\r\nimport { KeyCodes } from '../../constants/ActorAppConstants';\r\nimport { emoji, getEmojiCategories } from '../../utils/EmojiUtils';\r\nimport isInside from '../../utils/isInside';\r\nimport EmojiActionCreators from '../../actions/EmojiActionCreators'\r\n\r\nimport EmojiStore from '../../stores/EmojiStore'\r\n\r\nimport { Element, Link } from 'react-scroll';\r\nimport Sticker from '../emoji_stickers/Sticker.react';\r\n\r\nlet emojiTabs = [];\r\nlet emojis = [];\r\nlet closeTimer;\r\nconst CLOSE_TIMEOUT = 550;\r\n\r\nclass EmojiDropdown extends Component {\r\n  static propTypes = {\r\n    onSelect: PropTypes.func.isRequired,\r\n    onStickerSelect: PropTypes.func.isRequired\r\n  };\r\n\r\n  static getStores() {\r\n    return [EmojiStore];\r\n  }\r\n\r\n  static calculateState() {\r\n    return EmojiStore.getState();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const emojiCategories = getEmojiCategories();\r\n\r\n    forEach(emojiCategories, (category, index) => {\r\n      let currentCategoryEmojis = [];\r\n\r\n      emoji.change_replace_mode('css');\r\n      const categoryIcon = emoji.replace_colons(category.icon);\r\n\r\n      emojiTabs.push(\r\n        <Link to={category.title}\r\n              spy\r\n              offset={30}\r\n              duration={300}\r\n              key={index}\r\n              onSetActive={() => this.changeDropdownTitle(category.title)}\r\n              containerId=\"emojiContainer\"\r\n              onMouseEnter={this.handleEmojiTabMouseEnter}\r\n              className=\"emojis__header__tabs__tab\"\r\n              activeClass=\"emojis__header__tabs__tab--active\">\r\n          <span dangerouslySetInnerHTML={{ __html: categoryIcon }}/>\r\n        </Link>\r\n      );\r\n\r\n      forEach(category.data, (emojiChar, index) => {\r\n        emoji.change_replace_mode('css');\r\n        const convertedChar = emoji.replace_unified(emojiChar);\r\n        emoji.colons_mode = true;\r\n        const emojiColon = emoji.replace_unified(emojiChar);\r\n        emoji.colons_mode = false;\r\n\r\n        currentCategoryEmojis.push(\r\n          <a onClick={() => this.onSelect(emojiColon)} key={index} dangerouslySetInnerHTML={{ __html: convertedChar }}/>\r\n        );\r\n      });\r\n\r\n      emojis.push(\r\n        <Element name={category.title} key={index}>\r\n          <p>{category.title}</p>\r\n          {currentCategoryEmojis}\r\n        </Element>\r\n      );\r\n    });\r\n\r\n    this.handleEmojisTabMouseEnter = this.handleEmojisTabMouseEnter.bind(this);\r\n    this.handleStickerTabMouseEnter = this.handleStickerTabMouseEnter.bind(this);\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    const { isOpen } = nextState;\r\n    const emojiDropdown = findDOMNode(this.refs.emojiDropdown);\r\n\r\n    if (isOpen) {\r\n      emojiDropdown.addEventListener('mouseenter', this.handleEmojiMouseEnter, false);\r\n      emojiDropdown.addEventListener('mouseleave', this.handleEmojiMouseLeave, false);\r\n      document.addEventListener('click', this.onDocumentClick, false);\r\n      document.addEventListener('keydown', this.onKeyDown, false);\r\n    } else {\r\n      emojiDropdown.removeEventListener('mouseenter', this.handleEmojiMouseEnter, false);\r\n      emojiDropdown.removeEventListener('mouseleave', this.handleEmojiMouseLeave, false);\r\n      document.removeEventListener('click', this.onDocumentClick, false);\r\n      document.removeEventListener('keydown', this.onKeyDown, false);\r\n    }\r\n  }\r\n\r\n  onKeyDown = () => {\r\n    if (event.keyCode === KeyCodes.ESC) {\r\n      event.preventDefault();\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  handleClose = () => EmojiActionCreators.close();\r\n\r\n  onSelect = (emoji) => this.props.onSelect(emoji);\r\n\r\n  onDocumentClick = (event) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    if (!event.target.className.includes('emojis__header__tabs__tab')) {\r\n      const emojiDropdown = findDOMNode(this.refs.emojiDropdown);\r\n      const emojiRect = emojiDropdown.getBoundingClientRect();\r\n      const coords = {\r\n        x: event.pageX || event.clientX,\r\n        y: event.pageY || event.clientY\r\n      };\r\n\r\n      if (!isInside(coords, emojiRect)) {\r\n        this.handleClose();\r\n      }\r\n    }\r\n  };\r\n\r\n  changeDropdownTitle = (title) => this.setState({ dropdownTitle: title });\r\n\r\n  handleEmojiTabMouseEnter = (event) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.target.click();\r\n  };\r\n\r\n  handleEmojiOpenerMouseEnter = () => {\r\n    this.handleEmojiMouseEnter();\r\n    localStorage.setItem('isEmojiOpenedBefore', true);\r\n    EmojiActionCreators.open();\r\n  };\r\n\r\n  handleEmojiMouseLeave = () => {\r\n    closeTimer = setTimeout(this.handleClose, CLOSE_TIMEOUT)\r\n  };\r\n\r\n  handleEmojiMouseEnter = () => {\r\n    clearTimeout(closeTimer);\r\n  };\r\n\r\n  handleEmojisTabMouseEnter() {\r\n    this.setState({ isStickersOpen: false });\r\n  }\r\n  handleStickerTabMouseEnter() {\r\n    this.setState({ isStickersOpen: true });\r\n  }\r\n\r\n  renderStickers() {\r\n    const { stickers } = this.state;\r\n    const { onStickerSelect } = this.props;\r\n    if (stickers.length === 0) return null;\r\n\r\n    return stickers.map((sticker, index) => (\r\n      <Sticker\r\n        sticker={sticker}\r\n        onClick={onStickerSelect}\r\n        key={index}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    const { isOpen, dropdownTitle, isStickersOpen } = this.state;\r\n    const isEmojiOpenedBefore = (localStorage.getItem('isEmojiOpenedBefore') === 'true') || false;\r\n\r\n    const emojiDropdownClassName = classnames('emoji-dropdown', {\r\n      'emoji-dropdown--opened': isOpen\r\n    });\r\n    const emojiOpenerClassName = classnames('emoji-opener material-icons', {\r\n      'emoji-opener--active': isOpen,\r\n      'emoji-opener--with-dot': !isEmojiOpenedBefore\r\n    });\r\n\r\n    const emojiTabClassName = classnames('emoji-dropdown__footer__tab', {\r\n      'emoji-dropdown__footer__tab--active': !isStickersOpen\r\n    });\r\n    const stickerTabClassName = classnames('emoji-dropdown__footer__tab', {\r\n      'emoji-dropdown__footer__tab--active': isStickersOpen\r\n    });\r\n\r\n    const emojisClassName = classnames('emojis', {\r\n      'hide': isStickersOpen\r\n    });\r\n    const stickersClassName = classnames('stickers', {\r\n      'hide': !isStickersOpen\r\n    });\r\n\r\n    return (\r\n      <div className={emojiDropdownClassName} onMouseEnter={this.handleEmojiOpenerMouseEnter} onMouseLeave={this.handleEmojiMouseLeave}>\r\n        <i className={emojiOpenerClassName}>insert_emoticon</i>\r\n\r\n\r\n        <div className=\"emoji-dropdown__wrapper\" ref=\"emojiDropdown\">\r\n          <div className=\"emoji-dropdown__body\">\r\n\r\n            <div className={emojisClassName}>\r\n              <header className=\"emojis__header\">\r\n                <p className=\"emojis__header__title\">{dropdownTitle || 'Emoji'}</p>\r\n\r\n                <div className=\"emojis__header__tabs pull-right\">\r\n                  {emojiTabs}\r\n                </div>\r\n              </header>\r\n              <div className=\"emojis__body\" id=\"emojiContainer\">\r\n                {emojis}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={stickersClassName}>\r\n              {this.renderStickers()}\r\n            </div>\r\n          </div>\r\n\r\n          <footer className=\"emoji-dropdown__footer\">\r\n            <div className={emojiTabClassName}\r\n                 onClick={this.handleEmojisTabMouseEnter}>\r\n              Emojis\r\n            </div>\r\n            <div className={stickerTabClassName}\r\n                 onClick={this.handleStickerTabMouseEnter}>\r\n              Stickers\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container.create(EmojiDropdown);\r\n"]}
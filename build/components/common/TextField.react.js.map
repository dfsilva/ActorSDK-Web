{"version":3,"sources":["../../../src/components/common/TextField.react.js"],"names":["TextField","props","focus","input","inputRef","refs","inputElement","setImmediate","handleChange","event","onChange","handleFocus","onFocus","setState","isFocused","handleBlur","onBlur","state","inputId","Math","random","toString","substr","render","className","floatingLabel","type","value","disabled","errorText","inputClassName","length","inputProps","id","ref","propTypes","string","node","bool","func"],"mappings":";;;;AAIA;;;;AACA;;AAEA;;;;;;;;;;+eAPA;;;;IASMA,S;;;AAeJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAAA,UA+CnBC,KA/CmB,GA+CX,YAAM;AACZ,UAAMC,QAAQ,MAAKF,KAAL,CAAWG,QAAX,IAAuB,MAAKC,IAAL,CAAUC,YAA/C;;AAEE,UAAI,CAACH,KAAL,EAAY;AACZ;AACD;;AAEDI,mBAAa,YAAM;AACjB,mCAAYJ,KAAZ,EAAmBD,KAAnB;AACD,OAFD;AAID,KA1DkB;;AAAA,UA4DnBM,YA5DmB,GA4DJ,UAACC,KAAD,EAAW;AAAA,UAChBC,QADgB,GACH,MAAKT,KADF,CAChBS,QADgB;;AAExBA,kBAAYA,SAASD,KAAT,CAAZ;AACD,KA/DkB;;AAAA,UAiEnBE,WAjEmB,GAiEL,UAACF,KAAD,EAAW;AAAA,UACfG,OADe,GACH,MAAKX,KADF,CACfW,OADe;;AAEvB,YAAKC,QAAL,CAAc,EAAEC,WAAW,IAAb,EAAd;AACAF,iBAAWA,QAAQH,KAAR,CAAX;AACD,KArEkB;;AAAA,UAuEnBM,UAvEmB,GAuEN,UAACN,KAAD,EAAW;AAAA,UACdO,MADc,GACH,MAAKf,KADF,CACde,MADc;;AAEtB,YAAKH,QAAL,CAAc,EAAEC,WAAW,KAAb,EAAd;AACAE,gBAAUA,OAAOP,KAAP,CAAV;AACD,KA3EkB;;AAGjB,UAAKQ,KAAL,GAAa;AACXH,iBAAW,KADA;AAEXI,eAAS,WAAWC,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC;AAFT,KAAb;AAHiB;AAOlB;;sBAEDC,M,qBAAS;AAAA;;AAAA,iBAC0E,KAAKtB,KAD/E;AAAA,QACCuB,SADD,UACCA,SADD;AAAA,QACYC,aADZ,UACYA,aADZ;AAAA,QAC2BC,IAD3B,UAC2BA,IAD3B;AAAA,QACiCC,KADjC,UACiCA,KADjC;AAAA,QACwCvB,QADxC,UACwCA,QADxC;AAAA,QACkDwB,QADlD,UACkDA,QADlD;AAAA,QAC4DC,SAD5D,UAC4DA,SAD5D;AAAA,iBAEwB,KAAKZ,KAF7B;AAAA,QAECH,SAFD,UAECA,SAFD;AAAA,QAEYI,OAFZ,UAEYA,OAFZ;;;AAIP,QAAMY,iBAAiB,0BAAW,uBAAX,EAAoCN,SAApC,EAA+C;AACpE,gCAA0BV,SAD0C;AAEpE,iCAA2Ba,SAASA,MAAMI,MAAN,GAAe,CAFiB;AAGpE,mCAA6BH,QAHuC;AAIpE,qCAA+BC;AAJqC,KAA/C,CAAvB;;AAOA,QAAMG,aAAa;AACjBN,YAAMA,QAAQ,MADG;AAEjBO,UAAIf,OAFa;AAGjBR,gBAAU,KAAKF,YAHE;AAIjBI,eAAS,KAAKD,WAJG;AAKjBK,cAAQ,KAAKD,UALI;AAMjBa,wBANiB;AAOjBM,WAAK9B,WAAWA,QAAX,GAAuB;AAAA,eAAS,OAAKE,YAAL,GAAoBH,KAA7B;AAAA;AAPX,KAAnB;;AAUA,WACE;AAAA;AAAA,QAAK,WAAW2B,cAAhB;AAEIL,sBACI;AAAA;AAAA,UAAO,SAASP,OAAhB,EAAyB,aAAa,KAAKhB,KAA3C;AAAmDuB;AAAnD,OADJ,GAEI,IAJR;AAME,6CAAWO,UAAX,CANF;AAQIH,kBACI;AAAA;AAAA,UAAM,WAAU,OAAhB;AAAyBA;AAAzB,OADJ,GAEI;AAVR,KADF;AAeD,G;;;;;AA5DG7B,S,CAEGmC,S,GAAY;AACjBX,aAAW,iBAAUY,MADJ;AAEjBX,iBAAe,iBAAUY,IAFR;AAGjBX,QAAM,iBAAUU,MAHC;AAIjBT,SAAO,iBAAUS,MAJA;AAKjBR,YAAU,iBAAUU,IALH;AAMjBT,aAAW,iBAAUO,MANJ;AAOjBhC,YAAU,iBAAUmC,IAPH;AAQjB7B,YAAU,iBAAU6B,IARH;AASjB3B,WAAS,iBAAU2B,IATF;AAUjBvB,UAAQ,iBAAUuB;AAVD,C;kBA2FNvC,S","file":"TextField.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport classnames from 'classnames';\n\nclass TextField extends Component {\n\n  static propTypes = {\n    className: PropTypes.string,\n    floatingLabel: PropTypes.node,\n    type: PropTypes.string,\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    errorText: PropTypes.string,\n    inputRef: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFocused: false,\n      inputId: 'input-' + Math.random().toString(36).substr(2, 5)\n    };\n  }\n\n  render() {\n    const { className, floatingLabel, type, value, inputRef, disabled, errorText } = this.props;\n    const { isFocused, inputId } = this.state;\n\n    const inputClassName = classnames('input input__material', className, {\n      'input__material--focus': isFocused,\n      'input__material--filled': value && value.length > 0,\n      'input__material--disabled': disabled,\n      'input__material--with-error': errorText\n    });\n\n    const inputProps = {\n      type: type || 'text',\n      id: inputId,\n      onChange: this.handleChange,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      disabled,\n      ref: inputRef ? inputRef : (input => this.inputElement = input)\n    };\n\n    return (\n      <div className={inputClassName}>\n        {\n          floatingLabel\n            ? <label htmlFor={inputId} onMouseDown={this.focus}>{floatingLabel}</label>\n            : null\n        }\n        <input {...inputProps}/>\n        {\n          errorText\n            ? <span className=\"error\">{errorText}</span>\n            : null\n        }\n      </div>\n    );\n  }\n\n  focus = () => {\n    const input = this.props.inputRef || this.refs.inputElement\n\n      if (!input) {\n      return;\n    }\n\n    setImmediate(() => {\n      findDOMNode(input).focus();\n    });\n\n  };\n\n  handleChange = (event) => {\n    const { onChange } = this.props;\n    onChange && onChange(event);\n  };\n\n  handleFocus = (event) => {\n    const { onFocus } = this.props;\n    this.setState({ isFocused: true });\n    onFocus && onFocus(event);\n  };\n\n  handleBlur = (event) => {\n    const { onBlur } = this.props;\n    this.setState({ isFocused: false });\n    onBlur && onBlur(event);\n  };\n}\n\nexport default TextField;\n"]}
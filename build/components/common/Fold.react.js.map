{"version":3,"sources":["../../../src/components/common/Fold.react.js"],"names":["Fold","props","onClick","updatedState","state","isOpen","onStateChange","setState","bind","render","icon","iconClassName","title","iconElement","titleIconClassName","className","foldIcon","children","propTypes","oneOfType","arrayOf","node","string","element","isRequired","func"],"mappings":";;;;AAIA;;;;AACA;;;;;;;;;;+eALA;;;;IAOMA,I;;;AAcJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAAA,UAUnBC,OAVmB,GAUT,YAAM;AACd,UAAMC,eAAe,CAAC,MAAKC,KAAL,CAAWC,MAAjC;AACA,UAAG,MAAKJ,KAAL,CAAWK,aAAd,EAA6B;AACzB,cAAKL,KAAL,CAAWK,aAAX,CAAyBH,YAAzB;AACH;AACD,YAAKI,QAAL,CAAc,EAAEF,QAAQF,YAAV,EAAd;AACD,KAhBkB;;AAGjB,UAAKD,OAAL,GAAe,MAAKA,OAAL,CAAaM,IAAb,OAAf;;AAEA,UAAKJ,KAAL,GAAa;AACXC,cAAQ;AADG,KAAb;AALiB;AAQlB;;iBAUDI,M,qBAAS;AAAA,iBAC6C,KAAKR,KADlD;AAAA,QACCS,IADD,UACCA,IADD;AAAA,QACOC,aADP,UACOA,aADP;AAAA,QACsBC,KADtB,UACsBA,KADtB;AAAA,QAC6BC,WAD7B,UAC6BA,WAD7B;;AAEP,QAAMC,qBAAqB,0BAAW,qBAAX,EAAkCH,aAAlC,CAA3B;AACA,QAAMI,YAAY,0BAAW;AAC3B,cAAQ,IADmB;AAE3B,oBAAc,KAAKX,KAAL,CAAWC;AAFE,KAAX,CAAlB;;AAKA,QAAIW,iBAAJ;AACA,QAAIN,IAAJ,EAAU;AACRM,iBAAW;AAAA;AAAA,UAAG,WAAWF,kBAAd;AAAmCJ;AAAnC,OAAX;AACD;AACD,QAAIG,WAAJ,EAAiB;AACfG,iBAAWH,WAAX;AACD;;AAED,WACE;AAAA;AAAA,QAAK,WAAWE,SAAhB;AACE;AAAA;AAAA,UAAK,WAAU,aAAf,EAA6B,SAAS,KAAKb,OAA3C;AACGc,gBADH;AAEGJ,aAFH;AAGE;AAAA;AAAA,YAAG,WAAU,2CAAb;AAAA;AAAA;AAHF,OADF;AAME;AAAA;AAAA,UAAK,WAAU,eAAf;AACG,aAAKX,KAAL,CAAWgB;AADd;AANF,KADF;AAYD,G;;;;;AA5DGjB,I,CAEGkB,S,GAAY;AACjBD,YAAU,iBAAUE,SAAV,CAAoB,CAC5B,iBAAUC,OAAV,CAAkB,iBAAUC,IAA5B,CAD4B,EAE5B,iBAAUA,IAFkB,CAApB,CADO;AAKjBX,QAAM,iBAAUY,MALC;AAMjBX,iBAAe,iBAAUW,MANR;AAOjBT,eAAa,iBAAUU,OAPN;AAQjBX,SAAO,iBAAUS,IAAV,CAAeG,UARL;AASjBlB,iBAAe,iBAAUmB;AATR,C;kBA6DNzB,I","file":"Fold.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport React, { Component, PropTypes } from 'react';\r\nimport classnames from 'classnames';\r\n\r\nclass Fold extends Component {\r\n\r\n  static propTypes = {\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node\r\n    ]),\r\n    icon: PropTypes.string,\r\n    iconClassName: PropTypes.string,\r\n    iconElement: PropTypes.element,\r\n    title: PropTypes.node.isRequired,\r\n    onStateChange: PropTypes.func\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onClick = this.onClick.bind(this);\r\n\r\n    this.state = {\r\n      isOpen: false\r\n    }\r\n  }\r\n\r\n  onClick = () => {\r\n    const updatedState = !this.state.isOpen;\r\n    if(this.props.onStateChange) {\r\n        this.props.onStateChange(updatedState);\r\n    }\r\n    this.setState({ isOpen: updatedState });\r\n  }\r\n\r\n  render() {\r\n    const { icon, iconClassName, title, iconElement } = this.props;\r\n    const titleIconClassName = classnames('material-icons icon', iconClassName);\r\n    const className = classnames({\r\n      'fold': true,\r\n      'fold--open': this.state.isOpen\r\n    });\r\n\r\n    let foldIcon;\r\n    if (icon) {\r\n      foldIcon = <i className={titleIconClassName}>{icon}</i>;\r\n    }\r\n    if (iconElement) {\r\n      foldIcon = iconElement;\r\n    }\r\n\r\n    return (\r\n      <div className={className}>\r\n        <div className=\"fold__title\" onClick={this.onClick}>\r\n          {foldIcon}\r\n          {title}\r\n          <i className=\"fold__indicator material-icons pull-right\">arrow_drop_down</i>\r\n        </div>\r\n        <div className=\"fold__content\">\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fold;\r\n"]}
{"version":3,"sources":["../../../../src/components/common/Stateful/Root.react.js"],"names":["Root","props","render","currentState","className","children","equalsState","state","type","PENDING","PROCESSING","SUCCESS","FAILURE","currentStateChild","child","propTypes","string","number","isRequired","array"],"mappings":";;;;AAIA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eAXA;;;;IAaqBA,I;;;AACnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4CACjB,sBAAMA,KAAN,CADiB;AAElB;;iBAQDC,M,qBAAS;AAAA,iBACuC,KAAKD,KAD5C;AAAA,QACCE,YADD,UACCA,YADD;AAAA,QACeC,SADf,UACeA,SADf;AAAA,QAC0BC,QAD1B,UAC0BA,QAD1B;;;AAGP,QAAMC,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAQC,IAAR,EAAiB;AACnC,aAAQD,UAAU,qCAAkBE,OAA5B,IAAuCD,0BAAxC,IACJD,UAAU,qCAAkBG,UAA5B,IAA0CF,6BADtC,IAEJD,UAAU,qCAAkBI,OAA5B,IAAuCH,0BAFnC,IAGJD,UAAU,qCAAkBK,OAA5B,IAAuCJ,0BAH1C;AAID,KALD;;AAOA,QAAMK,oBAAoB,kBAAKR,QAAL,EAAe,UAACS,KAAD,EAAW;AAClD,UAAIR,YAAYH,YAAZ,EAA0BW,MAAMN,IAAhC,CAAJ,EAA2C,OAAOM,KAAP;AAC5C,KAFyB,CAA1B;;AAIA,WACE;AAAA;AAAA,QAAK,WAAWV,SAAhB;AAA4BS;AAA5B,KADF;AAGD,G;;;;;AA5BkBb,I,CAKZe,S,GAAY;AACjBX,aAAW,iBAAUY,MADJ;AAEjBb,gBAAc,iBAAUc,MAAV,CAAiBC,UAFd;AAGjBb,YAAU,iBAAUc;AAHH,C;kBALAnB,I","file":"Root.react.js","sourcesContent":["/*\r\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { find } from 'lodash';\r\nimport React, { Component, PropTypes } from 'react';\r\nimport { AsyncActionStates } from '../../../constants/ActorAppConstants';\r\n\r\nimport Pending from './Pending.react';\r\nimport Processing from './Processing.react';\r\nimport Success from './Success.react';\r\nimport Failure from './Failure.react';\r\n\r\nexport default class Root extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    currentState: PropTypes.number.isRequired,\r\n    children: PropTypes.array\r\n  };\r\n\r\n  render() {\r\n    const { currentState, className, children } = this.props;\r\n\r\n    const equalsState = (state, type) => {\r\n      return (state === AsyncActionStates.PENDING && type === Pending) ||\r\n        (state === AsyncActionStates.PROCESSING && type === Processing) ||\r\n        (state === AsyncActionStates.SUCCESS && type === Success) ||\r\n        (state === AsyncActionStates.FAILURE && type === Failure)\r\n    };\r\n\r\n    const currentStateChild = find(children, (child) => {\r\n      if (equalsState(currentState, child.type)) return child;\r\n    });\r\n\r\n    return (\r\n      <div className={className}>{currentStateChild}</div>\r\n    )\r\n  }\r\n}\r\n"]}
{"version":3,"sources":["../../src/stores/CreateGroupStore.js"],"names":["CreateGroupStore","getInitialState","step","NAME_INPUT","name","selectedUserIds","Set","reduce","state","action","type","GROUP_CREATE_SET_NAME","CONTACTS_SELECTION","GROUP_CREATE_SET_MEMBERS","GROUP_CREATE","CREATION_STARTED","GROUP_CREATE_SUCCESS","GROUP_CREATE_ERROR","console","error","GROUP_CREATE_MODAL_HIDE","getCurrentStep","getState","getGroupName","getSelectedUserIds"],"mappings":";;;;;;AAIA;;;;AAEA;;AACA;;;;AACA;;;;;;;;+eARA;;;;IAUMA,gB;;;;;;;;;6BACJC,e,8BAAkB;AAChB,WAAO;AACLC,YAAM,oCAAiBC,UADlB;AAELC,YAAM,IAFD;AAGLC,uBAAiB,IAAI,oBAAUC,GAAd;AAHZ,KAAP;AAKD,G;;6BAEDC,M,mBAAOC,K,EAAOC,M,EAAQ;AACpB,YAAQA,OAAOC,IAAf;AACE,WAAK,+BAAYC,qBAAjB;AACE,4BACKH,KADL;AAEEN,gBAAM,oCAAiBU,kBAFzB;AAGER,gBAAMK,OAAOL;AAHf;;AAMF,WAAK,+BAAYS,wBAAjB;AACE,4BACKL,KADL;AAEEH,2BAAiBI,OAAOJ;AAF1B;;AAKF,WAAK,+BAAYS,YAAjB;AACE,4BACKN,KADL;AAEEN,gBAAM,oCAAiBa;;AAG3B;AALE,WAMF,KAAK,+BAAYC,oBAAjB;AACE,eAAO,KAAKf,eAAL,EAAP;;AAEF,WAAK,+BAAYgB,kBAAjB;AACEC,gBAAQC,KAAR,CAAc,wBAAd,EAAwCV,OAAOU,KAA/C;AACA,eAAOX,KAAP;;AAEF,WAAK,+BAAYY,uBAAjB;AACE,eAAO,KAAKnB,eAAL,EAAP;;AAGF;AACE,eAAOO,KAAP;AAjCJ;AAmCD,G;;6BAGCa,c,6BAAiB;AACf,WAAO,KAAKC,QAAL,GAAgBpB,IAAvB;AACD,G;;6BAEDqB,Y,2BAAe;AACb,WAAO,KAAKD,QAAL,GAAgBlB,IAAvB;AACD,G;;6BAEDoB,kB,iCAAqB;AACnB,WAAO,KAAKF,QAAL,GAAgBjB,eAAvB;AACD,G;;;;;kBAGU,IAAIL,gBAAJ,8B","file":"CreateGroupStore.js","sourcesContent":["/*\r\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport Immutable from 'immutable';\r\n\r\nimport { ReduceStore } from 'flux/utils';\r\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\r\nimport { ActionTypes, CreateGroupSteps } from '../constants/ActorAppConstants';\r\n\r\nclass CreateGroupStore extends ReduceStore {\r\n  getInitialState() {\r\n    return {\r\n      step: CreateGroupSteps.NAME_INPUT,\r\n      name: null,\r\n      selectedUserIds: new Immutable.Set()\r\n    };\r\n  }\r\n\r\n  reduce(state, action) {\r\n    switch (action.type) {\r\n      case ActionTypes.GROUP_CREATE_SET_NAME:\r\n        return {\r\n          ...state,\r\n          step: CreateGroupSteps.CONTACTS_SELECTION,\r\n          name: action.name\r\n        }\r\n\r\n      case ActionTypes.GROUP_CREATE_SET_MEMBERS:\r\n        return {\r\n          ...state,\r\n          selectedUserIds: action.selectedUserIds\r\n        }\r\n\r\n      case ActionTypes.GROUP_CREATE:\r\n        return {\r\n          ...state,\r\n          step: CreateGroupSteps.CREATION_STARTED\r\n        }\r\n\r\n      // TODO: Show create group error success messages in modal\r\n      case ActionTypes.GROUP_CREATE_SUCCESS:\r\n        return this.getInitialState();\r\n\r\n      case ActionTypes.GROUP_CREATE_ERROR:\r\n        console.error('Failed to create group', action.error);\r\n        return state;\r\n\r\n      case ActionTypes.GROUP_CREATE_MODAL_HIDE:\r\n        return this.getInitialState();\r\n\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n\r\n    getCurrentStep() {\r\n      return this.getState().step;\r\n    }\r\n\r\n    getGroupName() {\r\n      return this.getState().name;\r\n    }\r\n\r\n    getSelectedUserIds() {\r\n      return this.getState().selectedUserIds;\r\n    }\r\n}\r\n\r\nexport default new CreateGroupStore(Dispatcher);\r\n"]}
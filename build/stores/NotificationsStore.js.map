{"version":3,"sources":["../../src/stores/NotificationsStore.js"],"names":["NotificationsStore","isNotificationsEnabled","peer","__onDispatch","action","type","NOTIFICATION_CHANGE","__emitChange"],"mappings":";;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;+eAPA;;;;IASMA,kB;;;;;;;;;+BAEJC,sB,mCAAuBC,I,EAAM;AAC3B,WAAO,sBAAYD,sBAAZ,CAAmCC,IAAnC,CAAP;AACD,G;;+BAEDC,Y,yBAAaC,M,EAAQ;AACnB,YAAOA,OAAOC,IAAd;AACE,WAAK,+BAAYC,mBAAjB;AACE,aAAKC,YAAL;AACA;AACF;AAJF;AAMD,G;;;;;kBAGY,IAAIP,kBAAJ,8B","file":"NotificationsStore.js","sourcesContent":["/*\r\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { Store } from 'flux/utils';\r\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\r\nimport { ActionTypes } from '../constants/ActorAppConstants';\r\nimport ActorClient from '../utils/ActorClient';\r\n\r\nclass NotificationsStore extends Store {\r\n\r\n  isNotificationsEnabled(peer) {\r\n    return ActorClient.isNotificationsEnabled(peer);\r\n  }\r\n\r\n  __onDispatch(action) {\r\n    switch(action.type) {\r\n      case ActionTypes.NOTIFICATION_CHANGE:\r\n        this.__emitChange();\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n}\r\n\r\nexport default new NotificationsStore(Dispatcher);\r\n"]}
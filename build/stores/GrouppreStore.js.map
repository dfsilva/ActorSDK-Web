{"version":3,"sources":["../../src/stores/GrouppreStore.js"],"names":["GrouppreStore","getInitialState","groups","parentId","isLoading","isLoaded","reduce","state","action","console","log","type","GROUPPRE_LOAD_SUCCESS","groupspre","getIsLoading","getState","getIsLoaded","getGroups","getParentId"],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;;;;;;;+eANA;;;;IAQMA,a;;;;;;;;;4BAEFC,e,8BAAkB;AACd,eAAO;AACHC,oBAAQ,EADL;AAEHC,sBAAU,CAFP;AAGHC,uBAAW,IAHR;AAIHC,sBAAU;AAJP,SAAP;AAMH,K;;4BAEDC,M,mBAAOC,K,EAAOC,M,EAAQ;AAClBC,gBAAQC,GAAR,CAAY,oBAAkBF,OAAOG,IAArC;AACA,gBAAQH,OAAOG,IAAf;AACI,iBAAK,+BAAYC,qBAAjB;AACG,oCACQL,KADR;AAEKH,+BAAW,KAFhB;AAGKC,8BAAU,IAHf;AAIKH,4BAAQM,OAAOK;AAJpB;AAMH;AACI,uBAAON,KAAP;AATR;AAWH,K;;4BAEDO,Y,2BAAe;AACX,eAAO,KAAKC,QAAL,GAAgBX,SAAvB;AACH,K;;4BAEDY,W,0BAAa;AACT,eAAO,KAAKD,QAAL,GAAgBV,QAAvB;AACH,K;;4BAEDY,S,wBAAY;AACR,eAAO,KAAKF,QAAL,GAAgBb,MAAvB;AACH,K;;4BAEDgB,W,0BAAa;AACT,eAAO,KAAKH,QAAL,GAAgBZ,QAAvB;AACH,K;;;;;kBAGU,IAAIH,aAAJ,8B","file":"GrouppreStore.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport {ReduceStore} from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, AsyncActionStates } from '../constants/ActorAppConstants';\n\nclass GrouppreStore extends ReduceStore {\n\n    getInitialState() {\n        return {\n            groups: [],\n            parentId: 0,\n            isLoading: true,\n            isLoaded: false\n        };\n    }\n\n    reduce(state, action) {\n        console.log(\"reduce called: \"+action.type)\n        switch (action.type) {\n            case ActionTypes.GROUPPRE_LOAD_SUCCESS:\n               return {\n                    ...state,\n                    isLoading: false,\n                    isLoaded: true,\n                    groups: action.groupspre\n                }\n            default:\n                return state;\n        }\n    }\n\n    getIsLoading() {\n        return this.getState().isLoading;\n    }\n\n    getIsLoaded(){\n        return this.getState().isLoaded;\n    }\n\n    getGroups() {\n        return this.getState().groups;\n    }\n\n    getParentId(){\n        return this.getState().parentId;\n    }\n}\n\nexport default new GrouppreStore(Dispatcher);\n"]}
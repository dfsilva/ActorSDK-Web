{"version":3,"sources":["../../src/stores/AttachmentsStore.js"],"names":["AttachmentsStore","getInitialState","attachments","List","selectedIndex","reduce","state","action","type","ATTACHMENT_MODAL_SHOW","ATTACHMENT_MODAL_HIDE","ATTACHMENT_SELECT","index","ATTACHMENT_CHANGE","changedAttachment","get","set","sendAsPicture","ATTACHMENT_DELETE","ATTACHMENT_SEND","delete","ATTACHMENT_SEND_ALL","getAllAttachments","getState","toArray","getAttachment","getSelectedIndex"],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;+eAPA;;;;IASMA,gB;;;;;;;;;6BACJC,e,8BAAkB;AAChB,WAAO;AACLC,mBAAa,IAAI,oBAAUC,IAAd,EADR;AAELC,qBAAe;AAFV,KAAP;AAID,G;;6BAEDC,M,mBAAOC,K,EAAMC,M,EAAQ;AACnB,YAAQA,OAAOC,IAAf;AACE,WAAK,+BAAYC,qBAAjB;AACE,4BACKH,KADL;AAEEJ,uBAAa,IAAI,oBAAUC,IAAd,CAAmBI,OAAOL,WAA1B;AAFf;AAIF,WAAK,+BAAYQ,qBAAjB;AACE,eAAO,KAAKT,eAAL,EAAP;;AAEF,WAAK,+BAAYU,iBAAjB;AACE,4BACKL,KADL;AAEEF,yBAAeG,OAAOK;AAFxB;;AAKF,WAAK,+BAAYC,iBAAjB;AACE,YAAMC,oBAAoBR,MAAMJ,WAAN,CAAkBa,GAAlB,CAAsBT,MAAMF,aAA5B,CAA1B;;AAEA,4BACKE,KADL;AAEEJ,uBAAaI,MAAMJ,WAAN,CAAkBc,GAAlB,CAAsBV,MAAMF,aAA5B,eAAgDU,iBAAhD,IAAmEG,eAAeV,OAAOU,aAAzF;AAFf;;AAKF,WAAK,+BAAYC,iBAAjB;AACA,WAAK,+BAAYC,eAAjB;AACE,eAAO;AACLjB,uBAAaI,MAAMJ,WAAN,CAAkBkB,MAAlB,CAAyBd,MAAMF,aAA/B,CADR;AAELA,yBAAe;AAFV,SAAP;AAIF,WAAK,+BAAYiB,mBAAjB;AACE,eAAO,KAAKpB,eAAL,EAAP;;AAEF;AACE,eAAOK,KAAP;AAjCJ;AAmCD,G;;6BAEDgB,iB,gCAAoB;AAClB,WAAO,KAAKC,QAAL,GAAgBrB,WAAhB,CAA4BsB,OAA5B,EAAP;AACD,G;;6BAEDC,a,4BAA+C;AAAA,QAAjCb,KAAiC,uEAAzB,KAAKc,gBAAL,EAAyB;;AAC7C,WAAO,KAAKH,QAAL,GAAgBrB,WAAhB,CAA4Ba,GAA5B,CAAgCH,KAAhC,CAAP;AACD,G;;6BAEDc,gB,+BAAmB;AACjB,WAAO,KAAKH,QAAL,GAAgBnB,aAAvB;AACD,G;;;;;kBAGY,IAAIJ,gBAAJ,8B","file":"AttachmentsStore.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport Immutable from 'immutable';\n\nclass AttachmentsStore extends ReduceStore {\n  getInitialState() {\n    return {\n      attachments: new Immutable.List(),\n      selectedIndex: 0\n    }\n  }\n\n  reduce(state,action) {\n    switch (action.type) {\n      case ActionTypes.ATTACHMENT_MODAL_SHOW:\n        return {\n          ...state,\n          attachments: new Immutable.List(action.attachments)\n        }\n      case ActionTypes.ATTACHMENT_MODAL_HIDE:\n        return this.getInitialState();\n\n      case ActionTypes.ATTACHMENT_SELECT:\n        return {\n          ...state,\n          selectedIndex: action.index\n        }\n\n      case ActionTypes.ATTACHMENT_CHANGE:\n        const changedAttachment = state.attachments.get(state.selectedIndex);\n\n        return {\n          ...state,\n          attachments: state.attachments.set(state.selectedIndex, { ...changedAttachment, sendAsPicture: action.sendAsPicture })\n        };\n\n      case ActionTypes.ATTACHMENT_DELETE:\n      case ActionTypes.ATTACHMENT_SEND:\n        return {\n          attachments: state.attachments.delete(state.selectedIndex),\n          selectedIndex: 0\n        }\n      case ActionTypes.ATTACHMENT_SEND_ALL:\n        return this.getInitialState();\n\n      default:\n        return state;\n    }\n  }\n\n  getAllAttachments() {\n    return this.getState().attachments.toArray();\n  }\n\n  getAttachment(index = this.getSelectedIndex()) {\n    return this.getState().attachments.get(index);\n  }\n\n  getSelectedIndex() {\n    return this.getState().selectedIndex;\n  }\n}\n\nexport default new AttachmentsStore(Dispatcher);\n"]}
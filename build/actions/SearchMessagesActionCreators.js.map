{"version":3,"sources":["../../src/actions/SearchMessagesActionCreators.js"],"names":["SearchMessagesActionCreators","findText","bind","maxWait","open","SEARCH_MESSAGES_SHOW","toggleAutoFocus","close","SEARCH_MESSAGES_HIDE","setQuery","query","SEARCH_MESSAGES_SET_QUERY","getState","peer","getCurrentPeer","findAllText","request","SEARCH_TEXT","success","SEARCH_TEXT_SUCCESS","failure","SEARCH_TEXT_ERROR"],"mappings":";;;;AAIA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;0JAVA;;;;IAYMA,4B;AACJ,0CAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgB,sBAAS,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAT,EAAmC,GAAnC,EAAwC,EAAEC,SAAS,GAAX,EAAxC,CAAhB;AACD;;yCAEDC,I,mBAAO;AACL,sCAAS,+BAAYC,oBAArB;AACA,oCAAsBC,eAAtB,CAAsC,KAAtC;AACD,G;;yCAEDC,K,oBAAQ;AACN,sCAAS,+BAAYC,oBAArB;AACA,oCAAsBF,eAAtB,CAAsC,IAAtC;AACD,G;;yCAEDG,Q,qBAASC,K,EAAO;AACd,sCAAS,+BAAYC,yBAArB,EAAgD,EAAED,YAAF,EAAhD;AACA,SAAKT,QAAL;AACD,G;;yCAEDA,Q,uBAAW;AAAA,gCACS,8BAAoBW,QAApB,EADT;AAAA,QACDF,KADC,yBACDA,KADC;;AAET,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAED,QAAMG,OAAO,sBAAYC,cAAZ,EAAb;AACA,2CAAc,sBAAYC,WAAZ,CAAwBF,IAAxB,EAA8BH,KAA9B,CAAd,EAAoD;AAClDM,eAAS,+BAAYC,WAD6B;AAElDC,eAAS,+BAAYC,mBAF6B;AAGlDC,eAAS,+BAAYC;AAH6B,KAApD,EAIG,EAAER,UAAF,EAAQH,YAAR,EAJH;AAKD,G;;;;;kBAGY,IAAIV,4BAAJ,E","file":"SearchMessagesActionCreators.js","sourcesContent":["/*\r\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { debounce } from 'lodash';\r\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\r\nimport { ActionTypes } from '../constants/ActorAppConstants';\r\nimport ActorClient from '../utils/ActorClient';\r\nimport DialogStore from '../stores/DialogStore';\r\nimport SearchMessagesStore from '../stores/SearchMessagesStore';\r\nimport ComposeActionCreators from './ComposeActionCreators';\r\n\r\nclass SearchMessagesActionCreators {\r\n  constructor() {\r\n    this.findText = debounce(this.findText.bind(this), 100, { maxWait: 300 });\r\n  }\r\n\r\n  open() {\r\n    dispatch(ActionTypes.SEARCH_MESSAGES_SHOW);\r\n    ComposeActionCreators.toggleAutoFocus(false);\r\n  }\r\n\r\n  close() {\r\n    dispatch(ActionTypes.SEARCH_MESSAGES_HIDE);\r\n    ComposeActionCreators.toggleAutoFocus(true);\r\n  }\r\n\r\n  setQuery(query) {\r\n    dispatch(ActionTypes.SEARCH_MESSAGES_SET_QUERY, { query });\r\n    this.findText();\r\n  }\r\n\r\n  findText() {\r\n    const { query } = SearchMessagesStore.getState();\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    const peer = DialogStore.getCurrentPeer();\r\n    dispatchAsync(ActorClient.findAllText(peer, query), {\r\n      request: ActionTypes.SEARCH_TEXT,\r\n      success: ActionTypes.SEARCH_TEXT_SUCCESS,\r\n      failure: ActionTypes.SEARCH_TEXT_ERROR\r\n    }, { peer, query });\r\n  }\r\n}\r\n\r\nexport default new SearchMessagesActionCreators();\r\n"]}
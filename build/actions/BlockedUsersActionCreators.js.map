{"version":3,"sources":["../../src/actions/BlockedUsersActionCreators.js"],"names":["BlockedUsersActionCreators","setQuery","query","BLOCKED_USERS_SET_QUERY","loadUsers","BLOCKED_USERS_LOAD","loadBlockedUsers","then","users","BLOCKED_USERS_SET","catch","error","BLOCKED_USERS_LOAD_FAILED","blockUser","id","console","debug","e","unblockUser","reload"],"mappings":";;;;AAIA;;AACA;;AACA;;;;;;0JANA;;;;IAQMA,0B;;;;;uCACJC,Q,qBAASC,K,EAAO;AACd,sCAAS,+BAAYC,uBAArB,EAA8C,EAAED,YAAF,EAA9C;AACD,G;;uCAEDE,S,wBAAY;AACV,sCAAS,+BAAYC,kBAArB;AACA,0BAAYC,gBAAZ,GAA+BC,IAA/B,CAAoC,UAACC,KAAD,EAAW;AAC7C,wCAAS,+BAAYC,iBAArB,EAAwC,EAAED,YAAF,EAAxC;AACD,KAFD,EAEGE,KAFH,CAES,UAACC,KAAD,EAAW;AAClB,wCAAS,+BAAYC,yBAArB,EAAgD,EAAED,YAAF,EAAhD;AACD,KAJD;AAKD,G;;uCAEDE,S,sBAAUC,E,EAAI;AACZ,0BAAYD,SAAZ,CAAsBC,EAAtB,EAA0BP,IAA1B,CAA+B,YAAM;AACnCQ,cAAQC,KAAR,CAAc,mBAAmBF,EAAjC;AACD,KAFD,EAEGJ,KAFH,CAES,UAACO,CAAD,EAAO;AACdF,cAAQJ,KAAR,CAAcM,CAAd;AACD,KAJD;AAKD,G;;uCAEDC,W,wBAAYJ,E,EAAoB;AAAA;;AAAA,QAAhBK,MAAgB,uEAAP,KAAO;;AAC9B,0BAAYD,WAAZ,CAAwBJ,EAAxB,EAA4BP,IAA5B,CAAiC,YAAM;AACrC,UAAIY,MAAJ,EAAY;AACV,cAAKf,SAAL;AACD;AACF,KAJD,EAIGM,KAJH,CAIS,UAACO,CAAD,EAAO;AACdF,cAAQJ,KAAR,CAAcM,CAAd;AACD,KAND;AAOD,G;;;;;kBAIY,IAAIjB,0BAAJ,E","file":"BlockedUsersActionCreators.js","sourcesContent":["/*\r\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\r\nimport { ActionTypes } from '../constants/ActorAppConstants';\r\nimport ActorClient from '../utils/ActorClient';\r\n\r\nclass BlockedUsersActionCreators {\r\n  setQuery(query) {\r\n    dispatch(ActionTypes.BLOCKED_USERS_SET_QUERY, { query });\r\n  }\r\n\r\n  loadUsers() {\r\n    dispatch(ActionTypes.BLOCKED_USERS_LOAD);\r\n    ActorClient.loadBlockedUsers().then((users) => {\r\n      dispatch(ActionTypes.BLOCKED_USERS_SET, { users });\r\n    }).catch((error) => {\r\n      dispatch(ActionTypes.BLOCKED_USERS_LOAD_FAILED, { error });\r\n    });\r\n  }\r\n\r\n  blockUser(id) {\r\n    ActorClient.blockUser(id).then(() => {\r\n      console.debug('users blocked ' + id);\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    });\r\n  }\r\n\r\n  unblockUser(id, reload = false) {\r\n    ActorClient.unblockUser(id).then(() => {\r\n      if (reload) {\r\n        this.loadUsers();\r\n      }\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default new BlockedUsersActionCreators();\r\n"]}
{"version":3,"sources":["../../src/actions/AttachmentsActionCreators.js"],"names":["sendAttachment","currentPeer","attachment","isAnimation","sendAsPicture","sendAnimationMessage","file","isImage","sendPhotoMessage","sendFileMessage","show","attachments","normalizedAttachments","map","File","type","includes","ATTACHMENT_MODAL_SHOW","toggleAutoFocus","hide","ATTACHMENT_MODAL_HIDE","selectAttachment","index","ATTACHMENT_SELECT","changeAttachment","ATTACHMENT_CHANGE","deleteAttachment","ATTACHMENT_DELETE","getAllAttachments","length","getCurrentPeer","getAttachment","ATTACHMENT_SEND","sendAll","forEach","ATTACHMENT_SEND_ALL"],"mappings":";;;;AAIA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,SAASA,eAAT,CAAwBC,WAAxB,EAAqCC,UAArC,EAAiD;AAC/C,MAAIA,WAAWC,WAAX,IAA0BD,WAAWE,aAAzC,EAAwD;AACtD,oCAAsBC,oBAAtB,CAA2CJ,WAA3C,EAAwDC,WAAWI,IAAnE;AACD,GAFD,MAEO,IAAIJ,WAAWK,OAAX,IAAsBL,WAAWE,aAArC,EAAoD;AACzD,oCAAsBI,gBAAtB,CAAuCP,WAAvC,EAAoDC,WAAWI,IAA/D;AACD,GAFM,MAEA;AACL,oCAAsBG,eAAtB,CAAsCR,WAAtC,EAAmDC,WAAWI,IAA9D;AACD;AACF,C,CAtBD;;;;kBAwBe;AACbI,MADa,gBACRC,WADQ,EACK;AAChB,QAAMC,wBAAwBD,YAAYE,GAAZ,CAAgB,UAACP,IAAD,EAAU;AACtD,UAAIA,gBAAgBQ,IAAhB,IAAwB,KAA5B,EAAmC;AACjCR,eAAO,0BAAWA,IAAX,CAAP;AACD;;AAED,aAAO;AACLC,iBAASD,KAAKS,IAAL,CAAUC,QAAV,CAAmB,OAAnB,CADJ;AAELb,qBAAaG,KAAKS,IAAL,KAAc,WAFtB;AAGLX,uBAAe,IAHV;AAILE;AAJK,OAAP;AAMD,KAX6B,CAA9B;;AAaA,sCAAS,+BAAYW,qBAArB,EAA4C,EAAEN,aAAaC,qBAAf,EAA5C;AACA,oCAAsBM,eAAtB,CAAsC,KAAtC;AACD,GAjBY;AAmBbC,MAnBa,kBAmBN;AACL,sCAAS,+BAAYC,qBAArB;AACA,oCAAsBF,eAAtB,CAAsC,IAAtC;AACD,GAtBY;AAwBbG,kBAxBa,4BAwBIC,KAxBJ,EAwBW;AACtB,sCAAS,+BAAYC,iBAArB,EAAwC,EAAED,YAAF,EAAxC;AACD,GA1BY;AA4BbE,kBA5Ba,4BA4BIpB,aA5BJ,EA4BmB;AAC9B,sCAAS,+BAAYqB,iBAArB,EAAwC,EAAErB,4BAAF,EAAxC;AACD,GA9BY;AAgCbsB,kBAhCa,8BAgCM;AACjB,sCAAS,+BAAYC,iBAArB;AACA,QAAI,2BAAiBC,iBAAjB,GAAqCC,MAArC,KAAgD,CAApD,EAAuD;AACrD,WAAKV,IAAL;AACD;AACF,GArCY;AAuCbnB,gBAvCa,4BAuCI;AACf,QAAMC,cAAc,sBAAY6B,cAAZ,EAApB;AACA,QAAM5B,aAAa,2BAAiB6B,aAAjB,EAAnB;;AAEA/B,oBAAeC,WAAf,EAA4BC,UAA5B;;AAEA,sCAAS,+BAAY8B,eAArB;;AAEA,QAAI,2BAAiBJ,iBAAjB,GAAqCC,MAArC,KAAgD,CAApD,EAAuD;AACrD,WAAKV,IAAL;AACD;;AAED,oCAAsBD,eAAtB,CAAsC,IAAtC;AACD,GApDY;AAsDbe,SAtDa,mBAsDLtB,WAtDK,EAsDQ;AACnB,QAAMV,cAAc,sBAAY6B,cAAZ,EAApB;;AAEAnB,gBAAYuB,OAAZ,CAAoB,UAAChC,UAAD,EAAgB;AAClCF,sBAAeC,WAAf,EAA4BC,UAA5B;AACD,KAFD;;AAIA,sCAAS,+BAAYiC,mBAArB,EAA0C,EAAExB,wBAAF,EAA1C;AACA,SAAKQ,IAAL;AACA,oCAAsBD,eAAtB,CAAsC,IAAtC;AACD;AAhEY,C","file":"AttachmentsActionCreators.js","sourcesContent":["/*\r\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\r\n */\r\n\r\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\r\nimport { ActionTypes } from '../constants/ActorAppConstants';\r\nimport blobToFile from '../utils/blobToFile';\r\n\r\nimport MessageActionCreators from './MessageActionCreators';\r\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\r\n\r\nimport DialogStore from '../stores/DialogStore';\r\nimport AttachmentsStore from '../stores/AttachmentsStore';\r\n\r\nfunction sendAttachment(currentPeer, attachment) {\r\n  if (attachment.isAnimation && attachment.sendAsPicture) {\r\n    MessageActionCreators.sendAnimationMessage(currentPeer, attachment.file);\r\n  } else if (attachment.isImage && attachment.sendAsPicture) {\r\n    MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\r\n  } else {\r\n    MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\r\n  }\r\n}\r\n\r\nexport default {\r\n  show(attachments) {\r\n    const normalizedAttachments = attachments.map((file) => {\r\n      if (file instanceof File == false) {\r\n        file = blobToFile(file);\r\n      }\r\n\r\n      return {\r\n        isImage: file.type.includes('image'),\r\n        isAnimation: file.type === 'image/gif',\r\n        sendAsPicture: true,\r\n        file\r\n      }\r\n    });\r\n\r\n    dispatch(ActionTypes.ATTACHMENT_MODAL_SHOW, { attachments: normalizedAttachments });\r\n    ComposeActionCreators.toggleAutoFocus(false);\r\n  },\r\n\r\n  hide() {\r\n    dispatch(ActionTypes.ATTACHMENT_MODAL_HIDE);\r\n    ComposeActionCreators.toggleAutoFocus(true);\r\n  },\r\n\r\n  selectAttachment(index) {\r\n    dispatch(ActionTypes.ATTACHMENT_SELECT, { index })\r\n  },\r\n\r\n  changeAttachment(sendAsPicture) {\r\n    dispatch(ActionTypes.ATTACHMENT_CHANGE, { sendAsPicture });\r\n  },\r\n\r\n  deleteAttachment() {\r\n    dispatch(ActionTypes.ATTACHMENT_DELETE);\r\n    if (AttachmentsStore.getAllAttachments().length === 0) {\r\n      this.hide();\r\n    }\r\n  },\r\n\r\n  sendAttachment() {\r\n    const currentPeer = DialogStore.getCurrentPeer();\r\n    const attachment = AttachmentsStore.getAttachment();\r\n\r\n    sendAttachment(currentPeer, attachment);\r\n\r\n    dispatch(ActionTypes.ATTACHMENT_SEND);\r\n\r\n    if (AttachmentsStore.getAllAttachments().length === 0) {\r\n      this.hide();\r\n    }\r\n\r\n    ComposeActionCreators.toggleAutoFocus(true);\r\n  },\r\n\r\n  sendAll(attachments) {\r\n    const currentPeer = DialogStore.getCurrentPeer();\r\n\r\n    attachments.forEach((attachment) => {\r\n      sendAttachment(currentPeer, attachment);\r\n    });\r\n\r\n    dispatch(ActionTypes.ATTACHMENT_SEND_ALL, { attachments });\r\n    this.hide();\r\n    ComposeActionCreators.toggleAutoFocus(true);\r\n  }\r\n}\r\n"]}
{"version":3,"sources":["../../src/actions/ActionCreators.js"],"names":["ActionCreators","bindings","Map","setBindings","namespace","has","console","error","constructor","name","set","addBinding","binding","get","push","removeBindings","i","length","unbind","delete","warn"],"mappings":";;;;;;AAAA;;;;IAIMA,c;AACJ,4BAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACD;;2BAEDC,W,wBAAYC,S,EAAWH,Q,EAAU;AAC/B,QAAI,KAAKA,QAAL,CAAcI,GAAd,CAAkBD,SAAlB,CAAJ,EAAkC;AAChCE,cAAQC,KAAR,CAAc,8DAAd,EAA8E,KAAKC,WAAL,CAAiBC,IAA/F,EAAqGL,SAArG;AACD,KAFD,MAEO;AACL,WAAKH,QAAL,CAAcS,GAAd,CAAkBN,SAAlB,EAA6BH,QAA7B;AACD;AACF,G;;2BAEDU,U,uBAAWP,S,EAAWQ,O,EAAS;AAC3B,QAAI,CAAC,KAAKX,QAAL,CAAcI,GAAd,CAAkBD,SAAlB,CAAL,EAAmC;AAC/BE,cAAQC,KAAR,CAAc,2DAAd,EAA2E,KAAKC,WAAL,CAAiBC,IAA5F,EAAkGL,SAAlG;AACH,KAFD,MAEO;AACH,WAAKH,QAAL,CAAcY,GAAd,CAAkBT,SAAlB,EAA6BU,IAA7B,CAAkCF,OAAlC;AACH;AACJ,G;;2BAEDG,c,2BAAeX,S,EAAW;AACxB,QAAMH,WAAW,KAAKA,QAAL,CAAcY,GAAd,CAAkBT,SAAlB,CAAjB;AACA,QAAIH,QAAJ,EAAc;AACZ,WAAK,IAAIe,IAAI,CAAb,EAAgBA,IAAIf,SAASgB,MAA7B,EAAqCD,GAArC,EAA0C;AACxCf,iBAASe,CAAT,EAAYE,MAAZ;AACAjB,iBAASe,CAAT,IAAc,IAAd;AACD;;AAED,WAAKf,QAAL,CAAckB,MAAd,CAAqBf,SAArB;AACD,KAPD,MAOO;AACLE,cAAQc,IAAR,CAAa,6DAAb,EAA4E,KAAKZ,WAAL,CAAiBC,IAA7F,EAAmGL,SAAnG;AACD;AACF,G;;;;;kBAGYJ,c","file":"ActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nclass ActionCreators {\n  constructor() {\n    this.bindings = new Map();\n  }\n\n  setBindings(namespace, bindings) {\n    if (this.bindings.has(namespace)) {\n      console.error('You are trying to set bindings \"%s#%s\" before it was removed', this.constructor.name, namespace);\n    } else {\n      this.bindings.set(namespace, bindings)\n    }\n  }\n\n  addBinding(namespace, binding) {\n      if (!this.bindings.has(namespace)) {\n          console.error('You are trying to set bindings \"%s#%s\" but its not exists', this.constructor.name, namespace);\n      } else {\n          this.bindings.get(namespace).push(binding);\n      }\n  }\n\n  removeBindings(namespace) {\n    const bindings = this.bindings.get(namespace);\n    if (bindings) {\n      for (let i = 0; i < bindings.length; i++) {\n        bindings[i].unbind();\n        bindings[i] = null;\n      }\n\n      this.bindings.delete(namespace);\n    } else {\n      console.warn('You are trying to remove bindings \"%s#%s\" before it was set', this.constructor.name, namespace);\n    }\n  }\n}\n\nexport default ActionCreators;\n"]}